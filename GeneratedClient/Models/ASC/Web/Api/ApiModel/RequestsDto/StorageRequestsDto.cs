// <auto-generated/>
#pragma warning disable CS0618
using KiotaPosts.Client.Models.ASC.Api.Collections.ItemKeyValuePair.System.StringNamespace.System;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace KiotaPosts.Client.Models.ASC.Web.Api.ApiModel.RequestsDto
{
    /// <summary>
    /// Storage settings request parameters
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class StorageRequestsDto : IParsable
    {
        /// <summary>Storage name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Module { get; set; }
#nullable restore
#else
        public string Module { get; set; }
#endif
        /// <summary>Storage properties</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::KiotaPosts.Client.Models.ASC.Api.Collections.ItemKeyValuePair.System.StringNamespace.System.StringObject>? Props { get; set; }
#nullable restore
#else
        public List<global::KiotaPosts.Client.Models.ASC.Api.Collections.ItemKeyValuePair.System.StringNamespace.System.StringObject> Props { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::KiotaPosts.Client.Models.ASC.Web.Api.ApiModel.RequestsDto.StorageRequestsDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::KiotaPosts.Client.Models.ASC.Web.Api.ApiModel.RequestsDto.StorageRequestsDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::KiotaPosts.Client.Models.ASC.Web.Api.ApiModel.RequestsDto.StorageRequestsDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "module", n => { Module = n.GetStringValue(); } },
                { "props", n => { Props = n.GetCollectionOfObjectValues<global::KiotaPosts.Client.Models.ASC.Api.Collections.ItemKeyValuePair.System.StringNamespace.System.StringObject>(global::KiotaPosts.Client.Models.ASC.Api.Collections.ItemKeyValuePair.System.StringNamespace.System.StringObject.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("module", Module);
            writer.WriteCollectionOfObjectValues<global::KiotaPosts.Client.Models.ASC.Api.Collections.ItemKeyValuePair.System.StringNamespace.System.StringObject>("props", Props);
        }
    }
}
#pragma warning restore CS0618
