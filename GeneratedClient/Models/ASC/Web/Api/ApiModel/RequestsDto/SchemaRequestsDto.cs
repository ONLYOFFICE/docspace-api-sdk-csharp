// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace KiotaPosts.Client.Models.ASC.Web.Api.ApiModel.RequestsDto
{
    /// <summary>
    /// Team template parameters
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class SchemaRequestsDto : IParsable
    {
        /// <summary>Group caption</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? GroupCaption { get; set; }
#nullable restore
#else
        public string GroupCaption { get; set; }
#endif
        /// <summary>Group lead caption</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? GroupHeadCaption { get; set; }
#nullable restore
#else
        public string GroupHeadCaption { get; set; }
#endif
        /// <summary>Groups caption</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? GroupsCaption { get; set; }
#nullable restore
#else
        public string GroupsCaption { get; set; }
#endif
        /// <summary>Guest caption</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? GuestCaption { get; set; }
#nullable restore
#else
        public string GuestCaption { get; set; }
#endif
        /// <summary>Guests caption</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? GuestsCaption { get; set; }
#nullable restore
#else
        public string GuestsCaption { get; set; }
#endif
        /// <summary>Team template ID</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>Team template name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Registration date caption</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RegDateCaption { get; set; }
#nullable restore
#else
        public string RegDateCaption { get; set; }
#endif
        /// <summary>User caption</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserCaption { get; set; }
#nullable restore
#else
        public string UserCaption { get; set; }
#endif
        /// <summary>User status caption</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserPostCaption { get; set; }
#nullable restore
#else
        public string UserPostCaption { get; set; }
#endif
        /// <summary>Users caption</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UsersCaption { get; set; }
#nullable restore
#else
        public string UsersCaption { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::KiotaPosts.Client.Models.ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::KiotaPosts.Client.Models.ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::KiotaPosts.Client.Models.ASC.Web.Api.ApiModel.RequestsDto.SchemaRequestsDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "groupCaption", n => { GroupCaption = n.GetStringValue(); } },
                { "groupHeadCaption", n => { GroupHeadCaption = n.GetStringValue(); } },
                { "groupsCaption", n => { GroupsCaption = n.GetStringValue(); } },
                { "guestCaption", n => { GuestCaption = n.GetStringValue(); } },
                { "guestsCaption", n => { GuestsCaption = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "regDateCaption", n => { RegDateCaption = n.GetStringValue(); } },
                { "userCaption", n => { UserCaption = n.GetStringValue(); } },
                { "userPostCaption", n => { UserPostCaption = n.GetStringValue(); } },
                { "usersCaption", n => { UsersCaption = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("groupCaption", GroupCaption);
            writer.WriteStringValue("groupHeadCaption", GroupHeadCaption);
            writer.WriteStringValue("groupsCaption", GroupsCaption);
            writer.WriteStringValue("guestCaption", GuestCaption);
            writer.WriteStringValue("guestsCaption", GuestsCaption);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("regDateCaption", RegDateCaption);
            writer.WriteStringValue("userCaption", UserCaption);
            writer.WriteStringValue("userPostCaption", UserPostCaption);
            writer.WriteStringValue("usersCaption", UsersCaption);
        }
    }
}
#pragma warning restore CS0618
