// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace KiotaPosts.Client.Models.ASC.Web.Api.ApiModel.RequestsDto
{
    /// <summary>
    /// TFA settings request parameters
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class TfaRequestsDto : IParsable
    {
        /// <summary>User ID</summary>
        public Guid? Id { get; set; }
        /// <summary>List of groups who must use the TFA verification</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Guid?>? MandatoryGroups { get; set; }
#nullable restore
#else
        public List<Guid?> MandatoryGroups { get; set; }
#endif
        /// <summary>List of users who must use the TFA verification</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Guid?>? MandatoryUsers { get; set; }
#nullable restore
#else
        public List<Guid?> MandatoryUsers { get; set; }
#endif
        /// <summary>List of trusted IP addresses</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? TrustedIps { get; set; }
#nullable restore
#else
        public List<string> TrustedIps { get; set; }
#endif
        /// <summary>[0 - None, 1 - Sms, 2 - App]</summary>
        public int? Type { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::KiotaPosts.Client.Models.ASC.Web.Api.ApiModel.RequestsDto.TfaRequestsDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::KiotaPosts.Client.Models.ASC.Web.Api.ApiModel.RequestsDto.TfaRequestsDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::KiotaPosts.Client.Models.ASC.Web.Api.ApiModel.RequestsDto.TfaRequestsDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "id", n => { Id = n.GetGuidValue(); } },
                { "mandatoryGroups", n => { MandatoryGroups = n.GetCollectionOfPrimitiveValues<Guid?>()?.AsList(); } },
                { "mandatoryUsers", n => { MandatoryUsers = n.GetCollectionOfPrimitiveValues<Guid?>()?.AsList(); } },
                { "trustedIps", n => { TrustedIps = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "type", n => { Type = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteGuidValue("id", Id);
            writer.WriteCollectionOfPrimitiveValues<Guid?>("mandatoryGroups", MandatoryGroups);
            writer.WriteCollectionOfPrimitiveValues<Guid?>("mandatoryUsers", MandatoryUsers);
            writer.WriteCollectionOfPrimitiveValues<string>("trustedIps", TrustedIps);
            writer.WriteIntValue("type", Type);
        }
    }
}
#pragma warning restore CS0618
