// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class PermissionsConfig : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Change history</summary>
        public bool? ChangeHistory { get; set; }
        /// <summary>Chat</summary>
        public bool? Chat { get; set; }
        /// <summary>Comment</summary>
        public bool? Comment { get; set; }
        /// <summary>Copy</summary>
        public bool? Copy { get; set; }
        /// <summary>Download</summary>
        public bool? Download { get; set; }
        /// <summary>Edit</summary>
        public bool? Edit { get; set; }
        /// <summary>FillForms</summary>
        public bool? FillForms { get; set; }
        /// <summary>ModifyFilter</summary>
        public bool? ModifyFilter { get; set; }
        /// <summary>Print</summary>
        public bool? Print { get; set; }
        /// <summary>Protect</summary>
        public bool? Protect { get; set; }
        /// <summary>Rename</summary>
        public bool? Rename { get; set; }
        /// <summary>Review</summary>
        public bool? Review { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.PermissionsConfig"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.PermissionsConfig CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.PermissionsConfig();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "changeHistory", n => { ChangeHistory = n.GetBoolValue(); } },
                { "chat", n => { Chat = n.GetBoolValue(); } },
                { "comment", n => { Comment = n.GetBoolValue(); } },
                { "copy", n => { Copy = n.GetBoolValue(); } },
                { "download", n => { Download = n.GetBoolValue(); } },
                { "edit", n => { Edit = n.GetBoolValue(); } },
                { "fillForms", n => { FillForms = n.GetBoolValue(); } },
                { "modifyFilter", n => { ModifyFilter = n.GetBoolValue(); } },
                { "print", n => { Print = n.GetBoolValue(); } },
                { "protect", n => { Protect = n.GetBoolValue(); } },
                { "rename", n => { Rename = n.GetBoolValue(); } },
                { "review", n => { Review = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("changeHistory", ChangeHistory);
            writer.WriteBoolValue("chat", Chat);
            writer.WriteBoolValue("comment", Comment);
            writer.WriteBoolValue("copy", Copy);
            writer.WriteBoolValue("download", Download);
            writer.WriteBoolValue("edit", Edit);
            writer.WriteBoolValue("fillForms", FillForms);
            writer.WriteBoolValue("modifyFilter", ModifyFilter);
            writer.WriteBoolValue("print", Print);
            writer.WriteBoolValue("protect", Protect);
            writer.WriteBoolValue("rename", Rename);
            writer.WriteBoolValue("review", Review);
        }
    }
}
#pragma warning restore CS0618
