// <auto-generated/>
#pragma warning disable CS0618
using KiotaPosts.Client.Models.ASC.Files.Core;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace KiotaPosts.Client.Models.ASC.Web.Files.Services.WCFService
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ThirdPartyParams : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The auth_data property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.ASC.Files.Core.AuthData? AuthData { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.ASC.Files.Core.AuthData AuthData { get; set; }
#endif
        /// <summary>Specifies if this is a corporate account or not</summary>
        public bool? Corporate { get; set; }
        /// <summary>Customer title</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerTitle { get; set; }
#nullable restore
#else
        public string CustomerTitle { get; set; }
#endif
        /// <summary>Provider ID</summary>
        public int? ProviderId { get; set; }
        /// <summary>Provider key</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProviderKey { get; set; }
#nullable restore
#else
        public string ProviderKey { get; set; }
#endif
        /// <summary>Specifies if this is a room storage or not</summary>
        public bool? RoomsStorage { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::KiotaPosts.Client.Models.ASC.Web.Files.Services.WCFService.ThirdPartyParams"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::KiotaPosts.Client.Models.ASC.Web.Files.Services.WCFService.ThirdPartyParams CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::KiotaPosts.Client.Models.ASC.Web.Files.Services.WCFService.ThirdPartyParams();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "auth_data", n => { AuthData = n.GetObjectValue<global::KiotaPosts.Client.Models.ASC.Files.Core.AuthData>(global::KiotaPosts.Client.Models.ASC.Files.Core.AuthData.CreateFromDiscriminatorValue); } },
                { "corporate", n => { Corporate = n.GetBoolValue(); } },
                { "customer_title", n => { CustomerTitle = n.GetStringValue(); } },
                { "provider_id", n => { ProviderId = n.GetIntValue(); } },
                { "provider_key", n => { ProviderKey = n.GetStringValue(); } },
                { "roomsStorage", n => { RoomsStorage = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.ASC.Files.Core.AuthData>("auth_data", AuthData);
            writer.WriteBoolValue("corporate", Corporate);
            writer.WriteStringValue("customer_title", CustomerTitle);
            writer.WriteIntValue("provider_id", ProviderId);
            writer.WriteStringValue("provider_key", ProviderKey);
            writer.WriteBoolValue("roomsStorage", RoomsStorage);
        }
    }
}
#pragma warning restore CS0618
