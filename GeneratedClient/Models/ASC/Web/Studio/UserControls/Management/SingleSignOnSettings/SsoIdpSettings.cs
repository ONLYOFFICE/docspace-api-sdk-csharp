// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace KiotaPosts.Client.Models.ASC.Web.Studio.UserControls.Management.SingleSignOnSettings
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class SsoIdpSettings : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Entity ID</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EntityId { get; set; }
#nullable restore
#else
        public string EntityId { get; set; }
#endif
        /// <summary>Name ID format</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? NameIdFormat { get; set; }
#nullable restore
#else
        public string NameIdFormat { get; set; }
#endif
        /// <summary>SLO binding</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SloBinding { get; set; }
#nullable restore
#else
        public string SloBinding { get; set; }
#endif
        /// <summary>SLO URL</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SloUrl { get; set; }
#nullable restore
#else
        public string SloUrl { get; set; }
#endif
        /// <summary>SSO binding</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SsoBinding { get; set; }
#nullable restore
#else
        public string SsoBinding { get; set; }
#endif
        /// <summary>SSO URL</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SsoUrl { get; set; }
#nullable restore
#else
        public string SsoUrl { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::KiotaPosts.Client.Models.ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoIdpSettings"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::KiotaPosts.Client.Models.ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoIdpSettings CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::KiotaPosts.Client.Models.ASC.Web.Studio.UserControls.Management.SingleSignOnSettings.SsoIdpSettings();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "entityId", n => { EntityId = n.GetStringValue(); } },
                { "nameIdFormat", n => { NameIdFormat = n.GetStringValue(); } },
                { "sloBinding", n => { SloBinding = n.GetStringValue(); } },
                { "sloUrl", n => { SloUrl = n.GetStringValue(); } },
                { "ssoBinding", n => { SsoBinding = n.GetStringValue(); } },
                { "ssoUrl", n => { SsoUrl = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("entityId", EntityId);
            writer.WriteStringValue("nameIdFormat", NameIdFormat);
            writer.WriteStringValue("sloBinding", SloBinding);
            writer.WriteStringValue("sloUrl", SloUrl);
            writer.WriteStringValue("ssoBinding", SsoBinding);
            writer.WriteStringValue("ssoUrl", SsoUrl);
        }
    }
}
#pragma warning restore CS0618
