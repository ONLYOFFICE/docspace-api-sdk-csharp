// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace KiotaPosts.Client.Models.ASC.Migration.Core.Models.Api
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class MigrationApiInfo : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The errors property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Errors { get; set; }
#nullable restore
#else
        public List<string> Errors { get; set; }
#endif
        /// <summary>The existUsers property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::KiotaPosts.Client.Models.ASC.Migration.Core.Models.Api.MigratingApiUser>? ExistUsers { get; set; }
#nullable restore
#else
        public List<global::KiotaPosts.Client.Models.ASC.Migration.Core.Models.Api.MigratingApiUser> ExistUsers { get; set; }
#endif
        /// <summary>The failedArchives property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? FailedArchives { get; set; }
#nullable restore
#else
        public List<string> FailedArchives { get; set; }
#endif
        /// <summary>The failedUsers property</summary>
        public int? FailedUsers { get; set; }
        /// <summary>The files property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Files { get; set; }
#nullable restore
#else
        public List<string> Files { get; set; }
#endif
        /// <summary>The groups property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::KiotaPosts.Client.Models.ASC.Migration.Core.Models.Api.MigratingApiGroup>? Groups { get; set; }
#nullable restore
#else
        public List<global::KiotaPosts.Client.Models.ASC.Migration.Core.Models.Api.MigratingApiGroup> Groups { get; set; }
#endif
        /// <summary>The importCommonFiles property</summary>
        public bool? ImportCommonFiles { get; set; }
        /// <summary>The importGroups property</summary>
        public bool? ImportGroups { get; set; }
        /// <summary>The importPersonalFiles property</summary>
        public bool? ImportPersonalFiles { get; set; }
        /// <summary>The importProjectFiles property</summary>
        public bool? ImportProjectFiles { get; set; }
        /// <summary>The importSharedFiles property</summary>
        public bool? ImportSharedFiles { get; set; }
        /// <summary>The importSharedFolders property</summary>
        public bool? ImportSharedFolders { get; set; }
        /// <summary>The migratorName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MigratorName { get; set; }
#nullable restore
#else
        public string MigratorName { get; set; }
#endif
        /// <summary>The operation property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Operation { get; set; }
#nullable restore
#else
        public string Operation { get; set; }
#endif
        /// <summary>The successedUsers property</summary>
        public int? SuccessedUsers { get; set; }
        /// <summary>The users property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::KiotaPosts.Client.Models.ASC.Migration.Core.Models.Api.MigratingApiUser>? Users { get; set; }
#nullable restore
#else
        public List<global::KiotaPosts.Client.Models.ASC.Migration.Core.Models.Api.MigratingApiUser> Users { get; set; }
#endif
        /// <summary>The withoutEmailUsers property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::KiotaPosts.Client.Models.ASC.Migration.Core.Models.Api.MigratingApiUser>? WithoutEmailUsers { get; set; }
#nullable restore
#else
        public List<global::KiotaPosts.Client.Models.ASC.Migration.Core.Models.Api.MigratingApiUser> WithoutEmailUsers { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::KiotaPosts.Client.Models.ASC.Migration.Core.Models.Api.MigrationApiInfo"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::KiotaPosts.Client.Models.ASC.Migration.Core.Models.Api.MigrationApiInfo CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::KiotaPosts.Client.Models.ASC.Migration.Core.Models.Api.MigrationApiInfo();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "errors", n => { Errors = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "existUsers", n => { ExistUsers = n.GetCollectionOfObjectValues<global::KiotaPosts.Client.Models.ASC.Migration.Core.Models.Api.MigratingApiUser>(global::KiotaPosts.Client.Models.ASC.Migration.Core.Models.Api.MigratingApiUser.CreateFromDiscriminatorValue)?.AsList(); } },
                { "failedArchives", n => { FailedArchives = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "failedUsers", n => { FailedUsers = n.GetIntValue(); } },
                { "files", n => { Files = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "groups", n => { Groups = n.GetCollectionOfObjectValues<global::KiotaPosts.Client.Models.ASC.Migration.Core.Models.Api.MigratingApiGroup>(global::KiotaPosts.Client.Models.ASC.Migration.Core.Models.Api.MigratingApiGroup.CreateFromDiscriminatorValue)?.AsList(); } },
                { "importCommonFiles", n => { ImportCommonFiles = n.GetBoolValue(); } },
                { "importGroups", n => { ImportGroups = n.GetBoolValue(); } },
                { "importPersonalFiles", n => { ImportPersonalFiles = n.GetBoolValue(); } },
                { "importProjectFiles", n => { ImportProjectFiles = n.GetBoolValue(); } },
                { "importSharedFiles", n => { ImportSharedFiles = n.GetBoolValue(); } },
                { "importSharedFolders", n => { ImportSharedFolders = n.GetBoolValue(); } },
                { "migratorName", n => { MigratorName = n.GetStringValue(); } },
                { "operation", n => { Operation = n.GetStringValue(); } },
                { "successedUsers", n => { SuccessedUsers = n.GetIntValue(); } },
                { "users", n => { Users = n.GetCollectionOfObjectValues<global::KiotaPosts.Client.Models.ASC.Migration.Core.Models.Api.MigratingApiUser>(global::KiotaPosts.Client.Models.ASC.Migration.Core.Models.Api.MigratingApiUser.CreateFromDiscriminatorValue)?.AsList(); } },
                { "withoutEmailUsers", n => { WithoutEmailUsers = n.GetCollectionOfObjectValues<global::KiotaPosts.Client.Models.ASC.Migration.Core.Models.Api.MigratingApiUser>(global::KiotaPosts.Client.Models.ASC.Migration.Core.Models.Api.MigratingApiUser.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfPrimitiveValues<string>("errors", Errors);
            writer.WriteCollectionOfObjectValues<global::KiotaPosts.Client.Models.ASC.Migration.Core.Models.Api.MigratingApiUser>("existUsers", ExistUsers);
            writer.WriteCollectionOfPrimitiveValues<string>("failedArchives", FailedArchives);
            writer.WriteIntValue("failedUsers", FailedUsers);
            writer.WriteCollectionOfPrimitiveValues<string>("files", Files);
            writer.WriteCollectionOfObjectValues<global::KiotaPosts.Client.Models.ASC.Migration.Core.Models.Api.MigratingApiGroup>("groups", Groups);
            writer.WriteBoolValue("importCommonFiles", ImportCommonFiles);
            writer.WriteBoolValue("importGroups", ImportGroups);
            writer.WriteBoolValue("importPersonalFiles", ImportPersonalFiles);
            writer.WriteBoolValue("importProjectFiles", ImportProjectFiles);
            writer.WriteBoolValue("importSharedFiles", ImportSharedFiles);
            writer.WriteBoolValue("importSharedFolders", ImportSharedFolders);
            writer.WriteStringValue("migratorName", MigratorName);
            writer.WriteStringValue("operation", Operation);
            writer.WriteIntValue("successedUsers", SuccessedUsers);
            writer.WriteCollectionOfObjectValues<global::KiotaPosts.Client.Models.ASC.Migration.Core.Models.Api.MigratingApiUser>("users", Users);
            writer.WriteCollectionOfObjectValues<global::KiotaPosts.Client.Models.ASC.Migration.Core.Models.Api.MigratingApiUser>("withoutEmailUsers", WithoutEmailUsers);
        }
    }
}
#pragma warning restore CS0618
