// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace KiotaPosts.Client.Models.ASC.Migration.Core.Models.Api
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class MigratingApiGroup : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The groupName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? GroupName { get; set; }
#nullable restore
#else
        public string GroupName { get; set; }
#endif
        /// <summary>The moduleName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ModuleName { get; set; }
#nullable restore
#else
        public string ModuleName { get; set; }
#endif
        /// <summary>The shouldImport property</summary>
        public bool? ShouldImport { get; set; }
        /// <summary>The userUidList property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? UserUidList { get; set; }
#nullable restore
#else
        public List<string> UserUidList { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::KiotaPosts.Client.Models.ASC.Migration.Core.Models.Api.MigratingApiGroup"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::KiotaPosts.Client.Models.ASC.Migration.Core.Models.Api.MigratingApiGroup CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::KiotaPosts.Client.Models.ASC.Migration.Core.Models.Api.MigratingApiGroup();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "groupName", n => { GroupName = n.GetStringValue(); } },
                { "moduleName", n => { ModuleName = n.GetStringValue(); } },
                { "shouldImport", n => { ShouldImport = n.GetBoolValue(); } },
                { "userUidList", n => { UserUidList = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("groupName", GroupName);
            writer.WriteStringValue("moduleName", ModuleName);
            writer.WriteBoolValue("shouldImport", ShouldImport);
            writer.WriteCollectionOfPrimitiveValues<string>("userUidList", UserUidList);
        }
    }
}
#pragma warning restore CS0618
