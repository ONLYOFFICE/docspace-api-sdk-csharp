// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace KiotaPosts.Client.Models.ASC.Core.Common.EF.Model
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class DbTenantPartner : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Affiliate id</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AffiliateId { get; set; }
#nullable restore
#else
        public string AffiliateId { get; set; }
#endif
        /// <summary>Campaign</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Campaign { get; set; }
#nullable restore
#else
        public string Campaign { get; set; }
#endif
        /// <summary>Partner id</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PartnerId { get; set; }
#nullable restore
#else
        public string PartnerId { get; set; }
#endif
        /// <summary>Tenant id</summary>
        public int? TenantId { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::KiotaPosts.Client.Models.ASC.Core.Common.EF.Model.DbTenantPartner"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::KiotaPosts.Client.Models.ASC.Core.Common.EF.Model.DbTenantPartner CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::KiotaPosts.Client.Models.ASC.Core.Common.EF.Model.DbTenantPartner();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "affiliateId", n => { AffiliateId = n.GetStringValue(); } },
                { "campaign", n => { Campaign = n.GetStringValue(); } },
                { "partnerId", n => { PartnerId = n.GetStringValue(); } },
                { "tenantId", n => { TenantId = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("affiliateId", AffiliateId);
            writer.WriteStringValue("campaign", Campaign);
            writer.WriteStringValue("partnerId", PartnerId);
            writer.WriteIntValue("tenantId", TenantId);
        }
    }
}
#pragma warning restore CS0618
