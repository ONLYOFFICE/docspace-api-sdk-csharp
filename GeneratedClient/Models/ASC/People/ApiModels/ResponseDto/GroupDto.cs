// <auto-generated/>
#pragma warning disable CS0618
using KiotaPosts.Client.Models.ASC.Web.Api.Models;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace KiotaPosts.Client.Models.ASC.People.ApiModels.ResponseDto
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class GroupDto : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Category</summary>
        public Guid? Category { get; set; }
        /// <summary>ID</summary>
        public Guid? Id { get; set; }
        /// <summary>Specifies if the LDAP settings are enabled for the group or not</summary>
        public bool? IsLDAP { get; set; }
        /// <summary>The manager property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.ASC.Web.Api.Models.EmployeeFullDto? Manager { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.ASC.Web.Api.Models.EmployeeFullDto Manager { get; set; }
#endif
        /// <summary>List of members</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::KiotaPosts.Client.Models.ASC.Web.Api.Models.EmployeeFullDto>? Members { get; set; }
#nullable restore
#else
        public List<global::KiotaPosts.Client.Models.ASC.Web.Api.Models.EmployeeFullDto> Members { get; set; }
#endif
        /// <summary>Members count</summary>
        public int? MembersCount { get; set; }
        /// <summary>Name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Parent</summary>
        public Guid? Parent { get; set; }
        /// <summary>Shared</summary>
        public bool? Shared { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::KiotaPosts.Client.Models.ASC.People.ApiModels.ResponseDto.GroupDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::KiotaPosts.Client.Models.ASC.People.ApiModels.ResponseDto.GroupDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::KiotaPosts.Client.Models.ASC.People.ApiModels.ResponseDto.GroupDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "category", n => { Category = n.GetGuidValue(); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "isLDAP", n => { IsLDAP = n.GetBoolValue(); } },
                { "manager", n => { Manager = n.GetObjectValue<global::KiotaPosts.Client.Models.ASC.Web.Api.Models.EmployeeFullDto>(global::KiotaPosts.Client.Models.ASC.Web.Api.Models.EmployeeFullDto.CreateFromDiscriminatorValue); } },
                { "members", n => { Members = n.GetCollectionOfObjectValues<global::KiotaPosts.Client.Models.ASC.Web.Api.Models.EmployeeFullDto>(global::KiotaPosts.Client.Models.ASC.Web.Api.Models.EmployeeFullDto.CreateFromDiscriminatorValue)?.AsList(); } },
                { "membersCount", n => { MembersCount = n.GetIntValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "parent", n => { Parent = n.GetGuidValue(); } },
                { "shared", n => { Shared = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteGuidValue("category", Category);
            writer.WriteGuidValue("id", Id);
            writer.WriteBoolValue("isLDAP", IsLDAP);
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.ASC.Web.Api.Models.EmployeeFullDto>("manager", Manager);
            writer.WriteCollectionOfObjectValues<global::KiotaPosts.Client.Models.ASC.Web.Api.Models.EmployeeFullDto>("members", Members);
            writer.WriteIntValue("membersCount", MembersCount);
            writer.WriteStringValue("name", Name);
            writer.WriteGuidValue("parent", Parent);
            writer.WriteBoolValue("shared", Shared);
        }
    }
}
#pragma warning restore CS0618
