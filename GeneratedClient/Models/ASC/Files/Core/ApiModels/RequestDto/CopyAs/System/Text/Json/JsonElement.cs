// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.RequestDto.CopyAs.System.Text.Json
{
    /// <summary>
    /// Parameters for copying a file
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class JsonElement : IParsable
    {
        /// <summary>Destination folder ID</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.RequestDto.CopyAs.System.Text.Json.JsonElement.JsonElement_destFolderId? DestFolderId { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.RequestDto.CopyAs.System.Text.Json.JsonElement.JsonElement_destFolderId DestFolderId { get; set; }
#endif
        /// <summary>Destination file title</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DestTitle { get; set; }
#nullable restore
#else
        public string DestTitle { get; set; }
#endif
        /// <summary>Specifies whether to allow the creation of external extension files or not</summary>
        public bool? EnableExternalExt { get; set; }
        /// <summary>Password</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Password { get; set; }
#nullable restore
#else
        public string Password { get; set; }
#endif
        /// <summary>Convert to form</summary>
        public bool? ToForm { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.RequestDto.CopyAs.System.Text.Json.JsonElement"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.RequestDto.CopyAs.System.Text.Json.JsonElement CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.RequestDto.CopyAs.System.Text.Json.JsonElement();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "destFolderId", n => { DestFolderId = n.GetObjectValue<global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.RequestDto.CopyAs.System.Text.Json.JsonElement.JsonElement_destFolderId>(global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.RequestDto.CopyAs.System.Text.Json.JsonElement.JsonElement_destFolderId.CreateFromDiscriminatorValue); } },
                { "destTitle", n => { DestTitle = n.GetStringValue(); } },
                { "enableExternalExt", n => { EnableExternalExt = n.GetBoolValue(); } },
                { "password", n => { Password = n.GetStringValue(); } },
                { "toForm", n => { ToForm = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.RequestDto.CopyAs.System.Text.Json.JsonElement.JsonElement_destFolderId>("destFolderId", DestFolderId);
            writer.WriteStringValue("destTitle", DestTitle);
            writer.WriteBoolValue("enableExternalExt", EnableExternalExt);
            writer.WriteStringValue("password", Password);
            writer.WriteBoolValue("toForm", ToForm);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="int"/>, <see cref="string"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class JsonElement_destFolderId : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="int"/></summary>
            public int? Integer { get; set; }
            /// <summary>Composed type representation for type <see cref="string"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public string? String { get; set; }
#nullable restore
#else
            public string String { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.RequestDto.CopyAs.System.Text.Json.JsonElement.JsonElement_destFolderId"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.RequestDto.CopyAs.System.Text.Json.JsonElement.JsonElement_destFolderId CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
                var result = new global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.RequestDto.CopyAs.System.Text.Json.JsonElement.JsonElement_destFolderId();
                if(parseNode.GetIntValue() is int integerValue)
                {
                    result.Integer = integerValue;
                }
                else if(parseNode.GetStringValue() is string stringValue)
                {
                    result.String = stringValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(Integer != null)
                {
                    writer.WriteIntValue(null, Integer);
                }
                else if(String != null)
                {
                    writer.WriteStringValue(null, String);
                }
            }
        }
    }
}
#pragma warning restore CS0618
