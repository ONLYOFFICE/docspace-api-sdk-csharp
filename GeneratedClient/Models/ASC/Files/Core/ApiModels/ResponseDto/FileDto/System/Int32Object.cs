// <auto-generated/>
#pragma warning disable CS0618
using KiotaPosts.Client.Models.ASC.Api.Core;
using KiotaPosts.Client.Models.ASC.Web.Api.Models;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.FileDto.System
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Int32Object : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>[0 - None, 1 - Read and write, 2 - Read, 3 - Restrict, 4 - Varies, 5 - Review, 6 - Comment, 7 - Fill forms, 8 - Custom filter, 9 - Room manager, 10 - Editing, 11 - Content creator]</summary>
        public int? Access { get; set; }
        /// <summary>The autoDelete property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.ASC.Api.Core.ApiDateTime? AutoDelete { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.ASC.Api.Core.ApiDateTime AutoDelete { get; set; }
#endif
        /// <summary>Available external rights</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32_availableExternalRights? AvailableExternalRights { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32_availableExternalRights AvailableExternalRights { get; set; }
#endif
        /// <summary>Can share</summary>
        public bool? CanShare { get; set; }
        /// <summary>Comment</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Comment { get; set; }
#nullable restore
#else
        public string Comment { get; set; }
#endif
        /// <summary>Content length</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ContentLength { get; set; }
#nullable restore
#else
        public string ContentLength { get; set; }
#endif
        /// <summary>The created property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.ASC.Api.Core.ApiDateTime? Created { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.ASC.Api.Core.ApiDateTime Created { get; set; }
#endif
        /// <summary>The createdBy property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.ASC.Web.Api.Models.EmployeeDto? CreatedBy { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.ASC.Web.Api.Models.EmployeeDto CreatedBy { get; set; }
#endif
        /// <summary>The draftLocation property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.DraftLocation.System.Int32Object? DraftLocation { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.DraftLocation.System.Int32Object DraftLocation { get; set; }
#endif
        /// <summary>Encrypted or not</summary>
        public bool? Encrypted { get; set; }
        /// <summary>The expired property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.ASC.Api.Core.ApiDateTime? Expired { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.ASC.Api.Core.ApiDateTime Expired { get; set; }
#endif
        /// <summary>The fileEntryType property</summary>
        public int? FileEntryType { get; set; }
        /// <summary>File extension</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FileExst { get; set; }
#nullable restore
#else
        public string FileExst { get; set; }
#endif
        /// <summary>[0 - None, 1 - Is editing, 2 - Is new, 4 - Is converting, 8 - Is original, 16 - Is editing alone, 32 - Is favorite, 64 - Is template, 128 - Is fill form draft]</summary>
        public int? FileStatus { get; set; }
        /// <summary>[0 - Unknown, 1 - Archive, 2 - Video, 3 - Audio, 4 - Image, 5 - Spreadsheet, 6 - Presentation, 7 - Document, 10 - Pdf]</summary>
        public int? FileType { get; set; }
        /// <summary>Folder ID</summary>
        public int? FolderId { get; set; }
        /// <summary>Is there a draft or not</summary>
        public bool? HasDraft { get; set; }
        /// <summary>Id</summary>
        public int? Id { get; set; }
        /// <summary>InProcess folder ID</summary>
        public int? InProcessFolderId { get; set; }
        /// <summary>InProcess folder title</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InProcessFolderTitle { get; set; }
#nullable restore
#else
        public string InProcessFolderTitle { get; set; }
#endif
        /// <summary>Is there a form or not</summary>
        public bool? IsForm { get; set; }
        /// <summary>The lastOpened property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.ASC.Api.Core.ApiDateTime? LastOpened { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.ASC.Api.Core.ApiDateTime LastOpened { get; set; }
#endif
        /// <summary>Locked or not</summary>
        public bool? Locked { get; set; }
        /// <summary>User ID who locked a file</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LockedBy { get; set; }
#nullable restore
#else
        public string LockedBy { get; set; }
#endif
        /// <summary>Muted or not</summary>
        public bool? Mute { get; set; }
        /// <summary>Order</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Order { get; set; }
#nullable restore
#else
        public string Order { get; set; }
#endif
        /// <summary>Origin id</summary>
        public int? OriginId { get; set; }
        /// <summary>Origin room id</summary>
        public int? OriginRoomId { get; set; }
        /// <summary>Origin room title</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OriginRoomTitle { get; set; }
#nullable restore
#else
        public string OriginRoomTitle { get; set; }
#endif
        /// <summary>Origin title</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OriginTitle { get; set; }
#nullable restore
#else
        public string OriginTitle { get; set; }
#endif
        /// <summary>[0 - Default, 1 - Coomon, 2 - Bunch, 3 - Trash, 5 - User, 6 - Share, 8 - Projects, 10 - Favourites, 11 - Recent, 12 - Templates, 13 - Privacy, 14 - Virtual rooms, 15 - Filling forms room, 16 - Editing room, 19 - Custom room, 20 - Archive, 21 - Thirdparty backup, 22 - Public room, 25 - Ready form folder, 26 - In process form folder, 27 - Form filling folder done, 28 - Form filling folder in progress, 29 - Virtual Data Room]</summary>
        public int? ParentRoomType { get; set; }
        /// <summary>Provider ID</summary>
        public int? ProviderId { get; set; }
        /// <summary>Provider is specified or not</summary>
        public bool? ProviderItem { get; set; }
        /// <summary>Provider key</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProviderKey { get; set; }
#nullable restore
#else
        public string ProviderKey { get; set; }
#endif
        /// <summary>Pure content length</summary>
        public long? PureContentLength { get; set; }
        /// <summary>The requestToken property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RequestToken { get; set; }
#nullable restore
#else
        public string RequestToken { get; set; }
#endif
        /// <summary>Root folder id</summary>
        public int? RootFolderId { get; set; }
        /// <summary>[0 - Default, 1 - Coomon, 2 - Bunch, 3 - Trash, 5 - User, 6 - Share, 8 - Projects, 10 - Favourites, 11 - Recent, 12 - Templates, 13 - Privacy, 14 - Virtual rooms, 15 - Filling forms room, 16 - Editing room, 19 - Custom room, 20 - Archive, 21 - Thirdparty backup, 22 - Public room, 25 - Ready form folder, 26 - In process form folder, 27 - Form filling folder done, 28 - Form filling folder in progress, 29 - Virtual Data Room]</summary>
        public int? RootFolderType { get; set; }
        /// <summary>Security</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32_security? Security { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32_security Security { get; set; }
#endif
        /// <summary>Specifies if the file is shared or not</summary>
        public bool? Shared { get; set; }
        /// <summary>Specifies if the filling has started or not</summary>
        public bool? StartFilling { get; set; }
        /// <summary>[0 - Waiting, 1 - Created, 2 - Error, 3 - Not required, 4 - Creating]</summary>
        public int? ThumbnailStatus { get; set; }
        /// <summary>Thumbnail URL</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ThumbnailUrl { get; set; }
#nullable restore
#else
        public string ThumbnailUrl { get; set; }
#endif
        /// <summary>Title</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title { get; set; }
#nullable restore
#else
        public string Title { get; set; }
#endif
        /// <summary>The updated property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.ASC.Api.Core.ApiDateTime? Updated { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.ASC.Api.Core.ApiDateTime Updated { get; set; }
#endif
        /// <summary>The updatedBy property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.ASC.Web.Api.Models.EmployeeDto? UpdatedBy { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.ASC.Web.Api.Models.EmployeeDto UpdatedBy { get; set; }
#endif
        /// <summary>Version</summary>
        public int? Version { get; set; }
        /// <summary>Version group</summary>
        public int? VersionGroup { get; set; }
        /// <summary>File accessibility</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32_viewAccessibility? ViewAccessibility { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32_viewAccessibility ViewAccessibility { get; set; }
#endif
        /// <summary>URL to view a file</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ViewUrl { get; set; }
#nullable restore
#else
        public string ViewUrl { get; set; }
#endif
        /// <summary>Web URL</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WebUrl { get; set; }
#nullable restore
#else
        public string WebUrl { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32Object"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32Object CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32Object();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "access", n => { Access = n.GetIntValue(); } },
                { "autoDelete", n => { AutoDelete = n.GetObjectValue<global::KiotaPosts.Client.Models.ASC.Api.Core.ApiDateTime>(global::KiotaPosts.Client.Models.ASC.Api.Core.ApiDateTime.CreateFromDiscriminatorValue); } },
                { "availableExternalRights", n => { AvailableExternalRights = n.GetObjectValue<global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32_availableExternalRights>(global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32_availableExternalRights.CreateFromDiscriminatorValue); } },
                { "canShare", n => { CanShare = n.GetBoolValue(); } },
                { "comment", n => { Comment = n.GetStringValue(); } },
                { "contentLength", n => { ContentLength = n.GetStringValue(); } },
                { "created", n => { Created = n.GetObjectValue<global::KiotaPosts.Client.Models.ASC.Api.Core.ApiDateTime>(global::KiotaPosts.Client.Models.ASC.Api.Core.ApiDateTime.CreateFromDiscriminatorValue); } },
                { "createdBy", n => { CreatedBy = n.GetObjectValue<global::KiotaPosts.Client.Models.ASC.Web.Api.Models.EmployeeDto>(global::KiotaPosts.Client.Models.ASC.Web.Api.Models.EmployeeDto.CreateFromDiscriminatorValue); } },
                { "draftLocation", n => { DraftLocation = n.GetObjectValue<global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.DraftLocation.System.Int32Object>(global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.DraftLocation.System.Int32Object.CreateFromDiscriminatorValue); } },
                { "encrypted", n => { Encrypted = n.GetBoolValue(); } },
                { "expired", n => { Expired = n.GetObjectValue<global::KiotaPosts.Client.Models.ASC.Api.Core.ApiDateTime>(global::KiotaPosts.Client.Models.ASC.Api.Core.ApiDateTime.CreateFromDiscriminatorValue); } },
                { "fileEntryType", n => { FileEntryType = n.GetIntValue(); } },
                { "fileExst", n => { FileExst = n.GetStringValue(); } },
                { "fileStatus", n => { FileStatus = n.GetIntValue(); } },
                { "fileType", n => { FileType = n.GetIntValue(); } },
                { "folderId", n => { FolderId = n.GetIntValue(); } },
                { "hasDraft", n => { HasDraft = n.GetBoolValue(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "inProcessFolderId", n => { InProcessFolderId = n.GetIntValue(); } },
                { "inProcessFolderTitle", n => { InProcessFolderTitle = n.GetStringValue(); } },
                { "isForm", n => { IsForm = n.GetBoolValue(); } },
                { "lastOpened", n => { LastOpened = n.GetObjectValue<global::KiotaPosts.Client.Models.ASC.Api.Core.ApiDateTime>(global::KiotaPosts.Client.Models.ASC.Api.Core.ApiDateTime.CreateFromDiscriminatorValue); } },
                { "locked", n => { Locked = n.GetBoolValue(); } },
                { "lockedBy", n => { LockedBy = n.GetStringValue(); } },
                { "mute", n => { Mute = n.GetBoolValue(); } },
                { "order", n => { Order = n.GetStringValue(); } },
                { "originId", n => { OriginId = n.GetIntValue(); } },
                { "originRoomId", n => { OriginRoomId = n.GetIntValue(); } },
                { "originRoomTitle", n => { OriginRoomTitle = n.GetStringValue(); } },
                { "originTitle", n => { OriginTitle = n.GetStringValue(); } },
                { "parentRoomType", n => { ParentRoomType = n.GetIntValue(); } },
                { "providerId", n => { ProviderId = n.GetIntValue(); } },
                { "providerItem", n => { ProviderItem = n.GetBoolValue(); } },
                { "providerKey", n => { ProviderKey = n.GetStringValue(); } },
                { "pureContentLength", n => { PureContentLength = n.GetLongValue(); } },
                { "requestToken", n => { RequestToken = n.GetStringValue(); } },
                { "rootFolderId", n => { RootFolderId = n.GetIntValue(); } },
                { "rootFolderType", n => { RootFolderType = n.GetIntValue(); } },
                { "security", n => { Security = n.GetObjectValue<global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32_security>(global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32_security.CreateFromDiscriminatorValue); } },
                { "shared", n => { Shared = n.GetBoolValue(); } },
                { "startFilling", n => { StartFilling = n.GetBoolValue(); } },
                { "thumbnailStatus", n => { ThumbnailStatus = n.GetIntValue(); } },
                { "thumbnailUrl", n => { ThumbnailUrl = n.GetStringValue(); } },
                { "title", n => { Title = n.GetStringValue(); } },
                { "updated", n => { Updated = n.GetObjectValue<global::KiotaPosts.Client.Models.ASC.Api.Core.ApiDateTime>(global::KiotaPosts.Client.Models.ASC.Api.Core.ApiDateTime.CreateFromDiscriminatorValue); } },
                { "updatedBy", n => { UpdatedBy = n.GetObjectValue<global::KiotaPosts.Client.Models.ASC.Web.Api.Models.EmployeeDto>(global::KiotaPosts.Client.Models.ASC.Web.Api.Models.EmployeeDto.CreateFromDiscriminatorValue); } },
                { "version", n => { Version = n.GetIntValue(); } },
                { "versionGroup", n => { VersionGroup = n.GetIntValue(); } },
                { "viewAccessibility", n => { ViewAccessibility = n.GetObjectValue<global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32_viewAccessibility>(global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32_viewAccessibility.CreateFromDiscriminatorValue); } },
                { "viewUrl", n => { ViewUrl = n.GetStringValue(); } },
                { "webUrl", n => { WebUrl = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("access", Access);
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.ASC.Api.Core.ApiDateTime>("autoDelete", AutoDelete);
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32_availableExternalRights>("availableExternalRights", AvailableExternalRights);
            writer.WriteBoolValue("canShare", CanShare);
            writer.WriteStringValue("comment", Comment);
            writer.WriteStringValue("contentLength", ContentLength);
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.ASC.Api.Core.ApiDateTime>("created", Created);
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.ASC.Web.Api.Models.EmployeeDto>("createdBy", CreatedBy);
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.DraftLocation.System.Int32Object>("draftLocation", DraftLocation);
            writer.WriteBoolValue("encrypted", Encrypted);
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.ASC.Api.Core.ApiDateTime>("expired", Expired);
            writer.WriteIntValue("fileEntryType", FileEntryType);
            writer.WriteStringValue("fileExst", FileExst);
            writer.WriteIntValue("fileStatus", FileStatus);
            writer.WriteIntValue("fileType", FileType);
            writer.WriteIntValue("folderId", FolderId);
            writer.WriteBoolValue("hasDraft", HasDraft);
            writer.WriteIntValue("id", Id);
            writer.WriteIntValue("inProcessFolderId", InProcessFolderId);
            writer.WriteStringValue("inProcessFolderTitle", InProcessFolderTitle);
            writer.WriteBoolValue("isForm", IsForm);
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.ASC.Api.Core.ApiDateTime>("lastOpened", LastOpened);
            writer.WriteBoolValue("locked", Locked);
            writer.WriteStringValue("lockedBy", LockedBy);
            writer.WriteBoolValue("mute", Mute);
            writer.WriteStringValue("order", Order);
            writer.WriteIntValue("originId", OriginId);
            writer.WriteIntValue("originRoomId", OriginRoomId);
            writer.WriteStringValue("originRoomTitle", OriginRoomTitle);
            writer.WriteStringValue("originTitle", OriginTitle);
            writer.WriteIntValue("parentRoomType", ParentRoomType);
            writer.WriteIntValue("providerId", ProviderId);
            writer.WriteBoolValue("providerItem", ProviderItem);
            writer.WriteStringValue("providerKey", ProviderKey);
            writer.WriteLongValue("pureContentLength", PureContentLength);
            writer.WriteStringValue("requestToken", RequestToken);
            writer.WriteIntValue("rootFolderId", RootFolderId);
            writer.WriteIntValue("rootFolderType", RootFolderType);
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32_security>("security", Security);
            writer.WriteBoolValue("shared", Shared);
            writer.WriteBoolValue("startFilling", StartFilling);
            writer.WriteIntValue("thumbnailStatus", ThumbnailStatus);
            writer.WriteStringValue("thumbnailUrl", ThumbnailUrl);
            writer.WriteStringValue("title", Title);
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.ASC.Api.Core.ApiDateTime>("updated", Updated);
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.ASC.Web.Api.Models.EmployeeDto>("updatedBy", UpdatedBy);
            writer.WriteIntValue("version", Version);
            writer.WriteIntValue("versionGroup", VersionGroup);
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32_viewAccessibility>("viewAccessibility", ViewAccessibility);
            writer.WriteStringValue("viewUrl", ViewUrl);
            writer.WriteStringValue("webUrl", WebUrl);
        }
    }
}
#pragma warning restore CS0618
