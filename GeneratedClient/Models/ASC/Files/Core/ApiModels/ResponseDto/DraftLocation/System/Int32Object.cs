// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.DraftLocation.System
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Int32Object : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Draft ID</summary>
        public int? FileId { get; set; }
        /// <summary>Draft title</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FileTitle { get; set; }
#nullable restore
#else
        public string FileTitle { get; set; }
#endif
        /// <summary>InProcess folder ID</summary>
        public int? FolderId { get; set; }
        /// <summary>InProcess folder title</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FolderTitle { get; set; }
#nullable restore
#else
        public string FolderTitle { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.DraftLocation.System.Int32Object"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.DraftLocation.System.Int32Object CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.DraftLocation.System.Int32Object();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "fileId", n => { FileId = n.GetIntValue(); } },
                { "fileTitle", n => { FileTitle = n.GetStringValue(); } },
                { "folderId", n => { FolderId = n.GetIntValue(); } },
                { "folderTitle", n => { FolderTitle = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("fileId", FileId);
            writer.WriteStringValue("fileTitle", FileTitle);
            writer.WriteIntValue("folderId", FolderId);
            writer.WriteStringValue("folderTitle", FolderTitle);
        }
    }
}
#pragma warning restore CS0618
