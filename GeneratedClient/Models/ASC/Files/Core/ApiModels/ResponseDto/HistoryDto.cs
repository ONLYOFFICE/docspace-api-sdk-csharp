// <auto-generated/>
#pragma warning disable CS0618
using KiotaPosts.Client.Models.ASC.Api.Core;
using KiotaPosts.Client.Models.ASC.Files.Core.Core.Entries;
using KiotaPosts.Client.Models.ASC.Web.Api.Models;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class HistoryDto : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The action property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.ASC.Files.Core.Core.Entries.HistoryAction? Action { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.ASC.Files.Core.Core.Entries.HistoryAction Action { get; set; }
#endif
        /// <summary>The data property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.ASC.Files.Core.Core.Entries.HistoryData? Data { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.ASC.Files.Core.Core.Entries.HistoryData Data { get; set; }
#endif
        /// <summary>The date property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.ASC.Api.Core.ApiDateTime? Date { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.ASC.Api.Core.ApiDateTime Date { get; set; }
#endif
        /// <summary>The initiator property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.ASC.Web.Api.Models.EmployeeDto? Initiator { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.ASC.Web.Api.Models.EmployeeDto Initiator { get; set; }
#endif
        /// <summary>Related</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.HistoryDto>? Related { get; set; }
#nullable restore
#else
        public List<global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.HistoryDto> Related { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.HistoryDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.HistoryDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.HistoryDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "action", n => { Action = n.GetObjectValue<global::KiotaPosts.Client.Models.ASC.Files.Core.Core.Entries.HistoryAction>(global::KiotaPosts.Client.Models.ASC.Files.Core.Core.Entries.HistoryAction.CreateFromDiscriminatorValue); } },
                { "data", n => { Data = n.GetObjectValue<global::KiotaPosts.Client.Models.ASC.Files.Core.Core.Entries.HistoryData>(global::KiotaPosts.Client.Models.ASC.Files.Core.Core.Entries.HistoryData.CreateFromDiscriminatorValue); } },
                { "date", n => { Date = n.GetObjectValue<global::KiotaPosts.Client.Models.ASC.Api.Core.ApiDateTime>(global::KiotaPosts.Client.Models.ASC.Api.Core.ApiDateTime.CreateFromDiscriminatorValue); } },
                { "initiator", n => { Initiator = n.GetObjectValue<global::KiotaPosts.Client.Models.ASC.Web.Api.Models.EmployeeDto>(global::KiotaPosts.Client.Models.ASC.Web.Api.Models.EmployeeDto.CreateFromDiscriminatorValue); } },
                { "related", n => { Related = n.GetCollectionOfObjectValues<global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.HistoryDto>(global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.HistoryDto.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.ASC.Files.Core.Core.Entries.HistoryAction>("action", Action);
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.ASC.Files.Core.Core.Entries.HistoryData>("data", Data);
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.ASC.Api.Core.ApiDateTime>("date", Date);
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.ASC.Web.Api.Models.EmployeeDto>("initiator", Initiator);
            writer.WriteCollectionOfObjectValues<global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.HistoryDto>("related", Related);
        }
    }
}
#pragma warning restore CS0618
