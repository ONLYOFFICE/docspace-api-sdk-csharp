// <auto-generated/>
#pragma warning disable CS0618
using KiotaPosts.Client.Models.ASC.Web.Files.Services.WCFService;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class InfoConfigDto : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Favorite</summary>
        public bool? Favorite { get; set; }
        /// <summary>Folder</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Folder { get; set; }
#nullable restore
#else
        public string Folder { get; set; }
#endif
        /// <summary>Owner</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Owner { get; set; }
#nullable restore
#else
        public string Owner { get; set; }
#endif
        /// <summary>Sharing settings</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::KiotaPosts.Client.Models.ASC.Web.Files.Services.WCFService.AceShortWrapper>? SharingSettings { get; set; }
#nullable restore
#else
        public List<global::KiotaPosts.Client.Models.ASC.Web.Files.Services.WCFService.AceShortWrapper> SharingSettings { get; set; }
#endif
        /// <summary>[0 - Desktop, 1 - Mobile, 2 - Embedded]</summary>
        public int? Type { get; set; }
        /// <summary>Uploaded</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Uploaded { get; set; }
#nullable restore
#else
        public string Uploaded { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.InfoConfigDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.InfoConfigDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.InfoConfigDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "favorite", n => { Favorite = n.GetBoolValue(); } },
                { "folder", n => { Folder = n.GetStringValue(); } },
                { "owner", n => { Owner = n.GetStringValue(); } },
                { "sharingSettings", n => { SharingSettings = n.GetCollectionOfObjectValues<global::KiotaPosts.Client.Models.ASC.Web.Files.Services.WCFService.AceShortWrapper>(global::KiotaPosts.Client.Models.ASC.Web.Files.Services.WCFService.AceShortWrapper.CreateFromDiscriminatorValue)?.AsList(); } },
                { "type", n => { Type = n.GetIntValue(); } },
                { "uploaded", n => { Uploaded = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("favorite", Favorite);
            writer.WriteStringValue("folder", Folder);
            writer.WriteStringValue("owner", Owner);
            writer.WriteCollectionOfObjectValues<global::KiotaPosts.Client.Models.ASC.Web.Files.Services.WCFService.AceShortWrapper>("sharingSettings", SharingSettings);
            writer.WriteIntValue("type", Type);
            writer.WriteStringValue("uploaded", Uploaded);
        }
    }
}
#pragma warning restore CS0618
