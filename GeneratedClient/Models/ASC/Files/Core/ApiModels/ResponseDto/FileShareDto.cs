// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class FileShareDto : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>[0 - None, 1 - Read and write, 2 - Read, 3 - Restrict, 4 - Varies, 5 - Review, 6 - Comment, 7 - Fill forms, 8 - Custom filter, 9 - Room manager, 10 - Editing, 11 - Content creator]</summary>
        public int? Access { get; set; }
        /// <summary>Spceifies if this user can edit the access to the specified file or not</summary>
        public bool? CanEditAccess { get; set; }
        /// <summary>Specifies if the file is locked by this user or not</summary>
        public bool? IsLocked { get; set; }
        /// <summary>Specifies if this user is an owner of the specified file or not</summary>
        public bool? IsOwner { get; set; }
        /// <summary>A user who has the access to the specified file</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public UntypedNode? SharedTo { get; set; }
#nullable restore
#else
        public UntypedNode SharedTo { get; set; }
#endif
        /// <summary>[0 - User, 1 - External link, 2 - Group, 3 - Invitation link, 4 - Primary external link]</summary>
        public int? SubjectType { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.FileShareDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.FileShareDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.FileShareDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "access", n => { Access = n.GetIntValue(); } },
                { "canEditAccess", n => { CanEditAccess = n.GetBoolValue(); } },
                { "isLocked", n => { IsLocked = n.GetBoolValue(); } },
                { "isOwner", n => { IsOwner = n.GetBoolValue(); } },
                { "sharedTo", n => { SharedTo = n.GetObjectValue<UntypedNode>(UntypedNode.CreateFromDiscriminatorValue); } },
                { "subjectType", n => { SubjectType = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("access", Access);
            writer.WriteBoolValue("canEditAccess", CanEditAccess);
            writer.WriteBoolValue("isLocked", IsLocked);
            writer.WriteBoolValue("isOwner", IsOwner);
            writer.WriteObjectValue<UntypedNode>("sharedTo", SharedTo);
            writer.WriteIntValue("subjectType", SubjectType);
        }
    }
}
#pragma warning restore CS0618
