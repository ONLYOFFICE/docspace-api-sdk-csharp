// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class FilesSettingsDto : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The automaticallyCleanUp property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.ASC.Files.Core.AutoCleanUpData? AutomaticallyCleanUp { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.ASC.Files.Core.AutoCleanUpData AutomaticallyCleanUp { get; set; }
#endif
        /// <summary>Can search by content</summary>
        public bool? CanSearchByContent { get; set; }
        /// <summary>Chunk upload size</summary>
        public long? ChunkUploadSize { get; set; }
        /// <summary>Confirm delete</summary>
        public bool? ConfirmDelete { get; set; }
        /// <summary>Convert notify</summary>
        public bool? ConvertNotify { get; set; }
        /// <summary>The defaultOrder property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.ASC.Files.Core.OrderBy? DefaultOrder { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.ASC.Files.Core.OrderBy DefaultOrder { get; set; }
#endif
        /// <summary>Default sharing access rights</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? DefaultSharingAccessRights { get; set; }
#nullable restore
#else
        public List<string> DefaultSharingAccessRights { get; set; }
#endif
        /// <summary>Display file extension</summary>
        public bool? DisplayFileExtension { get; set; }
        /// <summary>Download tar gz</summary>
        public bool? DownloadTarGz { get; set; }
        /// <summary>EnableT third party</summary>
        public bool? EnableThirdParty { get; set; }
        /// <summary>External share</summary>
        public bool? ExternalShare { get; set; }
        /// <summary>External share social media</summary>
        public bool? ExternalShareSocialMedia { get; set; }
        /// <summary>Exts archive</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ExtsArchive { get; set; }
#nullable restore
#else
        public List<string> ExtsArchive { get; set; }
#endif
        /// <summary>Exts audio</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ExtsAudio { get; set; }
#nullable restore
#else
        public List<string> ExtsAudio { get; set; }
#endif
        /// <summary>Exts co authoring</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ExtsCoAuthoring { get; set; }
#nullable restore
#else
        public List<string> ExtsCoAuthoring { get; set; }
#endif
        /// <summary>Exts convertible</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.FilesSettingsDto_extsConvertible? ExtsConvertible { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.FilesSettingsDto_extsConvertible ExtsConvertible { get; set; }
#endif
        /// <summary>Exts document</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ExtsDocument { get; set; }
#nullable restore
#else
        public List<string> ExtsDocument { get; set; }
#endif
        /// <summary>Exts image</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ExtsImage { get; set; }
#nullable restore
#else
        public List<string> ExtsImage { get; set; }
#endif
        /// <summary>Exts image previewed</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ExtsImagePreviewed { get; set; }
#nullable restore
#else
        public List<string> ExtsImagePreviewed { get; set; }
#endif
        /// <summary>Exts media previewed</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ExtsMediaPreviewed { get; set; }
#nullable restore
#else
        public List<string> ExtsMediaPreviewed { get; set; }
#endif
        /// <summary>Exts must convert</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ExtsMustConvert { get; set; }
#nullable restore
#else
        public List<string> ExtsMustConvert { get; set; }
#endif
        /// <summary>Exts presentation</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ExtsPresentation { get; set; }
#nullable restore
#else
        public List<string> ExtsPresentation { get; set; }
#endif
        /// <summary>Exts spreadsheet</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ExtsSpreadsheet { get; set; }
#nullable restore
#else
        public List<string> ExtsSpreadsheet { get; set; }
#endif
        /// <summary>Exts uploadable</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ExtsUploadable { get; set; }
#nullable restore
#else
        public List<string> ExtsUploadable { get; set; }
#endif
        /// <summary>Exts video</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ExtsVideo { get; set; }
#nullable restore
#else
        public List<string> ExtsVideo { get; set; }
#endif
        /// <summary>Exts web commented</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ExtsWebCommented { get; set; }
#nullable restore
#else
        public List<string> ExtsWebCommented { get; set; }
#endif
        /// <summary>Exts web custom filter editing</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ExtsWebCustomFilterEditing { get; set; }
#nullable restore
#else
        public List<string> ExtsWebCustomFilterEditing { get; set; }
#endif
        /// <summary>Exts web edited</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ExtsWebEdited { get; set; }
#nullable restore
#else
        public List<string> ExtsWebEdited { get; set; }
#endif
        /// <summary>Exts web encrypt</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ExtsWebEncrypt { get; set; }
#nullable restore
#else
        public List<string> ExtsWebEncrypt { get; set; }
#endif
        /// <summary>Exts web previewed</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ExtsWebPreviewed { get; set; }
#nullable restore
#else
        public List<string> ExtsWebPreviewed { get; set; }
#endif
        /// <summary>Exts web restricted editing</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ExtsWebRestrictedEditing { get; set; }
#nullable restore
#else
        public List<string> ExtsWebRestrictedEditing { get; set; }
#endif
        /// <summary>Exts web reviewed</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ExtsWebReviewed { get; set; }
#nullable restore
#else
        public List<string> ExtsWebReviewed { get; set; }
#endif
        /// <summary>Exts web template</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ExtsWebTemplate { get; set; }
#nullable restore
#else
        public List<string> ExtsWebTemplate { get; set; }
#endif
        /// <summary>Favorites section</summary>
        public bool? FavoritesSection { get; set; }
        /// <summary>File download url string</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FileDownloadUrlString { get; set; }
#nullable restore
#else
        public string FileDownloadUrlString { get; set; }
#endif
        /// <summary>File redirect preview url string</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FileRedirectPreviewUrlString { get; set; }
#nullable restore
#else
        public string FileRedirectPreviewUrlString { get; set; }
#endif
        /// <summary>File thumbnail url string</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FileThumbnailUrlString { get; set; }
#nullable restore
#else
        public string FileThumbnailUrlString { get; set; }
#endif
        /// <summary>File web editor external url string</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FileWebEditorExternalUrlString { get; set; }
#nullable restore
#else
        public string FileWebEditorExternalUrlString { get; set; }
#endif
        /// <summary>File web editor url string</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FileWebEditorUrlString { get; set; }
#nullable restore
#else
        public string FileWebEditorUrlString { get; set; }
#endif
        /// <summary>File web viewer external url string</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FileWebViewerExternalUrlString { get; set; }
#nullable restore
#else
        public string FileWebViewerExternalUrlString { get; set; }
#endif
        /// <summary>File web viewer url string</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FileWebViewerUrlString { get; set; }
#nullable restore
#else
        public string FileWebViewerUrlString { get; set; }
#endif
        /// <summary>Forcesave</summary>
        public bool? Forcesave { get; set; }
        /// <summary>Hide confirm convert open</summary>
        public bool? HideConfirmConvertOpen { get; set; }
        /// <summary>HideC confirm convert save</summary>
        public bool? HideConfirmConvertSave { get; set; }
        /// <summary>Internal formats</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.FilesSettingsDto_internalFormats? InternalFormats { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.FilesSettingsDto_internalFormats InternalFormats { get; set; }
#endif
        /// <summary>Keep new file name</summary>
        public bool? KeepNewFileName { get; set; }
        /// <summary>Master form extension</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MasterFormExtension { get; set; }
#nullable restore
#else
        public string MasterFormExtension { get; set; }
#endif
        /// <summary>Max upload thread count</summary>
        public int? MaxUploadThreadCount { get; set; }
        /// <summary>Open editor in same tab</summary>
        public bool? OpenEditorInSameTab { get; set; }
        /// <summary>Param out type</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ParamOutType { get; set; }
#nullable restore
#else
        public string ParamOutType { get; set; }
#endif
        /// <summary>Param version</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ParamVersion { get; set; }
#nullable restore
#else
        public string ParamVersion { get; set; }
#endif
        /// <summary>Recent section</summary>
        public bool? RecentSection { get; set; }
        /// <summary>Store forcesave</summary>
        public bool? StoreForcesave { get; set; }
        /// <summary>Store original files</summary>
        public bool? StoreOriginalFiles { get; set; }
        /// <summary>Templates section</summary>
        public bool? TemplatesSection { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.FilesSettingsDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.FilesSettingsDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.FilesSettingsDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "automaticallyCleanUp", n => { AutomaticallyCleanUp = n.GetObjectValue<global::KiotaPosts.Client.Models.ASC.Files.Core.AutoCleanUpData>(global::KiotaPosts.Client.Models.ASC.Files.Core.AutoCleanUpData.CreateFromDiscriminatorValue); } },
                { "canSearchByContent", n => { CanSearchByContent = n.GetBoolValue(); } },
                { "chunkUploadSize", n => { ChunkUploadSize = n.GetLongValue(); } },
                { "confirmDelete", n => { ConfirmDelete = n.GetBoolValue(); } },
                { "convertNotify", n => { ConvertNotify = n.GetBoolValue(); } },
                { "defaultOrder", n => { DefaultOrder = n.GetObjectValue<global::KiotaPosts.Client.Models.ASC.Files.Core.OrderBy>(global::KiotaPosts.Client.Models.ASC.Files.Core.OrderBy.CreateFromDiscriminatorValue); } },
                { "defaultSharingAccessRights", n => { DefaultSharingAccessRights = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "displayFileExtension", n => { DisplayFileExtension = n.GetBoolValue(); } },
                { "downloadTarGz", n => { DownloadTarGz = n.GetBoolValue(); } },
                { "enableThirdParty", n => { EnableThirdParty = n.GetBoolValue(); } },
                { "externalShare", n => { ExternalShare = n.GetBoolValue(); } },
                { "externalShareSocialMedia", n => { ExternalShareSocialMedia = n.GetBoolValue(); } },
                { "extsArchive", n => { ExtsArchive = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "extsAudio", n => { ExtsAudio = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "extsCoAuthoring", n => { ExtsCoAuthoring = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "extsConvertible", n => { ExtsConvertible = n.GetObjectValue<global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.FilesSettingsDto_extsConvertible>(global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.FilesSettingsDto_extsConvertible.CreateFromDiscriminatorValue); } },
                { "extsDocument", n => { ExtsDocument = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "extsImage", n => { ExtsImage = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "extsImagePreviewed", n => { ExtsImagePreviewed = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "extsMediaPreviewed", n => { ExtsMediaPreviewed = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "extsMustConvert", n => { ExtsMustConvert = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "extsPresentation", n => { ExtsPresentation = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "extsSpreadsheet", n => { ExtsSpreadsheet = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "extsUploadable", n => { ExtsUploadable = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "extsVideo", n => { ExtsVideo = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "extsWebCommented", n => { ExtsWebCommented = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "extsWebCustomFilterEditing", n => { ExtsWebCustomFilterEditing = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "extsWebEdited", n => { ExtsWebEdited = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "extsWebEncrypt", n => { ExtsWebEncrypt = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "extsWebPreviewed", n => { ExtsWebPreviewed = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "extsWebRestrictedEditing", n => { ExtsWebRestrictedEditing = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "extsWebReviewed", n => { ExtsWebReviewed = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "extsWebTemplate", n => { ExtsWebTemplate = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "favoritesSection", n => { FavoritesSection = n.GetBoolValue(); } },
                { "fileDownloadUrlString", n => { FileDownloadUrlString = n.GetStringValue(); } },
                { "fileRedirectPreviewUrlString", n => { FileRedirectPreviewUrlString = n.GetStringValue(); } },
                { "fileThumbnailUrlString", n => { FileThumbnailUrlString = n.GetStringValue(); } },
                { "fileWebEditorExternalUrlString", n => { FileWebEditorExternalUrlString = n.GetStringValue(); } },
                { "fileWebEditorUrlString", n => { FileWebEditorUrlString = n.GetStringValue(); } },
                { "fileWebViewerExternalUrlString", n => { FileWebViewerExternalUrlString = n.GetStringValue(); } },
                { "fileWebViewerUrlString", n => { FileWebViewerUrlString = n.GetStringValue(); } },
                { "forcesave", n => { Forcesave = n.GetBoolValue(); } },
                { "hideConfirmConvertOpen", n => { HideConfirmConvertOpen = n.GetBoolValue(); } },
                { "hideConfirmConvertSave", n => { HideConfirmConvertSave = n.GetBoolValue(); } },
                { "internalFormats", n => { InternalFormats = n.GetObjectValue<global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.FilesSettingsDto_internalFormats>(global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.FilesSettingsDto_internalFormats.CreateFromDiscriminatorValue); } },
                { "keepNewFileName", n => { KeepNewFileName = n.GetBoolValue(); } },
                { "masterFormExtension", n => { MasterFormExtension = n.GetStringValue(); } },
                { "maxUploadThreadCount", n => { MaxUploadThreadCount = n.GetIntValue(); } },
                { "openEditorInSameTab", n => { OpenEditorInSameTab = n.GetBoolValue(); } },
                { "paramOutType", n => { ParamOutType = n.GetStringValue(); } },
                { "paramVersion", n => { ParamVersion = n.GetStringValue(); } },
                { "recentSection", n => { RecentSection = n.GetBoolValue(); } },
                { "storeForcesave", n => { StoreForcesave = n.GetBoolValue(); } },
                { "storeOriginalFiles", n => { StoreOriginalFiles = n.GetBoolValue(); } },
                { "templatesSection", n => { TemplatesSection = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.ASC.Files.Core.AutoCleanUpData>("automaticallyCleanUp", AutomaticallyCleanUp);
            writer.WriteBoolValue("canSearchByContent", CanSearchByContent);
            writer.WriteLongValue("chunkUploadSize", ChunkUploadSize);
            writer.WriteBoolValue("confirmDelete", ConfirmDelete);
            writer.WriteBoolValue("convertNotify", ConvertNotify);
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.ASC.Files.Core.OrderBy>("defaultOrder", DefaultOrder);
            writer.WriteCollectionOfPrimitiveValues<string>("defaultSharingAccessRights", DefaultSharingAccessRights);
            writer.WriteBoolValue("displayFileExtension", DisplayFileExtension);
            writer.WriteBoolValue("downloadTarGz", DownloadTarGz);
            writer.WriteBoolValue("enableThirdParty", EnableThirdParty);
            writer.WriteBoolValue("externalShare", ExternalShare);
            writer.WriteBoolValue("externalShareSocialMedia", ExternalShareSocialMedia);
            writer.WriteCollectionOfPrimitiveValues<string>("extsArchive", ExtsArchive);
            writer.WriteCollectionOfPrimitiveValues<string>("extsAudio", ExtsAudio);
            writer.WriteCollectionOfPrimitiveValues<string>("extsCoAuthoring", ExtsCoAuthoring);
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.FilesSettingsDto_extsConvertible>("extsConvertible", ExtsConvertible);
            writer.WriteCollectionOfPrimitiveValues<string>("extsDocument", ExtsDocument);
            writer.WriteCollectionOfPrimitiveValues<string>("extsImage", ExtsImage);
            writer.WriteCollectionOfPrimitiveValues<string>("extsImagePreviewed", ExtsImagePreviewed);
            writer.WriteCollectionOfPrimitiveValues<string>("extsMediaPreviewed", ExtsMediaPreviewed);
            writer.WriteCollectionOfPrimitiveValues<string>("extsMustConvert", ExtsMustConvert);
            writer.WriteCollectionOfPrimitiveValues<string>("extsPresentation", ExtsPresentation);
            writer.WriteCollectionOfPrimitiveValues<string>("extsSpreadsheet", ExtsSpreadsheet);
            writer.WriteCollectionOfPrimitiveValues<string>("extsUploadable", ExtsUploadable);
            writer.WriteCollectionOfPrimitiveValues<string>("extsVideo", ExtsVideo);
            writer.WriteCollectionOfPrimitiveValues<string>("extsWebCommented", ExtsWebCommented);
            writer.WriteCollectionOfPrimitiveValues<string>("extsWebCustomFilterEditing", ExtsWebCustomFilterEditing);
            writer.WriteCollectionOfPrimitiveValues<string>("extsWebEdited", ExtsWebEdited);
            writer.WriteCollectionOfPrimitiveValues<string>("extsWebEncrypt", ExtsWebEncrypt);
            writer.WriteCollectionOfPrimitiveValues<string>("extsWebPreviewed", ExtsWebPreviewed);
            writer.WriteCollectionOfPrimitiveValues<string>("extsWebRestrictedEditing", ExtsWebRestrictedEditing);
            writer.WriteCollectionOfPrimitiveValues<string>("extsWebReviewed", ExtsWebReviewed);
            writer.WriteCollectionOfPrimitiveValues<string>("extsWebTemplate", ExtsWebTemplate);
            writer.WriteBoolValue("favoritesSection", FavoritesSection);
            writer.WriteStringValue("fileDownloadUrlString", FileDownloadUrlString);
            writer.WriteStringValue("fileRedirectPreviewUrlString", FileRedirectPreviewUrlString);
            writer.WriteStringValue("fileThumbnailUrlString", FileThumbnailUrlString);
            writer.WriteStringValue("fileWebEditorExternalUrlString", FileWebEditorExternalUrlString);
            writer.WriteStringValue("fileWebEditorUrlString", FileWebEditorUrlString);
            writer.WriteStringValue("fileWebViewerExternalUrlString", FileWebViewerExternalUrlString);
            writer.WriteStringValue("fileWebViewerUrlString", FileWebViewerUrlString);
            writer.WriteBoolValue("forcesave", Forcesave);
            writer.WriteBoolValue("hideConfirmConvertOpen", HideConfirmConvertOpen);
            writer.WriteBoolValue("hideConfirmConvertSave", HideConfirmConvertSave);
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.FilesSettingsDto_internalFormats>("internalFormats", InternalFormats);
            writer.WriteBoolValue("keepNewFileName", KeepNewFileName);
            writer.WriteStringValue("masterFormExtension", MasterFormExtension);
            writer.WriteIntValue("maxUploadThreadCount", MaxUploadThreadCount);
            writer.WriteBoolValue("openEditorInSameTab", OpenEditorInSameTab);
            writer.WriteStringValue("paramOutType", ParamOutType);
            writer.WriteStringValue("paramVersion", ParamVersion);
            writer.WriteBoolValue("recentSection", RecentSection);
            writer.WriteBoolValue("storeForcesave", StoreForcesave);
            writer.WriteBoolValue("storeOriginalFiles", StoreOriginalFiles);
            writer.WriteBoolValue("templatesSection", TemplatesSection);
        }
    }
}
#pragma warning restore CS0618
