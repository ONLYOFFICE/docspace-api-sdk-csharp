// <auto-generated/>
#pragma warning disable CS0618
using KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class EditorConfigurationDto : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Callback url</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CallbackUrl { get; set; }
#nullable restore
#else
        public string CallbackUrl { get; set; }
#endif
        /// <summary>The coEditing property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.CoEditingConfig? CoEditing { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.CoEditingConfig CoEditing { get; set; }
#endif
        /// <summary>Create url</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreateUrl { get; set; }
#nullable restore
#else
        public string CreateUrl { get; set; }
#endif
        /// <summary>The customization property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.CustomizationConfigDto? Customization { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.CustomizationConfigDto Customization { get; set; }
#endif
        /// <summary>The embedded property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.EmbeddedConfig? Embedded { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.EmbeddedConfig Embedded { get; set; }
#endif
        /// <summary>The encryptionKeys property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.EncryptionKeysConfig? EncryptionKeys { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.EncryptionKeysConfig EncryptionKeys { get; set; }
#endif
        /// <summary>Lang</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Lang { get; set; }
#nullable restore
#else
        public string Lang { get; set; }
#endif
        /// <summary>Mode</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Mode { get; set; }
#nullable restore
#else
        public string Mode { get; set; }
#endif
        /// <summary>Mode write</summary>
        public bool? ModeWrite { get; set; }
        /// <summary>The plugins property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.PluginsConfig? Plugins { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.PluginsConfig Plugins { get; set; }
#endif
        /// <summary>Recent</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.RecentConfig>? Recent { get; set; }
#nullable restore
#else
        public List<global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.RecentConfig> Recent { get; set; }
#endif
        /// <summary>Templates</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.TemplatesConfig>? Templates { get; set; }
#nullable restore
#else
        public List<global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.TemplatesConfig> Templates { get; set; }
#endif
        /// <summary>The user property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.UserConfig? User { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.UserConfig User { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.EditorConfigurationDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.EditorConfigurationDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.EditorConfigurationDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "callbackUrl", n => { CallbackUrl = n.GetStringValue(); } },
                { "coEditing", n => { CoEditing = n.GetObjectValue<global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.CoEditingConfig>(global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.CoEditingConfig.CreateFromDiscriminatorValue); } },
                { "createUrl", n => { CreateUrl = n.GetStringValue(); } },
                { "customization", n => { Customization = n.GetObjectValue<global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.CustomizationConfigDto>(global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.CustomizationConfigDto.CreateFromDiscriminatorValue); } },
                { "embedded", n => { Embedded = n.GetObjectValue<global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.EmbeddedConfig>(global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.EmbeddedConfig.CreateFromDiscriminatorValue); } },
                { "encryptionKeys", n => { EncryptionKeys = n.GetObjectValue<global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.EncryptionKeysConfig>(global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.EncryptionKeysConfig.CreateFromDiscriminatorValue); } },
                { "lang", n => { Lang = n.GetStringValue(); } },
                { "mode", n => { Mode = n.GetStringValue(); } },
                { "modeWrite", n => { ModeWrite = n.GetBoolValue(); } },
                { "plugins", n => { Plugins = n.GetObjectValue<global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.PluginsConfig>(global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.PluginsConfig.CreateFromDiscriminatorValue); } },
                { "recent", n => { Recent = n.GetCollectionOfObjectValues<global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.RecentConfig>(global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.RecentConfig.CreateFromDiscriminatorValue)?.AsList(); } },
                { "templates", n => { Templates = n.GetCollectionOfObjectValues<global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.TemplatesConfig>(global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.TemplatesConfig.CreateFromDiscriminatorValue)?.AsList(); } },
                { "user", n => { User = n.GetObjectValue<global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.UserConfig>(global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.UserConfig.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("callbackUrl", CallbackUrl);
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.CoEditingConfig>("coEditing", CoEditing);
            writer.WriteStringValue("createUrl", CreateUrl);
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.CustomizationConfigDto>("customization", Customization);
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.EmbeddedConfig>("embedded", Embedded);
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.EncryptionKeysConfig>("encryptionKeys", EncryptionKeys);
            writer.WriteStringValue("lang", Lang);
            writer.WriteStringValue("mode", Mode);
            writer.WriteBoolValue("modeWrite", ModeWrite);
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.PluginsConfig>("plugins", Plugins);
            writer.WriteCollectionOfObjectValues<global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.RecentConfig>("recent", Recent);
            writer.WriteCollectionOfObjectValues<global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.TemplatesConfig>("templates", Templates);
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.ASC.Web.Files.Services.DocumentService.UserConfig>("user", User);
        }
    }
}
#pragma warning restore CS0618
