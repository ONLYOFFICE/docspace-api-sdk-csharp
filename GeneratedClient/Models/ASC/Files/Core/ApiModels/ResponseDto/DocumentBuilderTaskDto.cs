// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class DocumentBuilderTaskDto : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Error</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Error { get; set; }
#nullable restore
#else
        public string Error { get; set; }
#endif
        /// <summary>Id</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>Is completed</summary>
        public bool? IsCompleted { get; set; }
        /// <summary>Percentage</summary>
        public int? Percentage { get; set; }
        /// <summary>Result file id</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public UntypedNode? ResultFileId { get; set; }
#nullable restore
#else
        public UntypedNode ResultFileId { get; set; }
#endif
        /// <summary>Result file name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ResultFileName { get; set; }
#nullable restore
#else
        public string ResultFileName { get; set; }
#endif
        /// <summary>Result file url</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ResultFileUrl { get; set; }
#nullable restore
#else
        public string ResultFileUrl { get; set; }
#endif
        /// <summary>[0 - Created, 1 - Running, 2 - Completed, 3 - Canceled, 4 - Failted]</summary>
        public int? Status { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.DocumentBuilderTaskDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.DocumentBuilderTaskDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.ResponseDto.DocumentBuilderTaskDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "error", n => { Error = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "isCompleted", n => { IsCompleted = n.GetBoolValue(); } },
                { "percentage", n => { Percentage = n.GetIntValue(); } },
                { "resultFileId", n => { ResultFileId = n.GetObjectValue<UntypedNode>(UntypedNode.CreateFromDiscriminatorValue); } },
                { "resultFileName", n => { ResultFileName = n.GetStringValue(); } },
                { "resultFileUrl", n => { ResultFileUrl = n.GetStringValue(); } },
                { "status", n => { Status = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("error", Error);
            writer.WriteStringValue("id", Id);
            writer.WriteBoolValue("isCompleted", IsCompleted);
            writer.WriteIntValue("percentage", Percentage);
            writer.WriteObjectValue<UntypedNode>("resultFileId", ResultFileId);
            writer.WriteStringValue("resultFileName", ResultFileName);
            writer.WriteStringValue("resultFileUrl", ResultFileUrl);
            writer.WriteIntValue("status", Status);
        }
    }
}
#pragma warning restore CS0618
