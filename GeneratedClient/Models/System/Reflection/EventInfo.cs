// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace KiotaPosts.Client.Models.System.Reflection
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class EventInfo : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The addMethod property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.System.Reflection.MethodInfo? AddMethod { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.System.Reflection.MethodInfo AddMethod { get; set; }
#endif
        /// <summary>The attributes property</summary>
        public int? Attributes { get; set; }
        /// <summary>The customAttributes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::KiotaPosts.Client.Models.System.Reflection.CustomAttributeData>? CustomAttributes { get; private set; }
#nullable restore
#else
        public List<global::KiotaPosts.Client.Models.System.Reflection.CustomAttributeData> CustomAttributes { get; private set; }
#endif
        /// <summary>The declaringType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.System.TypeObject? DeclaringType { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.System.TypeObject DeclaringType { get; set; }
#endif
        /// <summary>The eventHandlerType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.System.TypeObject? EventHandlerType { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.System.TypeObject EventHandlerType { get; set; }
#endif
        /// <summary>The isCollectible property</summary>
        public bool? IsCollectible { get; private set; }
        /// <summary>The isMulticast property</summary>
        public bool? IsMulticast { get; private set; }
        /// <summary>The isSpecialName property</summary>
        public bool? IsSpecialName { get; private set; }
        /// <summary>The memberType property</summary>
        public int? MemberType { get; set; }
        /// <summary>The metadataToken property</summary>
        public int? MetadataToken { get; private set; }
        /// <summary>The module property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.System.Reflection.Module? Module { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.System.Reflection.Module Module { get; set; }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; private set; }
#nullable restore
#else
        public string Name { get; private set; }
#endif
        /// <summary>The raiseMethod property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.System.Reflection.MethodInfo? RaiseMethod { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.System.Reflection.MethodInfo RaiseMethod { get; set; }
#endif
        /// <summary>The reflectedType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.System.TypeObject? ReflectedType { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.System.TypeObject ReflectedType { get; set; }
#endif
        /// <summary>The removeMethod property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.System.Reflection.MethodInfo? RemoveMethod { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.System.Reflection.MethodInfo RemoveMethod { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::KiotaPosts.Client.Models.System.Reflection.EventInfo"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::KiotaPosts.Client.Models.System.Reflection.EventInfo CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::KiotaPosts.Client.Models.System.Reflection.EventInfo();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "addMethod", n => { AddMethod = n.GetObjectValue<global::KiotaPosts.Client.Models.System.Reflection.MethodInfo>(global::KiotaPosts.Client.Models.System.Reflection.MethodInfo.CreateFromDiscriminatorValue); } },
                { "attributes", n => { Attributes = n.GetIntValue(); } },
                { "customAttributes", n => { CustomAttributes = n.GetCollectionOfObjectValues<global::KiotaPosts.Client.Models.System.Reflection.CustomAttributeData>(global::KiotaPosts.Client.Models.System.Reflection.CustomAttributeData.CreateFromDiscriminatorValue)?.AsList(); } },
                { "declaringType", n => { DeclaringType = n.GetObjectValue<global::KiotaPosts.Client.Models.System.TypeObject>(global::KiotaPosts.Client.Models.System.TypeObject.CreateFromDiscriminatorValue); } },
                { "eventHandlerType", n => { EventHandlerType = n.GetObjectValue<global::KiotaPosts.Client.Models.System.TypeObject>(global::KiotaPosts.Client.Models.System.TypeObject.CreateFromDiscriminatorValue); } },
                { "isCollectible", n => { IsCollectible = n.GetBoolValue(); } },
                { "isMulticast", n => { IsMulticast = n.GetBoolValue(); } },
                { "isSpecialName", n => { IsSpecialName = n.GetBoolValue(); } },
                { "memberType", n => { MemberType = n.GetIntValue(); } },
                { "metadataToken", n => { MetadataToken = n.GetIntValue(); } },
                { "module", n => { Module = n.GetObjectValue<global::KiotaPosts.Client.Models.System.Reflection.Module>(global::KiotaPosts.Client.Models.System.Reflection.Module.CreateFromDiscriminatorValue); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "raiseMethod", n => { RaiseMethod = n.GetObjectValue<global::KiotaPosts.Client.Models.System.Reflection.MethodInfo>(global::KiotaPosts.Client.Models.System.Reflection.MethodInfo.CreateFromDiscriminatorValue); } },
                { "reflectedType", n => { ReflectedType = n.GetObjectValue<global::KiotaPosts.Client.Models.System.TypeObject>(global::KiotaPosts.Client.Models.System.TypeObject.CreateFromDiscriminatorValue); } },
                { "removeMethod", n => { RemoveMethod = n.GetObjectValue<global::KiotaPosts.Client.Models.System.Reflection.MethodInfo>(global::KiotaPosts.Client.Models.System.Reflection.MethodInfo.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.System.Reflection.MethodInfo>("addMethod", AddMethod);
            writer.WriteIntValue("attributes", Attributes);
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.System.TypeObject>("declaringType", DeclaringType);
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.System.TypeObject>("eventHandlerType", EventHandlerType);
            writer.WriteIntValue("memberType", MemberType);
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.System.Reflection.Module>("module", Module);
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.System.Reflection.MethodInfo>("raiseMethod", RaiseMethod);
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.System.TypeObject>("reflectedType", ReflectedType);
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.System.Reflection.MethodInfo>("removeMethod", RemoveMethod);
        }
    }
}
#pragma warning restore CS0618
