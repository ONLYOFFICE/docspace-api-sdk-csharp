// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace KiotaPosts.Client.Models.System.Reflection
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Module : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The assembly property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.System.Reflection.Assembly? Assembly { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.System.Reflection.Assembly Assembly { get; set; }
#endif
        /// <summary>The customAttributes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::KiotaPosts.Client.Models.System.Reflection.CustomAttributeData>? CustomAttributes { get; private set; }
#nullable restore
#else
        public List<global::KiotaPosts.Client.Models.System.Reflection.CustomAttributeData> CustomAttributes { get; private set; }
#endif
        /// <summary>The fullyQualifiedName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FullyQualifiedName { get; private set; }
#nullable restore
#else
        public string FullyQualifiedName { get; private set; }
#endif
        /// <summary>The mdStreamVersion property</summary>
        public int? MdStreamVersion { get; private set; }
        /// <summary>The metadataToken property</summary>
        public int? MetadataToken { get; private set; }
        /// <summary>The moduleHandle property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::KiotaPosts.Client.Models.System.ModuleHandleObject? ModuleHandle { get; set; }
#nullable restore
#else
        public global::KiotaPosts.Client.Models.System.ModuleHandleObject ModuleHandle { get; set; }
#endif
        /// <summary>The moduleVersionId property</summary>
        public Guid? ModuleVersionId { get; private set; }
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; private set; }
#nullable restore
#else
        public string Name { get; private set; }
#endif
        /// <summary>The scopeName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ScopeName { get; private set; }
#nullable restore
#else
        public string ScopeName { get; private set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::KiotaPosts.Client.Models.System.Reflection.Module"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::KiotaPosts.Client.Models.System.Reflection.Module CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::KiotaPosts.Client.Models.System.Reflection.Module();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "assembly", n => { Assembly = n.GetObjectValue<global::KiotaPosts.Client.Models.System.Reflection.Assembly>(global::KiotaPosts.Client.Models.System.Reflection.Assembly.CreateFromDiscriminatorValue); } },
                { "customAttributes", n => { CustomAttributes = n.GetCollectionOfObjectValues<global::KiotaPosts.Client.Models.System.Reflection.CustomAttributeData>(global::KiotaPosts.Client.Models.System.Reflection.CustomAttributeData.CreateFromDiscriminatorValue)?.AsList(); } },
                { "fullyQualifiedName", n => { FullyQualifiedName = n.GetStringValue(); } },
                { "mdStreamVersion", n => { MdStreamVersion = n.GetIntValue(); } },
                { "metadataToken", n => { MetadataToken = n.GetIntValue(); } },
                { "moduleHandle", n => { ModuleHandle = n.GetObjectValue<global::KiotaPosts.Client.Models.System.ModuleHandleObject>(global::KiotaPosts.Client.Models.System.ModuleHandleObject.CreateFromDiscriminatorValue); } },
                { "moduleVersionId", n => { ModuleVersionId = n.GetGuidValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "scopeName", n => { ScopeName = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.System.Reflection.Assembly>("assembly", Assembly);
            writer.WriteObjectValue<global::KiotaPosts.Client.Models.System.ModuleHandleObject>("moduleHandle", ModuleHandle);
        }
    }
}
#pragma warning restore CS0618
