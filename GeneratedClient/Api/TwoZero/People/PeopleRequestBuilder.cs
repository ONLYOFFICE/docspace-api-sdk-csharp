// <auto-generated/>
#pragma warning disable CS0618
using KiotaPosts.Client.Api.TwoZero.People.Activationstatus;
using KiotaPosts.Client.Api.TwoZero.People.Delete;
using KiotaPosts.Client.Api.TwoZero.People.Email;
using KiotaPosts.Client.Api.TwoZero.People.Filter;
using KiotaPosts.Client.Api.TwoZero.People.Guests;
using KiotaPosts.Client.Api.TwoZero.People.Invite;
using KiotaPosts.Client.Api.TwoZero.People.Item;
using KiotaPosts.Client.Api.TwoZero.People.Password;
using KiotaPosts.Client.Api.TwoZero.People.Reassign;
using KiotaPosts.Client.Api.TwoZero.People.Remove;
using KiotaPosts.Client.Api.TwoZero.People.Resetquota;
using KiotaPosts.Client.Api.TwoZero.People.Room;
using KiotaPosts.Client.Api.TwoZero.People.Search;
using KiotaPosts.Client.Api.TwoZero.People.Self;
using KiotaPosts.Client.Api.TwoZero.People.Simple;
using KiotaPosts.Client.Api.TwoZero.People.Status;
using KiotaPosts.Client.Api.TwoZero.People.Theme;
using KiotaPosts.Client.Api.TwoZero.People.Thirdparty;
using KiotaPosts.Client.Api.TwoZero.People.Tokendiagnostics;
using KiotaPosts.Client.Api.TwoZero.People.TypeNamespace;
using KiotaPosts.Client.Api.TwoZero.People.Userquota;
using KiotaPosts.Client.Models.ASC.People.ApiModels.RequestDto;
using KiotaPosts.Client.Models.SuccessApiResponseOfASC.Web.Api.Models;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace KiotaPosts.Client.Api.TwoZero.People
{
    /// <summary>
    /// Builds and executes requests for operations under \api\2.0\people
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class PeopleRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The activationstatus property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.People.Activationstatus.ActivationstatusRequestBuilder Activationstatus
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.People.Activationstatus.ActivationstatusRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The deletePath property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.People.Delete.DeleteRequestBuilder DeletePath
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.People.Delete.DeleteRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The email property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.People.Email.EmailRequestBuilder Email
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.People.Email.EmailRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The filter property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.People.Filter.FilterRequestBuilder Filter
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.People.Filter.FilterRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The guests property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.People.Guests.GuestsRequestBuilder Guests
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.People.Guests.GuestsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The invite property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.People.Invite.InviteRequestBuilder Invite
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.People.Invite.InviteRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The password property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.People.Password.PasswordRequestBuilder Password
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.People.Password.PasswordRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The reassign property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.People.Reassign.ReassignRequestBuilder Reassign
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.People.Reassign.ReassignRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The remove property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.People.Remove.RemoveRequestBuilder Remove
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.People.Remove.RemoveRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The resetquota property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.People.Resetquota.ResetquotaRequestBuilder Resetquota
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.People.Resetquota.ResetquotaRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The room property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.People.Room.RoomRequestBuilder Room
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.People.Room.RoomRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The search property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.People.Search.SearchRequestBuilder Search
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.People.Search.SearchRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The Self property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.People.Self.SelfRequestBuilder Self
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.People.Self.SelfRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The simple property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.People.Simple.SimpleRequestBuilder Simple
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.People.Simple.SimpleRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The status property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.People.Status.StatusRequestBuilder Status
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.People.Status.StatusRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The theme property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.People.Theme.ThemeRequestBuilder Theme
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.People.Theme.ThemeRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The thirdparty property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.People.Thirdparty.ThirdpartyRequestBuilder Thirdparty
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.People.Thirdparty.ThirdpartyRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The tokendiagnostics property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.People.Tokendiagnostics.TokendiagnosticsRequestBuilder Tokendiagnostics
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.People.Tokendiagnostics.TokendiagnosticsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The type property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.People.TypeNamespace.TypeRequestBuilder Type
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.People.TypeNamespace.TypeRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The userquota property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.People.Userquota.UserquotaRequestBuilder Userquota
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.People.Userquota.UserquotaRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Gets an item from the KiotaPosts.Client.api.TwoZero.people.item collection</summary>
        /// <param name="position">User ID</param>
        /// <returns>A <see cref="global::KiotaPosts.Client.Api.TwoZero.People.Item.WithUserItemRequestBuilder"/></returns>
        public global::KiotaPosts.Client.Api.TwoZero.People.Item.WithUserItemRequestBuilder this[string position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                urlTplParams.Add("userid", position);
                return new global::KiotaPosts.Client.Api.TwoZero.People.Item.WithUserItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::KiotaPosts.Client.Api.TwoZero.People.PeopleRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public PeopleRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/2.0/people", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::KiotaPosts.Client.Api.TwoZero.People.PeopleRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public PeopleRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/2.0/people", rawUrl)
        {
        }
        /// <summary>
        /// Returns a list of profiles for all the portal users.
        /// </summary>
        /// <returns>A <see cref="global::KiotaPosts.Client.Models.SuccessApiResponseOfASC.Web.Api.Models.EmployeeFullDto"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::KiotaPosts.Client.Models.SuccessApiResponseOfASC.Web.Api.Models.EmployeeFullDto?> GetAsync(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::KiotaPosts.Client.Models.SuccessApiResponseOfASC.Web.Api.Models.EmployeeFullDto> GetAsync(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::KiotaPosts.Client.Models.SuccessApiResponseOfASC.Web.Api.Models.EmployeeFullDto>(requestInfo, global::KiotaPosts.Client.Models.SuccessApiResponseOfASC.Web.Api.Models.EmployeeFullDto.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Adds a new portal user with the first name, last name, email address, and several optional parameters specified in the request.
        /// </summary>
        /// <returns>A <see cref="global::KiotaPosts.Client.Models.SuccessApiResponseOfASC.Web.Api.Models.EmployeeFullDto"/></returns>
        /// <param name="body">Member request parameters</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::KiotaPosts.Client.Models.SuccessApiResponseOfASC.Web.Api.Models.EmployeeFullDto?> PostAsync(global::KiotaPosts.Client.Models.ASC.People.ApiModels.RequestDto.MemberRequestDto body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::KiotaPosts.Client.Models.SuccessApiResponseOfASC.Web.Api.Models.EmployeeFullDto> PostAsync(global::KiotaPosts.Client.Models.ASC.People.ApiModels.RequestDto.MemberRequestDto body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            return await RequestAdapter.SendAsync<global::KiotaPosts.Client.Models.SuccessApiResponseOfASC.Web.Api.Models.EmployeeFullDto>(requestInfo, global::KiotaPosts.Client.Models.SuccessApiResponseOfASC.Web.Api.Models.EmployeeFullDto.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Returns a list of profiles for all the portal users.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json, text/plain;q=0.9");
            return requestInfo;
        }
        /// <summary>
        /// Adds a new portal user with the first name, last name, email address, and several optional parameters specified in the request.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">Member request parameters</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::KiotaPosts.Client.Models.ASC.People.ApiModels.RequestDto.MemberRequestDto body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::KiotaPosts.Client.Models.ASC.People.ApiModels.RequestDto.MemberRequestDto body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json, text/plain;q=0.9");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::KiotaPosts.Client.Api.TwoZero.People.PeopleRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::KiotaPosts.Client.Api.TwoZero.People.PeopleRequestBuilder WithUrl(string rawUrl)
        {
            return new global::KiotaPosts.Client.Api.TwoZero.People.PeopleRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class PeopleRequestBuilderGetRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class PeopleRequestBuilderPostRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
