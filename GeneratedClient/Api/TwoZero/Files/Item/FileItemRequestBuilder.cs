// <auto-generated/>
#pragma warning disable CS0618
using KiotaPosts.Client.Api.TwoZero.Files.Item.FileNamespace;
using KiotaPosts.Client.Api.TwoZero.Files.Item.Html;
using KiotaPosts.Client.Api.TwoZero.Files.Item.Insert;
using KiotaPosts.Client.Api.TwoZero.Files.Item.News;
using KiotaPosts.Client.Api.TwoZero.Files.Item.Order;
using KiotaPosts.Client.Api.TwoZero.Files.Item.Subfolders;
using KiotaPosts.Client.Api.TwoZero.Files.Item.Text;
using KiotaPosts.Client.Api.TwoZero.Files.Item.Upload;
using KiotaPosts.Client.Models.SuccessApiResponseOfASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace KiotaPosts.Client.Api.TwoZero.Files.Item
{
    /// <summary>
    /// Builds and executes requests for operations under \api\2.0\files\{file-id}
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class FileItemRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The file property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Files.Item.FileNamespace.FileRequestBuilder File
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Files.Item.FileNamespace.FileRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The html property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Files.Item.Html.HtmlRequestBuilder Html
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Files.Item.Html.HtmlRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The insert property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Files.Item.Insert.InsertRequestBuilder Insert
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Files.Item.Insert.InsertRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The news property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Files.Item.News.NewsRequestBuilder News
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Files.Item.News.NewsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The order property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Files.Item.Order.OrderRequestBuilder Order
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Files.Item.Order.OrderRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The subfolders property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Files.Item.Subfolders.SubfoldersRequestBuilder Subfolders
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Files.Item.Subfolders.SubfoldersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The text property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Files.Item.Text.TextRequestBuilder Text
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Files.Item.Text.TextRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The upload property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Files.Item.Upload.UploadRequestBuilder Upload
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Files.Item.Upload.UploadRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::KiotaPosts.Client.Api.TwoZero.Files.Item.FileItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public FileItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/2.0/files/{file%2Did}{?applyFilterOption*,excludeSubject*,extension*,filterType*,roomId*,searchArea*,searchInContent*,userIdOrGroupId*,withsubfolders*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::KiotaPosts.Client.Api.TwoZero.Files.Item.FileItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public FileItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/2.0/files/{file%2Did}{?applyFilterOption*,excludeSubject*,extension*,filterType*,roomId*,searchArea*,searchInContent*,userIdOrGroupId*,withsubfolders*}", rawUrl)
        {
        }
        /// <summary>
        /// Returns the detailed list of files and folders located in the folder with the ID specified in the request.
        /// </summary>
        /// <returns>A <see cref="global::KiotaPosts.Client.Models.SuccessApiResponseOfASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32Object"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::KiotaPosts.Client.Models.SuccessApiResponseOfASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32Object?> GetAsync(Action<RequestConfiguration<global::KiotaPosts.Client.Api.TwoZero.Files.Item.FileItemRequestBuilder.FileItemRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::KiotaPosts.Client.Models.SuccessApiResponseOfASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32Object> GetAsync(Action<RequestConfiguration<global::KiotaPosts.Client.Api.TwoZero.Files.Item.FileItemRequestBuilder.FileItemRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::KiotaPosts.Client.Models.SuccessApiResponseOfASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32Object>(requestInfo, global::KiotaPosts.Client.Models.SuccessApiResponseOfASC.Files.Core.ApiModels.ResponseDto.FolderContentDto.System.Int32Object.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Returns the detailed list of files and folders located in the folder with the ID specified in the request.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::KiotaPosts.Client.Api.TwoZero.Files.Item.FileItemRequestBuilder.FileItemRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::KiotaPosts.Client.Api.TwoZero.Files.Item.FileItemRequestBuilder.FileItemRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json, text/plain;q=0.9");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::KiotaPosts.Client.Api.TwoZero.Files.Item.FileItemRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::KiotaPosts.Client.Api.TwoZero.Files.Item.FileItemRequestBuilder WithUrl(string rawUrl)
        {
            return new global::KiotaPosts.Client.Api.TwoZero.Files.Item.FileItemRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Returns the detailed list of files and folders located in the folder with the ID specified in the request.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class FileItemRequestBuilderGetQueryParameters 
        {
            /// <summary>Specifies whether to return only files, only folders or all elements from the specified folder</summary>
            [QueryParameter("applyFilterOption")]
            public int? ApplyFilterOption { get; set; }
            /// <summary>Specifies whether to exclude a subject or not</summary>
            [QueryParameter("excludeSubject")]
            public bool? ExcludeSubject { get; set; }
            /// <summary>Specifies whether to search for a specific file extension</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("extension")]
            public string? Extension { get; set; }
#nullable restore
#else
            [QueryParameter("extension")]
            public string Extension { get; set; }
#endif
            /// <summary>Filter type</summary>
            [QueryParameter("filterType")]
            public int? FilterType { get; set; }
            /// <summary>Room ID</summary>
            [QueryParameter("roomId")]
            public int? RoomId { get; set; }
            /// <summary>Search area</summary>
            [QueryParameter("searchArea")]
            public int? SearchArea { get; set; }
            /// <summary>Specifies whether to search within the section contents or not</summary>
            [QueryParameter("searchInContent")]
            public bool? SearchInContent { get; set; }
            /// <summary>User or group ID</summary>
            [QueryParameter("userIdOrGroupId")]
            public Guid? UserIdOrGroupId { get; set; }
            /// <summary>Specifies whether to return sections with or without subfolders</summary>
            [QueryParameter("withsubfolders")]
            public bool? Withsubfolders { get; set; }
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class FileItemRequestBuilderGetRequestConfiguration : RequestConfiguration<global::KiotaPosts.Client.Api.TwoZero.Files.Item.FileItemRequestBuilder.FileItemRequestBuilderGetQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
