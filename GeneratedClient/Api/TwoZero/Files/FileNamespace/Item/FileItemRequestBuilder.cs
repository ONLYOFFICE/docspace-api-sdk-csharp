// <auto-generated/>
#pragma warning disable CS0618
using KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Checkconversion;
using KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Comment;
using KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Copyas;
using KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Edit;
using KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Edit_session;
using KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.History;
using KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Isformpdf;
using KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Link;
using KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Links;
using KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Lock;
using KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Log;
using KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Openedit;
using KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Presigned;
using KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Presigneduri;
using KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Protectusers;
using KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Restoreversion;
using KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Saveaspdf;
using KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Saveediting;
using KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Startedit;
using KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Startfilling;
using KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Trackeditfile;
using KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.RequestDto;
using KiotaPosts.Client.Models.SuccessApiResponseOfASC.Files.Core.ApiModels.ResponseDto.FileDto.System;
using KiotaPosts.Client.Models.SuccessApiResponseOfASC.Files.Core.ApiModels.ResponseDto;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item
{
    /// <summary>
    /// Builds and executes requests for operations under \api\2.0\files\file\{file-id}
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class FileItemRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The checkconversion property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Checkconversion.CheckconversionRequestBuilder Checkconversion
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Checkconversion.CheckconversionRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The comment property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Comment.CommentRequestBuilder Comment
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Comment.CommentRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The copyas property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Copyas.CopyasRequestBuilder Copyas
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Copyas.CopyasRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The edit property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Edit.EditRequestBuilder Edit
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Edit.EditRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The edit_session property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Edit_session.Edit_sessionRequestBuilder Edit_session
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Edit_session.Edit_sessionRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The history property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.History.HistoryRequestBuilder History
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.History.HistoryRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The isformpdf property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Isformpdf.IsformpdfRequestBuilder Isformpdf
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Isformpdf.IsformpdfRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The link property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Link.LinkRequestBuilder Link
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Link.LinkRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The links property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Links.LinksRequestBuilder Links
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Links.LinksRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The lock property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Lock.LockRequestBuilder Lock
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Lock.LockRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The log property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Log.LogRequestBuilder Log
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Log.LogRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The openedit property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Openedit.OpeneditRequestBuilder Openedit
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Openedit.OpeneditRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The presigned property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Presigned.PresignedRequestBuilder Presigned
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Presigned.PresignedRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The presigneduri property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Presigneduri.PresigneduriRequestBuilder Presigneduri
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Presigneduri.PresigneduriRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The protectusers property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Protectusers.ProtectusersRequestBuilder Protectusers
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Protectusers.ProtectusersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The restoreversion property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Restoreversion.RestoreversionRequestBuilder Restoreversion
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Restoreversion.RestoreversionRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The saveaspdf property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Saveaspdf.SaveaspdfRequestBuilder Saveaspdf
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Saveaspdf.SaveaspdfRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The saveediting property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Saveediting.SaveeditingRequestBuilder Saveediting
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Saveediting.SaveeditingRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The startedit property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Startedit.StarteditRequestBuilder Startedit
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Startedit.StarteditRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The startfilling property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Startfilling.StartfillingRequestBuilder Startfilling
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Startfilling.StartfillingRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The trackeditfile property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Trackeditfile.TrackeditfileRequestBuilder Trackeditfile
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.Trackeditfile.TrackeditfileRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.FileItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public FileItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/2.0/files/file/{file%2Did}{?version*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.FileItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public FileItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/2.0/files/file/{file%2Did}{?version*}", rawUrl)
        {
        }
        /// <summary>
        /// Deletes a file with the ID specified in the request.
        /// </summary>
        /// <returns>A <see cref="global::KiotaPosts.Client.Models.SuccessApiResponseOfASC.Files.Core.ApiModels.ResponseDto.FileOperationDto"/></returns>
        /// <param name="body">Parameters for deleting a file</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::KiotaPosts.Client.Models.SuccessApiResponseOfASC.Files.Core.ApiModels.ResponseDto.FileOperationDto?> DeleteAsync(global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.RequestDto.Delete body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::KiotaPosts.Client.Models.SuccessApiResponseOfASC.Files.Core.ApiModels.ResponseDto.FileOperationDto> DeleteAsync(global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.RequestDto.Delete body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToDeleteRequestInformation(body, requestConfiguration);
            return await RequestAdapter.SendAsync<global::KiotaPosts.Client.Models.SuccessApiResponseOfASC.Files.Core.ApiModels.ResponseDto.FileOperationDto>(requestInfo, global::KiotaPosts.Client.Models.SuccessApiResponseOfASC.Files.Core.ApiModels.ResponseDto.FileOperationDto.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Returns the detailed information about a file with the ID specified in the request.
        /// </summary>
        /// <returns>A <see cref="global::KiotaPosts.Client.Models.SuccessApiResponseOfASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32Object"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::KiotaPosts.Client.Models.SuccessApiResponseOfASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32Object?> GetAsync(Action<RequestConfiguration<global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.FileItemRequestBuilder.FileItemRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::KiotaPosts.Client.Models.SuccessApiResponseOfASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32Object> GetAsync(Action<RequestConfiguration<global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.FileItemRequestBuilder.FileItemRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::KiotaPosts.Client.Models.SuccessApiResponseOfASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32Object>(requestInfo, global::KiotaPosts.Client.Models.SuccessApiResponseOfASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32Object.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Updates the information of the selected file with the parameters specified in the request.
        /// </summary>
        /// <returns>A <see cref="global::KiotaPosts.Client.Models.SuccessApiResponseOfASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32Object"/></returns>
        /// <param name="body">Parameters for updating a file</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::KiotaPosts.Client.Models.SuccessApiResponseOfASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32Object?> PutAsync(global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.RequestDto.UpdateFile body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::KiotaPosts.Client.Models.SuccessApiResponseOfASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32Object> PutAsync(global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.RequestDto.UpdateFile body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPutRequestInformation(body, requestConfiguration);
            return await RequestAdapter.SendAsync<global::KiotaPosts.Client.Models.SuccessApiResponseOfASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32Object>(requestInfo, global::KiotaPosts.Client.Models.SuccessApiResponseOfASC.Files.Core.ApiModels.ResponseDto.FileDto.System.Int32Object.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Deletes a file with the ID specified in the request.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">Parameters for deleting a file</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToDeleteRequestInformation(global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.RequestDto.Delete body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToDeleteRequestInformation(global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.RequestDto.Delete body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.DELETE, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json, text/plain;q=0.9");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns the detailed information about a file with the ID specified in the request.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.FileItemRequestBuilder.FileItemRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.FileItemRequestBuilder.FileItemRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json, text/plain;q=0.9");
            return requestInfo;
        }
        /// <summary>
        /// Updates the information of the selected file with the parameters specified in the request.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">Parameters for updating a file</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPutRequestInformation(global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.RequestDto.UpdateFile body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPutRequestInformation(global::KiotaPosts.Client.Models.ASC.Files.Core.ApiModels.RequestDto.UpdateFile body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.PUT, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json, text/plain;q=0.9");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.FileItemRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.FileItemRequestBuilder WithUrl(string rawUrl)
        {
            return new global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.FileItemRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class FileItemRequestBuilderDeleteRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
        /// <summary>
        /// Returns the detailed information about a file with the ID specified in the request.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class FileItemRequestBuilderGetQueryParameters 
        {
            /// <summary>File version</summary>
            [QueryParameter("version")]
            public int? Version { get; set; }
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class FileItemRequestBuilderGetRequestConfiguration : RequestConfiguration<global::KiotaPosts.Client.Api.TwoZero.Files.FileNamespace.Item.FileItemRequestBuilder.FileItemRequestBuilderGetQueryParameters>
        {
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class FileItemRequestBuilderPutRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
