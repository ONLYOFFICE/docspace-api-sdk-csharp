// <auto-generated/>
#pragma warning disable CS0618
using KiotaPosts.Client.Api.TwoZero.Settings.Authservice;
using KiotaPosts.Client.Api.TwoZero.Settings.Closeadminhelper;
using KiotaPosts.Client.Api.TwoZero.Settings.Colortheme;
using KiotaPosts.Client.Api.TwoZero.Settings.Companywhitelabel;
using KiotaPosts.Client.Api.TwoZero.Settings.Cookiesettings;
using KiotaPosts.Client.Api.TwoZero.Settings.Cultures;
using KiotaPosts.Client.Api.TwoZero.Settings.Customnavigation;
using KiotaPosts.Client.Api.TwoZero.Settings.Customschemas;
using KiotaPosts.Client.Api.TwoZero.Settings.Dns;
using KiotaPosts.Client.Api.TwoZero.Settings.Emailactivation;
using KiotaPosts.Client.Api.TwoZero.Settings.Enablewhitelabel;
using KiotaPosts.Client.Api.TwoZero.Settings.Encryption;
using KiotaPosts.Client.Api.TwoZero.Settings.Greetingsettings;
using KiotaPosts.Client.Api.TwoZero.Settings.Iprestrictions;
using KiotaPosts.Client.Api.TwoZero.Settings.License;
using KiotaPosts.Client.Api.TwoZero.Settings.Logo;
using KiotaPosts.Client.Api.TwoZero.Settings.Machine;
using KiotaPosts.Client.Api.TwoZero.Settings.Maildomainsettings;
using KiotaPosts.Client.Api.TwoZero.Settings.Messagesettings;
using KiotaPosts.Client.Api.TwoZero.Settings.Notification;
using KiotaPosts.Client.Api.TwoZero.Settings.Owner;
using KiotaPosts.Client.Api.TwoZero.Settings.Payment;
using KiotaPosts.Client.Api.TwoZero.Settings.Push;
using KiotaPosts.Client.Api.TwoZero.Settings.Rebranding;
using KiotaPosts.Client.Api.TwoZero.Settings.Roomquotasettings;
using KiotaPosts.Client.Api.TwoZero.Settings.Security;
using KiotaPosts.Client.Api.TwoZero.Settings.Sendadmmail;
using KiotaPosts.Client.Api.TwoZero.Settings.Sendjoininvite;
using KiotaPosts.Client.Api.TwoZero.Settings.Socket;
using KiotaPosts.Client.Api.TwoZero.Settings.Ssov2;
using KiotaPosts.Client.Api.TwoZero.Settings.Statistics;
using KiotaPosts.Client.Api.TwoZero.Settings.Storage;
using KiotaPosts.Client.Api.TwoZero.Settings.Tenantquotasettings;
using KiotaPosts.Client.Api.TwoZero.Settings.Tfaapp;
using KiotaPosts.Client.Api.TwoZero.Settings.Tfaappcodes;
using KiotaPosts.Client.Api.TwoZero.Settings.Tfaappnewapp;
using KiotaPosts.Client.Api.TwoZero.Settings.Tfaappnewcodes;
using KiotaPosts.Client.Api.TwoZero.Settings.Tfaappwithlink;
using KiotaPosts.Client.Api.TwoZero.Settings.Timezones;
using KiotaPosts.Client.Api.TwoZero.Settings.Tips;
using KiotaPosts.Client.Api.TwoZero.Settings.Userquotasettings;
using KiotaPosts.Client.Api.TwoZero.Settings.Webhook;
using KiotaPosts.Client.Api.TwoZero.Settings.Webhooks;
using KiotaPosts.Client.Api.TwoZero.Settings.Webplugins;
using KiotaPosts.Client.Api.TwoZero.Settings.Whitelabel;
using KiotaPosts.Client.Api.TwoZero.Settings.Wizard;
using KiotaPosts.Client.Models.SuccessApiResponseOfASC.Web.Api.ApiModel.ResponseDto;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace KiotaPosts.Client.Api.TwoZero.Settings
{
    /// <summary>
    /// Builds and executes requests for operations under \api\2.0\settings
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class SettingsRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The authservice property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Authservice.AuthserviceRequestBuilder Authservice
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Authservice.AuthserviceRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The closeadminhelper property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Closeadminhelper.CloseadminhelperRequestBuilder Closeadminhelper
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Closeadminhelper.CloseadminhelperRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The colortheme property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Colortheme.ColorthemeRequestBuilder Colortheme
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Colortheme.ColorthemeRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The companywhitelabel property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Companywhitelabel.CompanywhitelabelRequestBuilder Companywhitelabel
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Companywhitelabel.CompanywhitelabelRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The cookiesettings property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Cookiesettings.CookiesettingsRequestBuilder Cookiesettings
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Cookiesettings.CookiesettingsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The cultures property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Cultures.CulturesRequestBuilder Cultures
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Cultures.CulturesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The customnavigation property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Customnavigation.CustomnavigationRequestBuilder Customnavigation
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Customnavigation.CustomnavigationRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The customschemas property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Customschemas.CustomschemasRequestBuilder Customschemas
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Customschemas.CustomschemasRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The dns property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Dns.DnsRequestBuilder Dns
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Dns.DnsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The emailactivation property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Emailactivation.EmailactivationRequestBuilder Emailactivation
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Emailactivation.EmailactivationRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The enablewhitelabel property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Enablewhitelabel.EnablewhitelabelRequestBuilder Enablewhitelabel
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Enablewhitelabel.EnablewhitelabelRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The encryption property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Encryption.EncryptionRequestBuilder Encryption
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Encryption.EncryptionRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The greetingsettings property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Greetingsettings.GreetingsettingsRequestBuilder Greetingsettings
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Greetingsettings.GreetingsettingsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The iprestrictions property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Iprestrictions.IprestrictionsRequestBuilder Iprestrictions
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Iprestrictions.IprestrictionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The license property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.License.LicenseRequestBuilder License
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.License.LicenseRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The logo property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Logo.LogoRequestBuilder Logo
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Logo.LogoRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The machine property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Machine.MachineRequestBuilder Machine
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Machine.MachineRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The maildomainsettings property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Maildomainsettings.MaildomainsettingsRequestBuilder Maildomainsettings
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Maildomainsettings.MaildomainsettingsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The messagesettings property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Messagesettings.MessagesettingsRequestBuilder Messagesettings
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Messagesettings.MessagesettingsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The notification property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Notification.NotificationRequestBuilder Notification
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Notification.NotificationRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The owner property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Owner.OwnerRequestBuilder Owner
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Owner.OwnerRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The payment property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Payment.PaymentRequestBuilder Payment
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Payment.PaymentRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The push property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Push.PushRequestBuilder Push
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Push.PushRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The rebranding property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Rebranding.RebrandingRequestBuilder Rebranding
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Rebranding.RebrandingRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The roomquotasettings property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Roomquotasettings.RoomquotasettingsRequestBuilder Roomquotasettings
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Roomquotasettings.RoomquotasettingsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The security property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Security.SecurityRequestBuilder Security
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Security.SecurityRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The sendadmmail property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Sendadmmail.SendadmmailRequestBuilder Sendadmmail
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Sendadmmail.SendadmmailRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The sendjoininvite property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Sendjoininvite.SendjoininviteRequestBuilder Sendjoininvite
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Sendjoininvite.SendjoininviteRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The socket property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Socket.SocketRequestBuilder Socket
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Socket.SocketRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The ssov2 property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Ssov2.Ssov2RequestBuilder Ssov2
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Ssov2.Ssov2RequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The statistics property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Statistics.StatisticsRequestBuilder Statistics
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Statistics.StatisticsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The storage property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Storage.StorageRequestBuilder Storage
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Storage.StorageRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The tenantquotasettings property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Tenantquotasettings.TenantquotasettingsRequestBuilder Tenantquotasettings
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Tenantquotasettings.TenantquotasettingsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The tfaapp property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Tfaapp.TfaappRequestBuilder Tfaapp
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Tfaapp.TfaappRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The tfaappcodes property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Tfaappcodes.TfaappcodesRequestBuilder Tfaappcodes
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Tfaappcodes.TfaappcodesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The tfaappnewapp property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Tfaappnewapp.TfaappnewappRequestBuilder Tfaappnewapp
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Tfaappnewapp.TfaappnewappRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The tfaappnewcodes property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Tfaappnewcodes.TfaappnewcodesRequestBuilder Tfaappnewcodes
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Tfaappnewcodes.TfaappnewcodesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The tfaappwithlink property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Tfaappwithlink.TfaappwithlinkRequestBuilder Tfaappwithlink
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Tfaappwithlink.TfaappwithlinkRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The timezones property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Timezones.TimezonesRequestBuilder Timezones
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Timezones.TimezonesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The tips property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Tips.TipsRequestBuilder Tips
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Tips.TipsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The userquotasettings property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Userquotasettings.UserquotasettingsRequestBuilder Userquotasettings
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Userquotasettings.UserquotasettingsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The webhook property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Webhook.WebhookRequestBuilder Webhook
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Webhook.WebhookRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The webhooks property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Webhooks.WebhooksRequestBuilder Webhooks
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Webhooks.WebhooksRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The webplugins property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Webplugins.WebpluginsRequestBuilder Webplugins
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Webplugins.WebpluginsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The whitelabel property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Whitelabel.WhitelabelRequestBuilder Whitelabel
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Whitelabel.WhitelabelRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The wizard property</summary>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.Wizard.WizardRequestBuilder Wizard
        {
            get => new global::KiotaPosts.Client.Api.TwoZero.Settings.Wizard.WizardRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::KiotaPosts.Client.Api.TwoZero.Settings.SettingsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public SettingsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/2.0/settings{?withpassword*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::KiotaPosts.Client.Api.TwoZero.Settings.SettingsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public SettingsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/2.0/settings{?withpassword*}", rawUrl)
        {
        }
        /// <summary>
        /// Returns a list of all the available portal settings with the current values for each parameter.
        /// </summary>
        /// <returns>A <see cref="global::KiotaPosts.Client.Models.SuccessApiResponseOfASC.Web.Api.ApiModel.ResponseDto.SettingsDto"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::KiotaPosts.Client.Models.SuccessApiResponseOfASC.Web.Api.ApiModel.ResponseDto.SettingsDto?> GetAsync(Action<RequestConfiguration<global::KiotaPosts.Client.Api.TwoZero.Settings.SettingsRequestBuilder.SettingsRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::KiotaPosts.Client.Models.SuccessApiResponseOfASC.Web.Api.ApiModel.ResponseDto.SettingsDto> GetAsync(Action<RequestConfiguration<global::KiotaPosts.Client.Api.TwoZero.Settings.SettingsRequestBuilder.SettingsRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::KiotaPosts.Client.Models.SuccessApiResponseOfASC.Web.Api.ApiModel.ResponseDto.SettingsDto>(requestInfo, global::KiotaPosts.Client.Models.SuccessApiResponseOfASC.Web.Api.ApiModel.ResponseDto.SettingsDto.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Returns a list of all the available portal settings with the current values for each parameter.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::KiotaPosts.Client.Api.TwoZero.Settings.SettingsRequestBuilder.SettingsRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::KiotaPosts.Client.Api.TwoZero.Settings.SettingsRequestBuilder.SettingsRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json, text/plain;q=0.9");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::KiotaPosts.Client.Api.TwoZero.Settings.SettingsRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::KiotaPosts.Client.Api.TwoZero.Settings.SettingsRequestBuilder WithUrl(string rawUrl)
        {
            return new global::KiotaPosts.Client.Api.TwoZero.Settings.SettingsRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Returns a list of all the available portal settings with the current values for each parameter.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class SettingsRequestBuilderGetQueryParameters 
        {
            /// <summary>Specifies if the password hasher settings will be returned or not</summary>
            [QueryParameter("withpassword")]
            public bool? Withpassword { get; set; }
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class SettingsRequestBuilderGetRequestConfiguration : RequestConfiguration<global::KiotaPosts.Client.Api.TwoZero.Settings.SettingsRequestBuilder.SettingsRequestBuilderGetQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
