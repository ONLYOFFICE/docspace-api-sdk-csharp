/*
 * ASC.Web.Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using Docspace.Client;
using Docspace.Api;
// uncomment below to import models
//using Docspace.Model;

namespace Docspace.Test.Api
{
    /// <summary>
    ///  Class for testing PeopleUserDataApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PeopleUserDataApiTests : IDisposable
    {
        private PeopleUserDataApi instance;

        public PeopleUserDataApiTests()
        {
            instance = new PeopleUserDataApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PeopleUserDataApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' PeopleUserDataApi
            //Assert.IsType<PeopleUserDataApi>(instance);
        }

        /// <summary>
        /// Test GetReassignProgress
        /// </summary>
        [Fact]
        public void GetReassignProgressTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid userid = null;
            //var response = instance.GetReassignProgress(userid);
            //Assert.IsType<TaskProgressResponseWrapper>(response);
        }

        /// <summary>
        /// Test GetRemoveProgress
        /// </summary>
        [Fact]
        public void GetRemoveProgressTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid userid = null;
            //var response = instance.GetRemoveProgress(userid);
            //Assert.IsType<TaskProgressResponseWrapper>(response);
        }

        /// <summary>
        /// Test SendInstructionsToDelete
        /// </summary>
        [Fact]
        public void SendInstructionsToDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SendInstructionsToDelete();
            //Assert.IsType<StringWrapper>(response);
        }

        /// <summary>
        /// Test StartReassign
        /// </summary>
        [Fact]
        public void StartReassignTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //StartReassignRequestDto? startReassignRequestDto = null;
            //var response = instance.StartReassign(startReassignRequestDto);
            //Assert.IsType<TaskProgressResponseWrapper>(response);
        }

        /// <summary>
        /// Test StartRemove
        /// </summary>
        [Fact]
        public void StartRemoveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TerminateRequestDto? terminateRequestDto = null;
            //var response = instance.StartRemove(terminateRequestDto);
            //Assert.IsType<TaskProgressResponseWrapper>(response);
        }

        /// <summary>
        /// Test TerminateReassign
        /// </summary>
        [Fact]
        public void TerminateReassignTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TerminateRequestDto? terminateRequestDto = null;
            //var response = instance.TerminateReassign(terminateRequestDto);
            //Assert.IsType<TaskProgressResponseWrapper>(response);
        }

        /// <summary>
        /// Test TerminateRemove
        /// </summary>
        [Fact]
        public void TerminateRemoveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TerminateRequestDto? terminateRequestDto = null;
            //instance.TerminateRemove(terminateRequestDto);
        }
    }
}
