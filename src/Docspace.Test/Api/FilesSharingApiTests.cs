/*
 * Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using Docspace.Client;
using Docspace.Api;
// uncomment below to import models
//using Docspace.Model;

namespace Docspace.Test.Api
{
    /// <summary>
    ///  Class for testing FilesSharingApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class FilesSharingApiTests : IDisposable
    {
        private FilesSharingApi instance;

        public FilesSharingApiTests()
        {
            instance = new FilesSharingApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of FilesSharingApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' FilesSharingApi
            //Assert.IsType<FilesSharingApi>(instance);
        }

        /// <summary>
        /// Test ApplyExternalSharePassword
        /// </summary>
        [Fact]
        public void ApplyExternalSharePasswordTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //ExternalShareRequestParam? externalShareRequestParam = null;
            //var response = instance.ApplyExternalSharePassword(key, externalShareRequestParam);
            //Assert.IsType<ExternalShareWrapper>(response);
        }

        /// <summary>
        /// Test ChangeFileOwner
        /// </summary>
        [Fact]
        public void ChangeFileOwnerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ChangeOwnerRequestDto? changeOwnerRequestDto = null;
            //var response = instance.ChangeFileOwner(changeOwnerRequestDto);
            //Assert.IsType<FileEntryArrayWrapper>(response);
        }

        /// <summary>
        /// Test GetExternalShareData
        /// </summary>
        [Fact]
        public void GetExternalShareDataTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //string? fileId = null;
            //var response = instance.GetExternalShareData(key, fileId);
            //Assert.IsType<ExternalShareWrapper>(response);
        }

        /// <summary>
        /// Test GetSharedUsers
        /// </summary>
        [Fact]
        public void GetSharedUsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int fileId = null;
            //var response = instance.GetSharedUsers(fileId);
            //Assert.IsType<MentionWrapperArrayWrapper>(response);
        }

        /// <summary>
        /// Test SendEditorNotify
        /// </summary>
        [Fact]
        public void SendEditorNotifyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int fileId = null;
            //MentionMessageWrapper? mentionMessageWrapper = null;
            //var response = instance.SendEditorNotify(fileId, mentionMessageWrapper);
            //Assert.IsType<AceShortWrapperArrayWrapper>(response);
        }
    }
}
