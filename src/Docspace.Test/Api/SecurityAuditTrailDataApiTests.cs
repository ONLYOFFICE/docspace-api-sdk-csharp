/*
 * Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using Docspace.Client;
using Docspace.Api;
// uncomment below to import models
//using Docspace.Model;

namespace Docspace.Test.Api
{
    /// <summary>
    ///  Class for testing SecurityAuditTrailDataApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SecurityAuditTrailDataApiTests : IDisposable
    {
        private SecurityAuditTrailDataApi instance;

        public SecurityAuditTrailDataApiTests()
        {
            instance = new SecurityAuditTrailDataApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SecurityAuditTrailDataApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' SecurityAuditTrailDataApi
            //Assert.IsType<SecurityAuditTrailDataApi>(instance);
        }

        /// <summary>
        /// Test CreateAuditTrailReport
        /// </summary>
        [Fact]
        public void CreateAuditTrailReportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.CreateAuditTrailReport();
            //Assert.IsType<StringWrapper>(response);
        }

        /// <summary>
        /// Test GetAuditEventsByFilter
        /// </summary>
        [Fact]
        public void GetAuditEventsByFilterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? userId = null;
            //ProductType? productType = null;
            //ModuleType? moduleType = null;
            //ActionType? actionType = null;
            //MessageAction? action = null;
            //EntryType? entryType = null;
            //string? target = null;
            //ApiDateTime? from = null;
            //ApiDateTime? to = null;
            //var response = instance.GetAuditEventsByFilter(userId, productType, moduleType, actionType, action, entryType, target, from, to);
            //Assert.IsType<AuditEventArrayWrapper>(response);
        }

        /// <summary>
        /// Test GetAuditSettings
        /// </summary>
        [Fact]
        public void GetAuditSettingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAuditSettings();
            //Assert.IsType<TenantAuditSettingsWrapper>(response);
        }

        /// <summary>
        /// Test GetAuditTrailMappers
        /// </summary>
        [Fact]
        public void GetAuditTrailMappersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProductType? productType = null;
            //ModuleType? moduleType = null;
            //var response = instance.GetAuditTrailMappers(productType, moduleType);
            //Assert.IsType<ObjectWrapper>(response);
        }

        /// <summary>
        /// Test GetAuditTrailTypes
        /// </summary>
        [Fact]
        public void GetAuditTrailTypesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAuditTrailTypes();
            //Assert.IsType<ObjectWrapper>(response);
        }

        /// <summary>
        /// Test GetLastAuditEvents
        /// </summary>
        [Fact]
        public void GetLastAuditEventsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetLastAuditEvents();
            //Assert.IsType<AuditEventArrayWrapper>(response);
        }

        /// <summary>
        /// Test SetAuditSettings
        /// </summary>
        [Fact]
        public void SetAuditSettingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TenantAuditSettingsWrapper? tenantAuditSettingsWrapper = null;
            //var response = instance.SetAuditSettings(tenantAuditSettingsWrapper);
            //Assert.IsType<TenantAuditSettingsWrapper>(response);
        }
    }
}
