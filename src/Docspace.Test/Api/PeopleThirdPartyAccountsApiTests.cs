/*
 * Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using Docspace.Client;
using Docspace.Api;
// uncomment below to import models
//using Docspace.Model;

namespace Docspace.Test.Api
{
    /// <summary>
    ///  Class for testing PeopleThirdPartyAccountsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PeopleThirdPartyAccountsApiTests : IDisposable
    {
        private PeopleThirdPartyAccountsApi instance;

        public PeopleThirdPartyAccountsApiTests()
        {
            instance = new PeopleThirdPartyAccountsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PeopleThirdPartyAccountsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' PeopleThirdPartyAccountsApi
            //Assert.IsType<PeopleThirdPartyAccountsApi>(instance);
        }

        /// <summary>
        /// Test GetAuthProviders
        /// </summary>
        [Fact]
        public void GetAuthProvidersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? inviteView = null;
            //bool? settingsView = null;
            //string? clientCallback = null;
            //string? fromOnly = null;
            //var response = instance.GetAuthProviders(inviteView, settingsView, clientCallback, fromOnly);
            //Assert.IsType<AccountInfoArrayWrapper>(response);
        }

        /// <summary>
        /// Test LinkAccount
        /// </summary>
        [Fact]
        public void LinkAccountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //LinkAccountRequestDto? linkAccountRequestDto = null;
            //instance.LinkAccount(linkAccountRequestDto);
        }

        /// <summary>
        /// Test SignupAccount
        /// </summary>
        [Fact]
        public void SignupAccountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SignupAccountRequestDto? signupAccountRequestDto = null;
            //instance.SignupAccount(signupAccountRequestDto);
        }

        /// <summary>
        /// Test UnlinkAccount
        /// </summary>
        [Fact]
        public void UnlinkAccountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? provider = null;
            //instance.UnlinkAccount(provider);
        }
    }
}
