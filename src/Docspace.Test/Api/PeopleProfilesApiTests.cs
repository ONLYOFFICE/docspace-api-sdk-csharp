/*
 * Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using Docspace.Client;
using Docspace.Api;
// uncomment below to import models
//using Docspace.Model;

namespace Docspace.Test.Api
{
    /// <summary>
    ///  Class for testing PeopleProfilesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PeopleProfilesApiTests : IDisposable
    {
        private PeopleProfilesApi instance;

        public PeopleProfilesApiTests()
        {
            instance = new PeopleProfilesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PeopleProfilesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' PeopleProfilesApi
            //Assert.IsType<PeopleProfilesApi>(instance);
        }

        /// <summary>
        /// Test AddMember
        /// </summary>
        [Fact]
        public void AddMemberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //MemberRequestDto? memberRequestDto = null;
            //var response = instance.AddMember(memberRequestDto);
            //Assert.IsType<EmployeeFullWrapper>(response);
        }

        /// <summary>
        /// Test DeleteMember
        /// </summary>
        [Fact]
        public void DeleteMemberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userid = null;
            //var response = instance.DeleteMember(userid);
            //Assert.IsType<EmployeeFullWrapper>(response);
        }

        /// <summary>
        /// Test DeleteProfile
        /// </summary>
        [Fact]
        public void DeleteProfileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.DeleteProfile();
            //Assert.IsType<EmployeeFullWrapper>(response);
        }

        /// <summary>
        /// Test GetAllProfiles
        /// </summary>
        [Fact]
        public void GetAllProfilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllProfiles();
            //Assert.IsType<EmployeeFullArrayWrapper>(response);
        }

        /// <summary>
        /// Test GetByEmail
        /// </summary>
        [Fact]
        public void GetByEmailTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? email = null;
            //var response = instance.GetByEmail(email);
            //Assert.IsType<EmployeeFullWrapper>(response);
        }

        /// <summary>
        /// Test GetById
        /// </summary>
        [Fact]
        public void GetByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userid = null;
            //var response = instance.GetById(userid);
            //Assert.IsType<EmployeeFullWrapper>(response);
        }

        /// <summary>
        /// Test GetClaims
        /// </summary>
        [Fact]
        public void GetClaimsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetClaims();
            //Assert.IsType<ObjectWrapper>(response);
        }

        /// <summary>
        /// Test InviteUsers
        /// </summary>
        [Fact]
        public void InviteUsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //InviteUsersRequestDto? inviteUsersRequestDto = null;
            //var response = instance.InviteUsers(inviteUsersRequestDto);
            //Assert.IsType<EmployeeArrayWrapper>(response);
        }

        /// <summary>
        /// Test RemoveUsers
        /// </summary>
        [Fact]
        public void RemoveUsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateMembersRequestDto? updateMembersRequestDto = null;
            //var response = instance.RemoveUsers(updateMembersRequestDto);
            //Assert.IsType<EmployeeFullArrayWrapper>(response);
        }

        /// <summary>
        /// Test ResendUserInvites
        /// </summary>
        [Fact]
        public void ResendUserInvitesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateMembersRequestDto? updateMembersRequestDto = null;
            //var response = instance.ResendUserInvites(updateMembersRequestDto);
            //Assert.IsType<EmployeeFullArrayWrapper>(response);
        }

        /// <summary>
        /// Test Self
        /// </summary>
        [Fact]
        public void SelfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.Self();
            //Assert.IsType<EmployeeFullWrapper>(response);
        }

        /// <summary>
        /// Test SendEmailChangeInstructions
        /// </summary>
        [Fact]
        public void SendEmailChangeInstructionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateMemberRequestDto? updateMemberRequestDto = null;
            //var response = instance.SendEmailChangeInstructions(updateMemberRequestDto);
            //Assert.IsType<StringWrapper>(response);
        }

        /// <summary>
        /// Test UpdateMember
        /// </summary>
        [Fact]
        public void UpdateMemberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userid = null;
            //UpdateMemberRequestDto? updateMemberRequestDto = null;
            //var response = instance.UpdateMember(userid, updateMemberRequestDto);
            //Assert.IsType<EmployeeFullWrapper>(response);
        }

        /// <summary>
        /// Test UpdateMemberCulture
        /// </summary>
        [Fact]
        public void UpdateMemberCultureTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userid = null;
            //Culture? culture = null;
            //var response = instance.UpdateMemberCulture(userid, culture);
            //Assert.IsType<EmployeeFullWrapper>(response);
        }
    }
}
