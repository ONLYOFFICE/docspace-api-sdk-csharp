/*
 * Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using Docspace.Client;
using Docspace.Api;
// uncomment below to import models
//using Docspace.Model;

namespace Docspace.Test.Api
{
    /// <summary>
    ///  Class for testing PortalPaymentApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PortalPaymentApiTests : IDisposable
    {
        private PortalPaymentApi instance;

        public PortalPaymentApiTests()
        {
            instance = new PortalPaymentApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PortalPaymentApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' PortalPaymentApi
            //Assert.IsType<PortalPaymentApi>(instance);
        }

        /// <summary>
        /// Test CreateCustomerOperationsReport
        /// </summary>
        [Fact]
        public void CreateCustomerOperationsReportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CustomerOperationsReportDto? customerOperationsReportDto = null;
            //var response = instance.CreateCustomerOperationsReport(customerOperationsReportDto);
            //Assert.IsType<StringWrapper>(response);
        }

        /// <summary>
        /// Test GetAllCurrencies
        /// </summary>
        [Fact]
        public void GetAllCurrenciesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllCurrencies();
            //Assert.IsType<CurrencyArrayWrapper>(response);
        }

        /// <summary>
        /// Test GetChechoutSetupUrl
        /// </summary>
        [Fact]
        public void GetChechoutSetupUrlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? backUrl = null;
            //var response = instance.GetChechoutSetupUrl(backUrl);
            //Assert.IsType<StringWrapper>(response);
        }

        /// <summary>
        /// Test GetCurrencies
        /// </summary>
        [Fact]
        public void GetCurrenciesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetCurrencies();
            //Assert.IsType<CurrenciesArrayWrapper>(response);
        }

        /// <summary>
        /// Test GetCustomerBalance
        /// </summary>
        [Fact]
        public void GetCustomerBalanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? refresh = null;
            //var response = instance.GetCustomerBalance(refresh);
            //Assert.IsType<BalanceWrapper>(response);
        }

        /// <summary>
        /// Test GetCustomerInfo
        /// </summary>
        [Fact]
        public void GetCustomerInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? refresh = null;
            //var response = instance.GetCustomerInfo(refresh);
            //Assert.IsType<CustomerInfoWrapper>(response);
        }

        /// <summary>
        /// Test GetCustomerOperations
        /// </summary>
        [Fact]
        public void GetCustomerOperationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? startDate = null;
            //DateTime? endDate = null;
            //bool? credit = null;
            //bool? withdrawal = null;
            //int? offset = null;
            //int? limit = null;
            //var response = instance.GetCustomerOperations(startDate, endDate, credit, withdrawal, offset, limit);
            //Assert.IsType<ReportWrapper>(response);
        }

        /// <summary>
        /// Test GetPaymentAccount
        /// </summary>
        [Fact]
        public void GetPaymentAccountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? backUrl = null;
            //var response = instance.GetPaymentAccount(backUrl);
            //Assert.IsType<StringWrapper>(response);
        }

        /// <summary>
        /// Test GetPaymentUrl
        /// </summary>
        [Fact]
        public void GetPaymentUrlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PaymentUrlRequestsDto? paymentUrlRequestsDto = null;
            //var response = instance.GetPaymentUrl(paymentUrlRequestsDto);
            //Assert.IsType<StringWrapper>(response);
        }

        /// <summary>
        /// Test GetPrices
        /// </summary>
        [Fact]
        public void GetPricesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetPrices();
            //Assert.IsType<ObjectWrapper>(response);
        }

        /// <summary>
        /// Test GetQuotaInformation
        /// </summary>
        [Fact]
        public void GetQuotaInformationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? refresh = null;
            //var response = instance.GetQuotaInformation(refresh);
            //Assert.IsType<QuotaWrapper>(response);
        }

        /// <summary>
        /// Test GetQuotas
        /// </summary>
        [Fact]
        public void GetQuotasTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? wallet = null;
            //var response = instance.GetQuotas(wallet);
            //Assert.IsType<QuotaArrayWrapper>(response);
        }

        /// <summary>
        /// Test GetTenantWalletSettings
        /// </summary>
        [Fact]
        public void GetTenantWalletSettingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetTenantWalletSettings();
            //Assert.IsType<TenantWalletSettingsWrapper>(response);
        }

        /// <summary>
        /// Test OpenCustomerSession
        /// </summary>
        [Fact]
        public void OpenCustomerSessionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OpenCustomerSessionRequestDto? openCustomerSessionRequestDto = null;
            //var response = instance.OpenCustomerSession(openCustomerSessionRequestDto);
            //Assert.IsType<SessionWrapper>(response);
        }

        /// <summary>
        /// Test PaymentUpdate
        /// </summary>
        [Fact]
        public void PaymentUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //QuantityRequestDto? quantityRequestDto = null;
            //var response = instance.PaymentUpdate(quantityRequestDto);
            //Assert.IsType<BooleanWrapper>(response);
        }

        /// <summary>
        /// Test PaymentUpdateWallet
        /// </summary>
        [Fact]
        public void PaymentUpdateWalletTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WalletQuantityRequestDto? walletQuantityRequestDto = null;
            //var response = instance.PaymentUpdateWallet(walletQuantityRequestDto);
            //Assert.IsType<BooleanWrapper>(response);
        }

        /// <summary>
        /// Test PerformCustomerOperation
        /// </summary>
        [Fact]
        public void PerformCustomerOperationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PerformCustomerOperationRequestDto? performCustomerOperationRequestDto = null;
            //var response = instance.PerformCustomerOperation(performCustomerOperationRequestDto);
            //Assert.IsType<BooleanWrapper>(response);
        }

        /// <summary>
        /// Test SendSalesRequest
        /// </summary>
        [Fact]
        public void SendSalesRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SalesRequestsDto? salesRequestsDto = null;
            //instance.SendSalesRequest(salesRequestsDto);
        }

        /// <summary>
        /// Test SetTenantWalletSettings
        /// </summary>
        [Fact]
        public void SetTenantWalletSettingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TenantWalletSettingsWrapper? tenantWalletSettingsWrapper = null;
            //var response = instance.SetTenantWalletSettings(tenantWalletSettingsWrapper);
            //Assert.IsType<TenantWalletSettingsWrapper>(response);
        }

        /// <summary>
        /// Test TopUpDeposit
        /// </summary>
        [Fact]
        public void TopUpDepositTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TopUpDepositRequestDto? topUpDepositRequestDto = null;
            //var response = instance.TopUpDeposit(topUpDepositRequestDto);
            //Assert.IsType<StringWrapper>(response);
        }
    }
}
