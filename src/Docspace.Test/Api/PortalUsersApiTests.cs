/*
 * Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using Docspace.Client;
using Docspace.Api;
// uncomment below to import models
//using Docspace.Model;

namespace Docspace.Test.Api
{
    /// <summary>
    ///  Class for testing PortalUsersApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PortalUsersApiTests : IDisposable
    {
        private PortalUsersApi instance;

        public PortalUsersApiTests()
        {
            instance = new PortalUsersApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PortalUsersApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' PortalUsersApi
            //Assert.IsType<PortalUsersApi>(instance);
        }

        /// <summary>
        /// Test GetInvitationLink
        /// </summary>
        [Fact]
        public void GetInvitationLinkTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EmployeeType employeeType = null;
            //var response = instance.GetInvitationLink(employeeType);
            //Assert.IsType<StringWrapper>(response);
        }

        /// <summary>
        /// Test GetPortalUsersCount
        /// </summary>
        [Fact]
        public void GetPortalUsersCountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetPortalUsersCount();
            //Assert.IsType<Int64Wrapper>(response);
        }

        /// <summary>
        /// Test GetUserById
        /// </summary>
        [Fact]
        public void GetUserByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid userID = null;
            //var response = instance.GetUserById(userID);
            //Assert.IsType<UserInfoWrapper>(response);
        }

        /// <summary>
        /// Test MarkGiftMessageAsRead
        /// </summary>
        [Fact]
        public void MarkGiftMessageAsReadTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.MarkGiftMessageAsRead();
        }

        /// <summary>
        /// Test SendCongratulations
        /// </summary>
        [Fact]
        public void SendCongratulationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? userid = null;
            //string? key = null;
            //instance.SendCongratulations(userid, key);
        }
    }
}
