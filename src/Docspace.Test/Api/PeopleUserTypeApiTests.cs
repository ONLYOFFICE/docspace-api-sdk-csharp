/*
 * Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using Docspace.Client;
using Docspace.Api;
// uncomment below to import models
//using Docspace.Model;

namespace Docspace.Test.Api
{
    /// <summary>
    ///  Class for testing PeopleUserTypeApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PeopleUserTypeApiTests : IDisposable
    {
        private PeopleUserTypeApi instance;

        public PeopleUserTypeApiTests()
        {
            instance = new PeopleUserTypeApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PeopleUserTypeApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' PeopleUserTypeApi
            //Assert.IsType<PeopleUserTypeApi>(instance);
        }

        /// <summary>
        /// Test GetUserTypeUpdateProgress
        /// </summary>
        [Fact]
        public void GetUserTypeUpdateProgressTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid userid = null;
            //var response = instance.GetUserTypeUpdateProgress(userid);
            //Assert.IsType<TaskProgressResponseWrapper>(response);
        }

        /// <summary>
        /// Test StarUserTypetUpdate
        /// </summary>
        [Fact]
        public void StarUserTypetUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //StartUpdateUserTypeDto? startUpdateUserTypeDto = null;
            //var response = instance.StarUserTypetUpdate(startUpdateUserTypeDto);
            //Assert.IsType<TaskProgressResponseWrapper>(response);
        }

        /// <summary>
        /// Test TerminateUserTypeUpdate
        /// </summary>
        [Fact]
        public void TerminateUserTypeUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TerminateRequestDto? terminateRequestDto = null;
            //var response = instance.TerminateUserTypeUpdate(terminateRequestDto);
            //Assert.IsType<TaskProgressResponseWrapper>(response);
        }

        /// <summary>
        /// Test UpdateUserType
        /// </summary>
        [Fact]
        public void UpdateUserTypeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EmployeeType type = null;
            //UpdateMembersRequestDto? updateMembersRequestDto = null;
            //var response = instance.UpdateUserType(type, updateMembersRequestDto);
            //Assert.IsType<EmployeeFullArrayWrapper>(response);
        }
    }
}
