/*
 * Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using Docspace.Client;
using Docspace.Api;
// uncomment below to import models
//using Docspace.Model;

namespace Docspace.Test.Api
{
    /// <summary>
    ///  Class for testing AuthorizationApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AuthorizationApiTests : IDisposable
    {
        private AuthorizationApi instance;

        public AuthorizationApiTests()
        {
            instance = new AuthorizationApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AuthorizationApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AuthorizationApi
            //Assert.IsType<AuthorizationApi>(instance);
        }

        /// <summary>
        /// Test Oauth2AuthorizeGet
        /// </summary>
        [Fact]
        public void Oauth2AuthorizeGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string responseType = null;
            //string clientId = null;
            //string redirectUri = null;
            //string scope = null;
            //instance.Oauth2AuthorizeGet(responseType, clientId, redirectUri, scope);
        }

        /// <summary>
        /// Test Oauth2AuthorizePost
        /// </summary>
        [Fact]
        public void Oauth2AuthorizePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? clientId = null;
            //string? state = null;
            //string? scope = null;
            //instance.Oauth2AuthorizePost(clientId, state, scope);
        }

        /// <summary>
        /// Test Oauth2TokenPost
        /// </summary>
        [Fact]
        public void Oauth2TokenPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? grantType = null;
            //string? code = null;
            //string? redirectUri = null;
            //string? clientId = null;
            //string? clientSecret = null;
            //var response = instance.Oauth2TokenPost(grantType, code, redirectUri, clientId, clientSecret);
            //Assert.IsType<Oauth2TokenPost200Response>(response);
        }
    }
}
