/*
 * Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Docspace.Model;
using Docspace.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Docspace.Test.Model
{
    /// <summary>
    ///  Class for testing FolderContentDtoInteger
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class FolderContentDtoIntegerTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for FolderContentDtoInteger
        //private FolderContentDtoInteger instance;

        public FolderContentDtoIntegerTests()
        {
            // TODO uncomment below to create an instance of FolderContentDtoInteger
            //instance = new FolderContentDtoInteger();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of FolderContentDtoInteger
        /// </summary>
        [Fact]
        public void FolderContentDtoIntegerInstanceTest()
        {
            // TODO uncomment below to test "IsType" FolderContentDtoInteger
            //Assert.IsType<FolderContentDtoInteger>(instance);
        }

        /// <summary>
        /// Test the property 'Files'
        /// </summary>
        [Fact]
        public void FilesTest()
        {
            // TODO unit test for the property 'Files'
        }

        /// <summary>
        /// Test the property 'Folders'
        /// </summary>
        [Fact]
        public void FoldersTest()
        {
            // TODO unit test for the property 'Folders'
        }

        /// <summary>
        /// Test the property 'Current'
        /// </summary>
        [Fact]
        public void CurrentTest()
        {
            // TODO unit test for the property 'Current'
        }

        /// <summary>
        /// Test the property 'PathParts'
        /// </summary>
        [Fact]
        public void PathPartsTest()
        {
            // TODO unit test for the property 'PathParts'
        }

        /// <summary>
        /// Test the property 'StartIndex'
        /// </summary>
        [Fact]
        public void StartIndexTest()
        {
            // TODO unit test for the property 'StartIndex'
        }

        /// <summary>
        /// Test the property 'Count'
        /// </summary>
        [Fact]
        public void CountTest()
        {
            // TODO unit test for the property 'Count'
        }

        /// <summary>
        /// Test the property 'Total'
        /// </summary>
        [Fact]
        public void TotalTest()
        {
            // TODO unit test for the property 'Total'
        }

        /// <summary>
        /// Test the property 'New'
        /// </summary>
        [Fact]
        public void NewTest()
        {
            // TODO unit test for the property 'New'
        }
    }
}
