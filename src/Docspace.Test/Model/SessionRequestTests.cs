/*
 * ASC.Web.Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Docspace.Model;
using Docspace.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Docspace.Test.Model
{
    /// <summary>
    ///  Class for testing SessionRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class SessionRequestTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for SessionRequest
        //private SessionRequest instance;

        public SessionRequestTests()
        {
            // TODO uncomment below to create an instance of SessionRequest
            //instance = new SessionRequest();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SessionRequest
        /// </summary>
        [Fact]
        public void SessionRequestInstanceTest()
        {
            // TODO uncomment below to test "IsType" SessionRequest
            //Assert.IsType<SessionRequest>(instance);
        }

        /// <summary>
        /// Test the property 'FileName'
        /// </summary>
        [Fact]
        public void FileNameTest()
        {
            // TODO unit test for the property 'FileName'
        }

        /// <summary>
        /// Test the property 'FileSize'
        /// </summary>
        [Fact]
        public void FileSizeTest()
        {
            // TODO unit test for the property 'FileSize'
        }

        /// <summary>
        /// Test the property 'RelativePath'
        /// </summary>
        [Fact]
        public void RelativePathTest()
        {
            // TODO unit test for the property 'RelativePath'
        }

        /// <summary>
        /// Test the property 'CreateOn'
        /// </summary>
        [Fact]
        public void CreateOnTest()
        {
            // TODO unit test for the property 'CreateOn'
        }

        /// <summary>
        /// Test the property 'Encrypted'
        /// </summary>
        [Fact]
        public void EncryptedTest()
        {
            // TODO unit test for the property 'Encrypted'
        }

        /// <summary>
        /// Test the property 'CreateNewIfExist'
        /// </summary>
        [Fact]
        public void CreateNewIfExistTest()
        {
            // TODO unit test for the property 'CreateNewIfExist'
        }
    }
}
