/*
 * Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Docspace.Model;
using Docspace.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Docspace.Test.Model
{
    /// <summary>
    ///  Class for testing EmailActivationSettings
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class EmailActivationSettingsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for EmailActivationSettings
        //private EmailActivationSettings instance;

        public EmailActivationSettingsTests()
        {
            // TODO uncomment below to create an instance of EmailActivationSettings
            //instance = new EmailActivationSettings();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of EmailActivationSettings
        /// </summary>
        [Fact]
        public void EmailActivationSettingsInstanceTest()
        {
            // TODO uncomment below to test "IsType" EmailActivationSettings
            //Assert.IsType<EmailActivationSettings>(instance);
        }

        /// <summary>
        /// Test the property 'Show'
        /// </summary>
        [Fact]
        public void ShowTest()
        {
            // TODO unit test for the property 'Show'
        }

        /// <summary>
        /// Test the property 'LastModified'
        /// </summary>
        [Fact]
        public void LastModifiedTest()
        {
            // TODO unit test for the property 'LastModified'
        }
    }
}
