/*
 * Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Docspace.Model;
using Docspace.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Docspace.Test.Model
{
    /// <summary>
    ///  Class for testing IMagickGeometry
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class IMagickGeometryTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for IMagickGeometry
        //private IMagickGeometry instance;

        public IMagickGeometryTests()
        {
            // TODO uncomment below to create an instance of IMagickGeometry
            //instance = new IMagickGeometry();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of IMagickGeometry
        /// </summary>
        [Fact]
        public void IMagickGeometryInstanceTest()
        {
            // TODO uncomment below to test "IsType" IMagickGeometry
            //Assert.IsType<IMagickGeometry>(instance);
        }

        /// <summary>
        /// Test the property 'AspectRatio'
        /// </summary>
        [Fact]
        public void AspectRatioTest()
        {
            // TODO unit test for the property 'AspectRatio'
        }

        /// <summary>
        /// Test the property 'FillArea'
        /// </summary>
        [Fact]
        public void FillAreaTest()
        {
            // TODO unit test for the property 'FillArea'
        }

        /// <summary>
        /// Test the property 'Greater'
        /// </summary>
        [Fact]
        public void GreaterTest()
        {
            // TODO unit test for the property 'Greater'
        }

        /// <summary>
        /// Test the property 'Height'
        /// </summary>
        [Fact]
        public void HeightTest()
        {
            // TODO unit test for the property 'Height'
        }

        /// <summary>
        /// Test the property 'IgnoreAspectRatio'
        /// </summary>
        [Fact]
        public void IgnoreAspectRatioTest()
        {
            // TODO unit test for the property 'IgnoreAspectRatio'
        }

        /// <summary>
        /// Test the property 'IsPercentage'
        /// </summary>
        [Fact]
        public void IsPercentageTest()
        {
            // TODO unit test for the property 'IsPercentage'
        }

        /// <summary>
        /// Test the property 'Less'
        /// </summary>
        [Fact]
        public void LessTest()
        {
            // TODO unit test for the property 'Less'
        }

        /// <summary>
        /// Test the property 'LimitPixels'
        /// </summary>
        [Fact]
        public void LimitPixelsTest()
        {
            // TODO unit test for the property 'LimitPixels'
        }

        /// <summary>
        /// Test the property 'Width'
        /// </summary>
        [Fact]
        public void WidthTest()
        {
            // TODO unit test for the property 'Width'
        }

        /// <summary>
        /// Test the property 'X'
        /// </summary>
        [Fact]
        public void XTest()
        {
            // TODO unit test for the property 'X'
        }

        /// <summary>
        /// Test the property 'Y'
        /// </summary>
        [Fact]
        public void YTest()
        {
            // TODO unit test for the property 'Y'
        }
    }
}
