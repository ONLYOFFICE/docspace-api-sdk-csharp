/*
 * ASC.Web.Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Docspace.Client.FileParameter;
using OpenAPIDateConverter = Docspace.Client.OpenAPIDateConverter;

namespace Docspace.Model
{
    /// <summary>
    /// WebPluginRequests
    /// </summary>
    [DataContract(Name = "WebPluginRequests")]
    public partial class WebPluginRequests : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WebPluginRequests" /> class.
        /// </summary>
        /// <param name="enabled">Enabled.</param>
        /// <param name="settings">Settings.</param>
        public WebPluginRequests(bool enabled = default(bool), string settings = default(string))
        {
            this.Enabled = enabled;
            this.Settings = settings;
        }

        /// <summary>
        /// Enabled
        /// </summary>
        /// <value>Enabled</value>
        /*
        <example>true</example>
        */
        [DataMember(Name = "enabled", EmitDefaultValue = true)]
        public bool Enabled { get; set; }

        /// <summary>
        /// Settings
        /// </summary>
        /// <value>Settings</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "settings", EmitDefaultValue = true)]
        public string Settings { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class WebPluginRequests {\n");
            sb.Append("  Enabled: ").Append(Enabled).Append("\n");
            sb.Append("  Settings: ").Append(Settings).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // Settings (string) maxLength
            if (this.Settings != null && this.Settings.Length > 255)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Settings, length must be less than 255.", new [] { "Settings" });
            }

            // Settings (string) minLength
            if (this.Settings != null && this.Settings.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Settings, length must be greater than 0.", new [] { "Settings" });
            }

            yield break;
        }
    }

}
