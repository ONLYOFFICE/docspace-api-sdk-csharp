/*
 * ASC.Web.Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Docspace.Client.FileParameter;
using OpenAPIDateConverter = Docspace.Client.OpenAPIDateConverter;

namespace Docspace.Model
{
    /// <summary>
    /// HistoryDto
    /// </summary>
    [DataContract(Name = "HistoryDto")]
    public partial class HistoryDto : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="HistoryDto" /> class.
        /// </summary>
        /// <param name="action">action.</param>
        /// <param name="initiator">initiator.</param>
        /// <param name="date">date.</param>
        /// <param name="data">data.</param>
        /// <param name="related">Related.</param>
        public HistoryDto(HistoryAction action = default(HistoryAction), EmployeeDto initiator = default(EmployeeDto), ApiDateTime date = default(ApiDateTime), HistoryData data = default(HistoryData), List<HistoryDto> related = default(List<HistoryDto>))
        {
            this.Action = action;
            this.Initiator = initiator;
            this.Date = date;
            this.Data = data;
            this.Related = related;
        }

        /// <summary>
        /// Gets or Sets Action
        /// </summary>
        [DataMember(Name = "action", EmitDefaultValue = false)]
        public HistoryAction Action { get; set; }

        /// <summary>
        /// Gets or Sets Initiator
        /// </summary>
        [DataMember(Name = "initiator", EmitDefaultValue = false)]
        public EmployeeDto Initiator { get; set; }

        /// <summary>
        /// Gets or Sets Date
        /// </summary>
        [DataMember(Name = "date", EmitDefaultValue = false)]
        public ApiDateTime Date { get; set; }

        /// <summary>
        /// Gets or Sets Data
        /// </summary>
        [DataMember(Name = "data", EmitDefaultValue = false)]
        public HistoryData Data { get; set; }

        /// <summary>
        /// Related
        /// </summary>
        /// <value>Related</value>
        [DataMember(Name = "related", EmitDefaultValue = true)]
        public List<HistoryDto> Related { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class HistoryDto {\n");
            sb.Append("  Action: ").Append(Action).Append("\n");
            sb.Append("  Initiator: ").Append(Initiator).Append("\n");
            sb.Append("  Date: ").Append(Date).Append("\n");
            sb.Append("  Data: ").Append(Data).Append("\n");
            sb.Append("  Related: ").Append(Related).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
