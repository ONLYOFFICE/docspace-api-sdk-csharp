/*
 * ASC.Web.Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Docspace.Client.FileParameter;
using OpenAPIDateConverter = Docspace.Client.OpenAPIDateConverter;

namespace Docspace.Model
{
    /// <summary>
    /// Request parameters for mail domain settings
    /// </summary>
    [DataContract(Name = "MailDomainSettingsRequestsDto")]
    public partial class MailDomainSettingsRequestsDto : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name = "type", EmitDefaultValue = false)]
        public TenantTrustedDomainsType? Type { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="MailDomainSettingsRequestsDto" /> class.
        /// </summary>
        /// <param name="type">type.</param>
        /// <param name="domains">List of trusted domains.</param>
        /// <param name="inviteUsersAsVisitors">Invites as a user or not.</param>
        public MailDomainSettingsRequestsDto(TenantTrustedDomainsType? type = default(TenantTrustedDomainsType?), List<string> domains = default(List<string>), bool inviteUsersAsVisitors = default(bool))
        {
            this.Type = type;
            this.Domains = domains;
            this.InviteUsersAsVisitors = inviteUsersAsVisitors;
        }

        /// <summary>
        /// List of trusted domains
        /// </summary>
        /// <value>List of trusted domains</value>
        /*
        <example>[&quot;some text&quot;]</example>
        */
        [DataMember(Name = "domains", EmitDefaultValue = true)]
        public List<string> Domains { get; set; }

        /// <summary>
        /// Invites as a user or not
        /// </summary>
        /// <value>Invites as a user or not</value>
        /*
        <example>true</example>
        */
        [DataMember(Name = "inviteUsersAsVisitors", EmitDefaultValue = true)]
        public bool InviteUsersAsVisitors { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class MailDomainSettingsRequestsDto {\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  Domains: ").Append(Domains).Append("\n");
            sb.Append("  InviteUsersAsVisitors: ").Append(InviteUsersAsVisitors).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
