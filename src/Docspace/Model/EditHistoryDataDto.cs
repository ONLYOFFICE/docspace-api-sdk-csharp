/*
 * ASC.Web.Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Docspace.Client.FileParameter;
using OpenAPIDateConverter = Docspace.Client.OpenAPIDateConverter;

namespace Docspace.Model
{
    /// <summary>
    /// EditHistoryDataDto
    /// </summary>
    [DataContract(Name = "EditHistoryDataDto")]
    public partial class EditHistoryDataDto : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EditHistoryDataDto" /> class.
        /// </summary>
        /// <param name="changesUrl">URL to the file changes.</param>
        /// <param name="key">Key.</param>
        /// <param name="previous">previous.</param>
        /// <param name="token">Token.</param>
        /// <param name="url">File URL.</param>
        /// <param name="varVersion">File version.</param>
        /// <param name="fileType">File type.</param>
        public EditHistoryDataDto(string changesUrl = default(string), string key = default(string), EditHistoryUrl previous = default(EditHistoryUrl), string token = default(string), string url = default(string), int varVersion = default(int), string fileType = default(string))
        {
            this.ChangesUrl = changesUrl;
            this.Key = key;
            this.Previous = previous;
            this.Token = token;
            this.Url = url;
            this.VarVersion = varVersion;
            this.FileType = fileType;
        }

        /// <summary>
        /// URL to the file changes
        /// </summary>
        /// <value>URL to the file changes</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "changesUrl", EmitDefaultValue = true)]
        public string ChangesUrl { get; set; }

        /// <summary>
        /// Key
        /// </summary>
        /// <value>Key</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "key", EmitDefaultValue = true)]
        public string Key { get; set; }

        /// <summary>
        /// Gets or Sets Previous
        /// </summary>
        [DataMember(Name = "previous", EmitDefaultValue = false)]
        public EditHistoryUrl Previous { get; set; }

        /// <summary>
        /// Token
        /// </summary>
        /// <value>Token</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "token", EmitDefaultValue = true)]
        public string Token { get; set; }

        /// <summary>
        /// File URL
        /// </summary>
        /// <value>File URL</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "url", EmitDefaultValue = true)]
        public string Url { get; set; }

        /// <summary>
        /// File version
        /// </summary>
        /// <value>File version</value>
        /*
        <example>1234</example>
        */
        [DataMember(Name = "version", EmitDefaultValue = false)]
        public int VarVersion { get; set; }

        /// <summary>
        /// File type
        /// </summary>
        /// <value>File type</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "fileType", EmitDefaultValue = true)]
        public string FileType { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EditHistoryDataDto {\n");
            sb.Append("  ChangesUrl: ").Append(ChangesUrl).Append("\n");
            sb.Append("  Key: ").Append(Key).Append("\n");
            sb.Append("  Previous: ").Append(Previous).Append("\n");
            sb.Append("  Token: ").Append(Token).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("  VarVersion: ").Append(VarVersion).Append("\n");
            sb.Append("  FileType: ").Append(FileType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
