/*
 * ASC.Web.Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Docspace.Client.FileParameter;
using OpenAPIDateConverter = Docspace.Client.OpenAPIDateConverter;

namespace Docspace.Model
{
    /// <summary>
    /// CoEditingConfig
    /// </summary>
    [DataContract(Name = "CoEditingConfig")]
    public partial class CoEditingConfig : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets Mode
        /// </summary>
        [DataMember(Name = "mode", EmitDefaultValue = false)]
        public CoEditingConfigMode? Mode { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="CoEditingConfig" /> class.
        /// </summary>
        /// <param name="change">Change.</param>
        /// <param name="fast">Fast.</param>
        /// <param name="mode">mode.</param>
        public CoEditingConfig(bool change = default(bool), bool fast = default(bool), CoEditingConfigMode? mode = default(CoEditingConfigMode?))
        {
            this.Change = change;
            this.Fast = fast;
            this.Mode = mode;
        }

        /// <summary>
        /// Change
        /// </summary>
        /// <value>Change</value>
        /*
        <example>true</example>
        */
        [DataMember(Name = "change", EmitDefaultValue = true)]
        public bool Change { get; set; }

        /// <summary>
        /// Fast
        /// </summary>
        /// <value>Fast</value>
        /*
        <example>true</example>
        */
        [DataMember(Name = "fast", EmitDefaultValue = true)]
        public bool Fast { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CoEditingConfig {\n");
            sb.Append("  Change: ").Append(Change).Append("\n");
            sb.Append("  Fast: ").Append(Fast).Append("\n");
            sb.Append("  Mode: ").Append(Mode).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
