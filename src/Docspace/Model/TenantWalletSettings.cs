/*
 * Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Docspace.Client.FileParameter;
using OpenAPIDateConverter = Docspace.Client.OpenAPIDateConverter;

namespace Docspace.Model
{
    /// <summary>
    /// TenantWalletSettings
    /// </summary>
    [DataContract(Name = "TenantWalletSettings")]
    public partial class TenantWalletSettings : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TenantWalletSettings" /> class.
        /// </summary>
        /// <param name="enabled">Enabled.</param>
        /// <param name="minBalance">Minimun balance.</param>
        /// <param name="upToBalance">Up to balance.</param>
        /// <param name="currency">Currency.</param>
        /// <param name="lastModified">lastModified.</param>
        public TenantWalletSettings(bool enabled = default(bool), int minBalance = default(int), int upToBalance = default(int), string currency = default(string), DateTime lastModified = default(DateTime))
        {
            this.Enabled = enabled;
            this.MinBalance = minBalance;
            this.UpToBalance = upToBalance;
            this.Currency = currency;
            this.LastModified = lastModified;
        }

        /// <summary>
        /// Enabled
        /// </summary>
        /// <value>Enabled</value>
        /*
        <example>true</example>
        */
        [DataMember(Name = "enabled", EmitDefaultValue = true)]
        public bool Enabled { get; set; }

        /// <summary>
        /// Minimun balance
        /// </summary>
        /// <value>Minimun balance</value>
        /*
        <example>1234</example>
        */
        [DataMember(Name = "minBalance", EmitDefaultValue = false)]
        public int MinBalance { get; set; }

        /// <summary>
        /// Up to balance
        /// </summary>
        /// <value>Up to balance</value>
        /*
        <example>1234</example>
        */
        [DataMember(Name = "upToBalance", EmitDefaultValue = false)]
        public int UpToBalance { get; set; }

        /// <summary>
        /// Currency
        /// </summary>
        /// <value>Currency</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "currency", EmitDefaultValue = true)]
        public string Currency { get; set; }

        /// <summary>
        /// Gets or Sets LastModified
        /// </summary>
        /*
        <example>2008-04-10T06:30+04:00</example>
        */
        [DataMember(Name = "lastModified", EmitDefaultValue = false)]
        public DateTime LastModified { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TenantWalletSettings {\n");
            sb.Append("  Enabled: ").Append(Enabled).Append("\n");
            sb.Append("  MinBalance: ").Append(MinBalance).Append("\n");
            sb.Append("  UpToBalance: ").Append(UpToBalance).Append("\n");
            sb.Append("  Currency: ").Append(Currency).Append("\n");
            sb.Append("  LastModified: ").Append(LastModified).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // MinBalance (int) maximum
            if (this.MinBalance > (int)1000)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for MinBalance, must be a value less than or equal to 1000.", new [] { "MinBalance" });
            }

            // MinBalance (int) minimum
            if (this.MinBalance < (int)5)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for MinBalance, must be a value greater than or equal to 5.", new [] { "MinBalance" });
            }

            // UpToBalance (int) maximum
            if (this.UpToBalance > (int)5000)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for UpToBalance, must be a value less than or equal to 5000.", new [] { "UpToBalance" });
            }

            // UpToBalance (int) minimum
            if (this.UpToBalance < (int)6)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for UpToBalance, must be a value greater than or equal to 6.", new [] { "UpToBalance" });
            }

            yield break;
        }
    }

}
