/*
 * Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Docspace.Client.FileParameter;
using OpenAPIDateConverter = Docspace.Client.OpenAPIDateConverter;

namespace Docspace.Model
{
    /// <summary>
    /// User invitation settings
    /// </summary>
    [DataContract(Name = "TenantUserInvitationSettingsRequestDto")]
    public partial class TenantUserInvitationSettingsRequestDto : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TenantUserInvitationSettingsRequestDto" /> class.
        /// </summary>
        /// <param name="allowInvitingMembers">Allow invite new DocSpace members through the Contacts section..</param>
        /// <param name="allowInvitingGuests">Allow all DocSpace members to invite external guests to rooms..</param>
        public TenantUserInvitationSettingsRequestDto(bool allowInvitingMembers = default(bool), bool allowInvitingGuests = default(bool))
        {
            this.AllowInvitingMembers = allowInvitingMembers;
            this.AllowInvitingGuests = allowInvitingGuests;
        }

        /// <summary>
        /// Allow invite new DocSpace members through the Contacts section.
        /// </summary>
        /// <value>Allow invite new DocSpace members through the Contacts section.</value>
        /*
        <example>true</example>
        */
        [DataMember(Name = "allowInvitingMembers", EmitDefaultValue = true)]
        public bool AllowInvitingMembers { get; set; }

        /// <summary>
        /// Allow all DocSpace members to invite external guests to rooms.
        /// </summary>
        /// <value>Allow all DocSpace members to invite external guests to rooms.</value>
        /*
        <example>true</example>
        */
        [DataMember(Name = "allowInvitingGuests", EmitDefaultValue = true)]
        public bool AllowInvitingGuests { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TenantUserInvitationSettingsRequestDto {\n");
            sb.Append("  AllowInvitingMembers: ").Append(AllowInvitingMembers).Append("\n");
            sb.Append("  AllowInvitingGuests: ").Append(AllowInvitingGuests).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
