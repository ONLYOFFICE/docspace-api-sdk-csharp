/*
 * Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Docspace.Client.FileParameter;
using OpenAPIDateConverter = Docspace.Client.OpenAPIDateConverter;

namespace Docspace.Model
{
    /// <summary>
    /// The request parameters for configuring security settings of a single web module.
    /// </summary>
    [DataContract(Name = "WebItemSecurityRequestsDto")]
    public partial class WebItemSecurityRequestsDto : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WebItemSecurityRequestsDto" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected WebItemSecurityRequestsDto() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="WebItemSecurityRequestsDto" /> class.
        /// </summary>
        /// <param name="id">The module ID. (required).</param>
        /// <param name="enabled">Controls whether the security restrictions are enforced for this module..</param>
        /// <param name="subjects">The collection of user and group identifiers granted access to the module..</param>
        public WebItemSecurityRequestsDto(string id = default(string), bool enabled = default(bool), List<Guid> subjects = default(List<Guid>))
        {
            // to ensure "id" is required (not null)
            if (id == null)
            {
                throw new ArgumentNullException("id is a required property for WebItemSecurityRequestsDto and cannot be null");
            }
            this.Id = id;
            this.Enabled = enabled;
            this.Subjects = subjects;
        }

        /// <summary>
        /// The module ID.
        /// </summary>
        /// <value>The module ID.</value>
        /*
        <example>9846</example>
        */
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = true)]
        public string Id { get; set; }

        /// <summary>
        /// Controls whether the security restrictions are enforced for this module.
        /// </summary>
        /// <value>Controls whether the security restrictions are enforced for this module.</value>
        /*
        <example>true</example>
        */
        [DataMember(Name = "enabled", EmitDefaultValue = true)]
        public bool Enabled { get; set; }

        /// <summary>
        /// The collection of user and group identifiers granted access to the module.
        /// </summary>
        /// <value>The collection of user and group identifiers granted access to the module.</value>
        /*
        <example>[&quot;75a5f745-f697-4418-b38d-0fe0d277e258&quot;]</example>
        */
        [DataMember(Name = "subjects", EmitDefaultValue = true)]
        public List<Guid> Subjects { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class WebItemSecurityRequestsDto {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Enabled: ").Append(Enabled).Append("\n");
            sb.Append("  Subjects: ").Append(Subjects).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
