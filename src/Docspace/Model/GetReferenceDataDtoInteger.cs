/*
 * Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Docspace.Client.FileParameter;
using OpenAPIDateConverter = Docspace.Client.OpenAPIDateConverter;

namespace Docspace.Model
{
    /// <summary>
    /// The request parameters for getting reference data.
    /// </summary>
    [DataContract(Name = "GetReferenceDataDtoInteger")]
    public partial class GetReferenceDataDtoInteger : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetReferenceDataDtoInteger" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GetReferenceDataDtoInteger() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetReferenceDataDtoInteger" /> class.
        /// </summary>
        /// <param name="fileKey">The unique document identifier used by the service to get a link to the file. (required).</param>
        /// <param name="instanceId">The unique system identifier..</param>
        /// <param name="sourceFileId">The source file ID..</param>
        /// <param name="path">The file name or relative path for the formula editor..</param>
        /// <param name="link">The file link..</param>
        public GetReferenceDataDtoInteger(int fileKey = default(int), string instanceId = default(string), int sourceFileId = default(int), string path = default(string), string link = default(string))
        {
            this.FileKey = fileKey;
            this.InstanceId = instanceId;
            this.SourceFileId = sourceFileId;
            this.Path = path;
            this.Link = link;
        }

        /// <summary>
        /// The unique document identifier used by the service to get a link to the file.
        /// </summary>
        /// <value>The unique document identifier used by the service to get a link to the file.</value>
        /*
        <example>1234</example>
        */
        [DataMember(Name = "fileKey", IsRequired = true, EmitDefaultValue = true)]
        public int FileKey { get; set; }

        /// <summary>
        /// The unique system identifier.
        /// </summary>
        /// <value>The unique system identifier.</value>
        /*
        <example>9846</example>
        */
        [DataMember(Name = "instanceId", EmitDefaultValue = true)]
        public string InstanceId { get; set; }

        /// <summary>
        /// The source file ID.
        /// </summary>
        /// <value>The source file ID.</value>
        /*
        <example>1234</example>
        */
        [DataMember(Name = "sourceFileId", EmitDefaultValue = false)]
        public int SourceFileId { get; set; }

        /// <summary>
        /// The file name or relative path for the formula editor.
        /// </summary>
        /// <value>The file name or relative path for the formula editor.</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "path", EmitDefaultValue = true)]
        public string Path { get; set; }

        /// <summary>
        /// The file link.
        /// </summary>
        /// <value>The file link.</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "link", EmitDefaultValue = true)]
        public string Link { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GetReferenceDataDtoInteger {\n");
            sb.Append("  FileKey: ").Append(FileKey).Append("\n");
            sb.Append("  InstanceId: ").Append(InstanceId).Append("\n");
            sb.Append("  SourceFileId: ").Append(SourceFileId).Append("\n");
            sb.Append("  Path: ").Append(Path).Append("\n");
            sb.Append("  Link: ").Append(Link).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
