/*
 * ASC.Web.Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Docspace.Client.FileParameter;
using OpenAPIDateConverter = Docspace.Client.OpenAPIDateConverter;

namespace Docspace.Model
{
    /// <summary>
    /// Custom navigation parameters
    /// </summary>
    [DataContract(Name = "CustomNavigationItem")]
    public partial class CustomNavigationItem : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomNavigationItem" /> class.
        /// </summary>
        /// <param name="id">Id.</param>
        /// <param name="label">Label.</param>
        /// <param name="url">URL.</param>
        /// <param name="bigImg">Big image.</param>
        /// <param name="smallImg">Small image.</param>
        /// <param name="showInMenu">Show in menu or not.</param>
        /// <param name="showOnHomePage">Show on home page or not.</param>
        public CustomNavigationItem(Guid id = default(Guid), string label = default(string), string url = default(string), string bigImg = default(string), string smallImg = default(string), bool showInMenu = default(bool), bool showOnHomePage = default(bool))
        {
            this.Id = id;
            this.Label = label;
            this.Url = url;
            this.BigImg = bigImg;
            this.SmallImg = smallImg;
            this.ShowInMenu = showInMenu;
            this.ShowOnHomePage = showOnHomePage;
        }

        /// <summary>
        /// Id
        /// </summary>
        /// <value>Id</value>
        /*
        <example>aae1e103-bca5-9fa1-ba8c-42058b4abf28</example>
        */
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public Guid Id { get; set; }

        /// <summary>
        /// Label
        /// </summary>
        /// <value>Label</value>
        /*
        <example>Label</example>
        */
        [DataMember(Name = "label", EmitDefaultValue = true)]
        public string Label { get; set; }

        /// <summary>
        /// URL
        /// </summary>
        /// <value>URL</value>
        /*
        <example>Url</example>
        */
        [DataMember(Name = "url", EmitDefaultValue = true)]
        public string Url { get; set; }

        /// <summary>
        /// Big image
        /// </summary>
        /// <value>Big image</value>
        /*
        <example>data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAGQAAABkAgMAAAANjH3HAAAADFBMVEUAAADJycnJycnJycmiuNtHAAAAA3RSTlMAf4C\/aSLHAAAAyElEQVR4Xu3NsQ3CMBSE4YubFB4ilHQegdGSjWACvEpGoEyBYiL05AdnXUGHolx10lf82MmOpfLeo5UoJUhBlpKkRCnhUy7b9XCWkqQMUkYlXVHSf8kTvkHKqKQrSnopg5SRxTMklLmS1MwaSWpmCSQ1MyOzWGZCYrEMEFksA4QqlAFuJJYBcCKxjM3FMySeIfEMC2dMOONCGZZgmdr1ly3TSrJMK9EyJBaaGrHQikYstAiJZRYSyiQEdyg5S8Evckih\/YPscsdej0H6dc0TYw4AAAAASUVORK5CYII&#x3D;</example>
        */
        [DataMember(Name = "bigImg", EmitDefaultValue = true)]
        public string BigImg { get; set; }

        /// <summary>
        /// Small image
        /// </summary>
        /// <value>Small image</value>
        /*
        <example>data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8\/9hAAAAUUlEQVR4AWMY\/KC5o\/cAEP9HxxgKcSpCGELYADyu2E6mAQjNxBlAWPNxkHdwGkBIM3KYYDUAr2ZCAE+oH8eujrAXDsA0k2EAAtDXAGLx4MpsADUgvkRKUlqfAAAAAElFTkSuQmCC</example>
        */
        [DataMember(Name = "smallImg", EmitDefaultValue = true)]
        public string SmallImg { get; set; }

        /// <summary>
        /// Show in menu or not
        /// </summary>
        /// <value>Show in menu or not</value>
        /*
        <example>true</example>
        */
        [DataMember(Name = "showInMenu", EmitDefaultValue = true)]
        public bool ShowInMenu { get; set; }

        /// <summary>
        /// Show on home page or not
        /// </summary>
        /// <value>Show on home page or not</value>
        /*
        <example>true</example>
        */
        [DataMember(Name = "showOnHomePage", EmitDefaultValue = true)]
        public bool ShowOnHomePage { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CustomNavigationItem {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Label: ").Append(Label).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("  BigImg: ").Append(BigImg).Append("\n");
            sb.Append("  SmallImg: ").Append(SmallImg).Append("\n");
            sb.Append("  ShowInMenu: ").Append(ShowInMenu).Append("\n");
            sb.Append("  ShowOnHomePage: ").Append(ShowOnHomePage).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
