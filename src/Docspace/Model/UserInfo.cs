/*
 * ASC.Web.Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Docspace.Client.FileParameter;
using OpenAPIDateConverter = Docspace.Client.OpenAPIDateConverter;

namespace Docspace.Model
{
    /// <summary>
    /// UserInfo
    /// </summary>
    [DataContract(Name = "UserInfo")]
    public partial class UserInfo : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public EmployeeStatus? Status { get; set; }

        /// <summary>
        /// Gets or Sets ActivationStatus
        /// </summary>
        [DataMember(Name = "activationStatus", EmitDefaultValue = false)]
        public EmployeeActivationStatus? ActivationStatus { get; set; }

        /// <summary>
        /// Gets or Sets MobilePhoneActivationStatus
        /// </summary>
        [DataMember(Name = "mobilePhoneActivationStatus", EmitDefaultValue = false)]
        public MobilePhoneActivationStatus? MobilePhoneActivationStatus { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="UserInfo" /> class.
        /// </summary>
        /// <param name="id">ID.</param>
        /// <param name="firstName">First name.</param>
        /// <param name="lastName">Last name.</param>
        /// <param name="userName">Username.</param>
        /// <param name="birthDate">Birthday.</param>
        /// <param name="sex">Sex (male or female).</param>
        /// <param name="status">status.</param>
        /// <param name="activationStatus">activationStatus.</param>
        /// <param name="terminatedDate">The date and time when the user account was terminated.</param>
        /// <param name="title">Title.</param>
        /// <param name="workFromDate">Registration date.</param>
        /// <param name="email">Email.</param>
        /// <param name="contacts">List of contacts in the string format.</param>
        /// <param name="contactsList">List of contacts.</param>
        /// <param name="location">Location.</param>
        /// <param name="notes">Notes.</param>
        /// <param name="removed">Specifies if the user account was removed or not.</param>
        /// <param name="lastModified">Last modified date.</param>
        /// <param name="tenantId">Tenant ID.</param>
        /// <param name="cultureName">Language.</param>
        /// <param name="mobilePhone">Mobile phone.</param>
        /// <param name="mobilePhoneActivationStatus">mobilePhoneActivationStatus.</param>
        /// <param name="sid">LDAP user identificator.</param>
        /// <param name="ldapQouta">LDAP user quota attribute.</param>
        /// <param name="ssoNameId">SSO SAML user identificator.</param>
        /// <param name="ssoSessionId">SSO SAML user session identificator.</param>
        /// <param name="createDate">Creation date.</param>
        /// <param name="createdBy">createdBy.</param>
        /// <param name="spam">spam.</param>
        public UserInfo(Guid id = default(Guid), string firstName = default(string), string lastName = default(string), string userName = default(string), DateTime? birthDate = default(DateTime?), bool? sex = default(bool?), EmployeeStatus? status = default(EmployeeStatus?), EmployeeActivationStatus? activationStatus = default(EmployeeActivationStatus?), DateTime? terminatedDate = default(DateTime?), string title = default(string), DateTime? workFromDate = default(DateTime?), string email = default(string), string contacts = default(string), List<string> contactsList = default(List<string>), string location = default(string), string notes = default(string), bool removed = default(bool), DateTime lastModified = default(DateTime), int tenantId = default(int), string cultureName = default(string), string mobilePhone = default(string), MobilePhoneActivationStatus? mobilePhoneActivationStatus = default(MobilePhoneActivationStatus?), string sid = default(string), long ldapQouta = default(long), string ssoNameId = default(string), string ssoSessionId = default(string), DateTime createDate = default(DateTime), Guid? createdBy = default(Guid?), bool? spam = default(bool?))
        {
            this.Id = id;
            this.FirstName = firstName;
            this.LastName = lastName;
            this.UserName = userName;
            this.BirthDate = birthDate;
            this.Sex = sex;
            this.Status = status;
            this.ActivationStatus = activationStatus;
            this.TerminatedDate = terminatedDate;
            this.Title = title;
            this.WorkFromDate = workFromDate;
            this.Email = email;
            this.Contacts = contacts;
            this.ContactsList = contactsList;
            this.Location = location;
            this.Notes = notes;
            this.Removed = removed;
            this.LastModified = lastModified;
            this.TenantId = tenantId;
            this.CultureName = cultureName;
            this.MobilePhone = mobilePhone;
            this.MobilePhoneActivationStatus = mobilePhoneActivationStatus;
            this.Sid = sid;
            this.LdapQouta = ldapQouta;
            this.SsoNameId = ssoNameId;
            this.SsoSessionId = ssoSessionId;
            this.CreateDate = createDate;
            this.CreatedBy = createdBy;
            this.Spam = spam;
        }

        /// <summary>
        /// ID
        /// </summary>
        /// <value>ID</value>
        /*
        <example>aae1e103-bca5-9fa1-ba8c-42058b4abf28</example>
        */
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public Guid Id { get; set; }

        /// <summary>
        /// First name
        /// </summary>
        /// <value>First name</value>
        /*
        <example>Winfield</example>
        */
        [DataMember(Name = "firstName", EmitDefaultValue = true)]
        public string FirstName { get; set; }

        /// <summary>
        /// Last name
        /// </summary>
        /// <value>Last name</value>
        /*
        <example>Wyman</example>
        */
        [DataMember(Name = "lastName", EmitDefaultValue = true)]
        public string LastName { get; set; }

        /// <summary>
        /// Username
        /// </summary>
        /// <value>Username</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "userName", EmitDefaultValue = true)]
        public string UserName { get; set; }

        /// <summary>
        /// Birthday
        /// </summary>
        /// <value>Birthday</value>
        /*
        <example>2008-04-10T06:30+04:00</example>
        */
        [DataMember(Name = "birthDate", EmitDefaultValue = true)]
        public DateTime? BirthDate { get; set; }

        /// <summary>
        /// Sex (male or female)
        /// </summary>
        /// <value>Sex (male or female)</value>
        /*
        <example>true</example>
        */
        [DataMember(Name = "sex", EmitDefaultValue = true)]
        public bool? Sex { get; set; }

        /// <summary>
        /// The date and time when the user account was terminated
        /// </summary>
        /// <value>The date and time when the user account was terminated</value>
        /*
        <example>2008-04-10T06:30+04:00</example>
        */
        [DataMember(Name = "terminatedDate", EmitDefaultValue = true)]
        public DateTime? TerminatedDate { get; set; }

        /// <summary>
        /// Title
        /// </summary>
        /// <value>Title</value>
        /*
        <example>legacy_1080p_small_wooden_mouse</example>
        */
        [DataMember(Name = "title", EmitDefaultValue = true)]
        public string Title { get; set; }

        /// <summary>
        /// Registration date
        /// </summary>
        /// <value>Registration date</value>
        /*
        <example>2008-04-10T06:30+04:00</example>
        */
        [DataMember(Name = "workFromDate", EmitDefaultValue = true)]
        public DateTime? WorkFromDate { get; set; }

        /// <summary>
        /// Email
        /// </summary>
        /// <value>Email</value>
        /*
        <example>Sydney_Roberts4@hotmail.com</example>
        */
        [DataMember(Name = "email", EmitDefaultValue = true)]
        public string Email { get; set; }

        /// <summary>
        /// List of contacts in the string format
        /// </summary>
        /// <value>List of contacts in the string format</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "contacts", EmitDefaultValue = true)]
        public string Contacts { get; set; }

        /// <summary>
        /// List of contacts
        /// </summary>
        /// <value>List of contacts</value>
        /*
        <example>[&quot;some text&quot;]</example>
        */
        [DataMember(Name = "contactsList", EmitDefaultValue = true)]
        public List<string> ContactsList { get; set; }

        /// <summary>
        /// Location
        /// </summary>
        /// <value>Location</value>
        /*
        <example>001 Schroeder Run, New Tabithaport, Colombia</example>
        */
        [DataMember(Name = "location", EmitDefaultValue = true)]
        public string Location { get; set; }

        /// <summary>
        /// Notes
        /// </summary>
        /// <value>Notes</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "notes", EmitDefaultValue = true)]
        public string Notes { get; set; }

        /// <summary>
        /// Specifies if the user account was removed or not
        /// </summary>
        /// <value>Specifies if the user account was removed or not</value>
        /*
        <example>true</example>
        */
        [DataMember(Name = "removed", EmitDefaultValue = true)]
        public bool Removed { get; set; }

        /// <summary>
        /// Last modified date
        /// </summary>
        /// <value>Last modified date</value>
        /*
        <example>2008-04-10T06:30+04:00</example>
        */
        [DataMember(Name = "lastModified", EmitDefaultValue = false)]
        public DateTime LastModified { get; set; }

        /// <summary>
        /// Tenant ID
        /// </summary>
        /// <value>Tenant ID</value>
        /*
        <example>1234</example>
        */
        [DataMember(Name = "tenantId", EmitDefaultValue = false)]
        public int TenantId { get; set; }

        /// <summary>
        /// Spceifies if the user is active or not
        /// </summary>
        /// <value>Spceifies if the user is active or not</value>
        /*
        <example>true</example>
        */
        [DataMember(Name = "isActive", EmitDefaultValue = true)]
        public bool IsActive { get; private set; }

        /// <summary>
        /// Returns false as IsActive should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeIsActive()
        {
            return false;
        }
        /// <summary>
        /// Language
        /// </summary>
        /// <value>Language</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "cultureName", EmitDefaultValue = true)]
        public string CultureName { get; set; }

        /// <summary>
        /// Mobile phone
        /// </summary>
        /// <value>Mobile phone</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "mobilePhone", EmitDefaultValue = true)]
        public string MobilePhone { get; set; }

        /// <summary>
        /// LDAP user identificator
        /// </summary>
        /// <value>LDAP user identificator</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "sid", EmitDefaultValue = true)]
        public string Sid { get; set; }

        /// <summary>
        /// LDAP user quota attribute
        /// </summary>
        /// <value>LDAP user quota attribute</value>
        /*
        <example>1234</example>
        */
        [DataMember(Name = "ldapQouta", EmitDefaultValue = false)]
        public long LdapQouta { get; set; }

        /// <summary>
        /// SSO SAML user identificator
        /// </summary>
        /// <value>SSO SAML user identificator</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "ssoNameId", EmitDefaultValue = true)]
        public string SsoNameId { get; set; }

        /// <summary>
        /// SSO SAML user session identificator
        /// </summary>
        /// <value>SSO SAML user session identificator</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "ssoSessionId", EmitDefaultValue = true)]
        public string SsoSessionId { get; set; }

        /// <summary>
        /// Creation date
        /// </summary>
        /// <value>Creation date</value>
        /*
        <example>2008-04-10T06:30+04:00</example>
        */
        [DataMember(Name = "createDate", EmitDefaultValue = false)]
        public DateTime CreateDate { get; set; }

        /// <summary>
        /// Gets or Sets CreatedBy
        /// </summary>
        /*
        <example>75a5f745-f697-4418-b38d-0fe0d277e258</example>
        */
        [DataMember(Name = "createdBy", EmitDefaultValue = true)]
        public Guid? CreatedBy { get; set; }

        /// <summary>
        /// Gets or Sets Spam
        /// </summary>
        /*
        <example>true</example>
        */
        [DataMember(Name = "spam", EmitDefaultValue = true)]
        public bool? Spam { get; set; }

        /// <summary>
        /// Gets or Sets CheckActivation
        /// </summary>
        /*
        <example>true</example>
        */
        [DataMember(Name = "checkActivation", EmitDefaultValue = true)]
        public bool CheckActivation { get; private set; }

        /// <summary>
        /// Returns false as CheckActivation should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCheckActivation()
        {
            return false;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UserInfo {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  FirstName: ").Append(FirstName).Append("\n");
            sb.Append("  LastName: ").Append(LastName).Append("\n");
            sb.Append("  UserName: ").Append(UserName).Append("\n");
            sb.Append("  BirthDate: ").Append(BirthDate).Append("\n");
            sb.Append("  Sex: ").Append(Sex).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  ActivationStatus: ").Append(ActivationStatus).Append("\n");
            sb.Append("  TerminatedDate: ").Append(TerminatedDate).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  WorkFromDate: ").Append(WorkFromDate).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  Contacts: ").Append(Contacts).Append("\n");
            sb.Append("  ContactsList: ").Append(ContactsList).Append("\n");
            sb.Append("  Location: ").Append(Location).Append("\n");
            sb.Append("  Notes: ").Append(Notes).Append("\n");
            sb.Append("  Removed: ").Append(Removed).Append("\n");
            sb.Append("  LastModified: ").Append(LastModified).Append("\n");
            sb.Append("  TenantId: ").Append(TenantId).Append("\n");
            sb.Append("  IsActive: ").Append(IsActive).Append("\n");
            sb.Append("  CultureName: ").Append(CultureName).Append("\n");
            sb.Append("  MobilePhone: ").Append(MobilePhone).Append("\n");
            sb.Append("  MobilePhoneActivationStatus: ").Append(MobilePhoneActivationStatus).Append("\n");
            sb.Append("  Sid: ").Append(Sid).Append("\n");
            sb.Append("  LdapQouta: ").Append(LdapQouta).Append("\n");
            sb.Append("  SsoNameId: ").Append(SsoNameId).Append("\n");
            sb.Append("  SsoSessionId: ").Append(SsoSessionId).Append("\n");
            sb.Append("  CreateDate: ").Append(CreateDate).Append("\n");
            sb.Append("  CreatedBy: ").Append(CreatedBy).Append("\n");
            sb.Append("  Spam: ").Append(Spam).Append("\n");
            sb.Append("  CheckActivation: ").Append(CheckActivation).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
