/*
 * Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Docspace.Client.FileParameter;
using OpenAPIDateConverter = Docspace.Client.OpenAPIDateConverter;

namespace Docspace.Model
{
    /// <summary>
    /// The external resources settings.
    /// </summary>
    [DataContract(Name = "CultureSpecificExternalResources")]
    public partial class CultureSpecificExternalResources : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CultureSpecificExternalResources" /> class.
        /// </summary>
        /// <param name="api">api.</param>
        /// <param name="common">common.</param>
        /// <param name="forum">forum.</param>
        /// <param name="helpcenter">helpcenter.</param>
        /// <param name="integrations">integrations.</param>
        /// <param name="site">site.</param>
        /// <param name="socialNetworks">socialNetworks.</param>
        /// <param name="support">support.</param>
        /// <param name="videoguides">videoguides.</param>
        public CultureSpecificExternalResources(CultureSpecificExternalResource api = default(CultureSpecificExternalResource), CultureSpecificExternalResource common = default(CultureSpecificExternalResource), CultureSpecificExternalResource forum = default(CultureSpecificExternalResource), CultureSpecificExternalResource helpcenter = default(CultureSpecificExternalResource), CultureSpecificExternalResource integrations = default(CultureSpecificExternalResource), CultureSpecificExternalResource site = default(CultureSpecificExternalResource), CultureSpecificExternalResource socialNetworks = default(CultureSpecificExternalResource), CultureSpecificExternalResource support = default(CultureSpecificExternalResource), CultureSpecificExternalResource videoguides = default(CultureSpecificExternalResource))
        {
            this.Api = api;
            this.Common = common;
            this.Forum = forum;
            this.Helpcenter = helpcenter;
            this.Integrations = integrations;
            this.Site = site;
            this.SocialNetworks = socialNetworks;
            this.Support = support;
            this.Videoguides = videoguides;
        }

        /// <summary>
        /// Gets or Sets Api
        /// </summary>
        [DataMember(Name = "api", EmitDefaultValue = false)]
        public CultureSpecificExternalResource Api { get; set; }

        /// <summary>
        /// Gets or Sets Common
        /// </summary>
        [DataMember(Name = "common", EmitDefaultValue = false)]
        public CultureSpecificExternalResource Common { get; set; }

        /// <summary>
        /// Gets or Sets Forum
        /// </summary>
        [DataMember(Name = "forum", EmitDefaultValue = false)]
        public CultureSpecificExternalResource Forum { get; set; }

        /// <summary>
        /// Gets or Sets Helpcenter
        /// </summary>
        [DataMember(Name = "helpcenter", EmitDefaultValue = false)]
        public CultureSpecificExternalResource Helpcenter { get; set; }

        /// <summary>
        /// Gets or Sets Integrations
        /// </summary>
        [DataMember(Name = "integrations", EmitDefaultValue = false)]
        public CultureSpecificExternalResource Integrations { get; set; }

        /// <summary>
        /// Gets or Sets Site
        /// </summary>
        [DataMember(Name = "site", EmitDefaultValue = false)]
        public CultureSpecificExternalResource Site { get; set; }

        /// <summary>
        /// Gets or Sets SocialNetworks
        /// </summary>
        [DataMember(Name = "socialNetworks", EmitDefaultValue = false)]
        public CultureSpecificExternalResource SocialNetworks { get; set; }

        /// <summary>
        /// Gets or Sets Support
        /// </summary>
        [DataMember(Name = "support", EmitDefaultValue = false)]
        public CultureSpecificExternalResource Support { get; set; }

        /// <summary>
        /// Gets or Sets Videoguides
        /// </summary>
        [DataMember(Name = "videoguides", EmitDefaultValue = false)]
        public CultureSpecificExternalResource Videoguides { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CultureSpecificExternalResources {\n");
            sb.Append("  Api: ").Append(Api).Append("\n");
            sb.Append("  Common: ").Append(Common).Append("\n");
            sb.Append("  Forum: ").Append(Forum).Append("\n");
            sb.Append("  Helpcenter: ").Append(Helpcenter).Append("\n");
            sb.Append("  Integrations: ").Append(Integrations).Append("\n");
            sb.Append("  Site: ").Append(Site).Append("\n");
            sb.Append("  SocialNetworks: ").Append(SocialNetworks).Append("\n");
            sb.Append("  Support: ").Append(Support).Append("\n");
            sb.Append("  Videoguides: ").Append(Videoguides).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
