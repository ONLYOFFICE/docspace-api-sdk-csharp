/*
 * ASC.Web.Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Docspace.Client.FileParameter;
using OpenAPIDateConverter = Docspace.Client.OpenAPIDateConverter;

namespace Docspace.Model
{
    /// <summary>
    /// DocumentBuilderTaskWrapper
    /// </summary>
    [DataContract(Name = "DocumentBuilderTaskWrapper")]
    public partial class DocumentBuilderTaskWrapper : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DocumentBuilderTaskWrapper" /> class.
        /// </summary>
        /// <param name="response">response.</param>
        /// <param name="count">count.</param>
        /// <param name="links">links.</param>
        /// <param name="status">status.</param>
        /// <param name="statusCode">statusCode.</param>
        public DocumentBuilderTaskWrapper(DocumentBuilderTaskDto response = default(DocumentBuilderTaskDto), int count = default(int), List<ActiveConnectionsWrapperLinksInner> links = default(List<ActiveConnectionsWrapperLinksInner>), int status = default(int), int statusCode = default(int))
        {
            this.Response = response;
            this.Count = count;
            this.Links = links;
            this.Status = status;
            this.StatusCode = statusCode;
        }

        /// <summary>
        /// Gets or Sets Response
        /// </summary>
        [DataMember(Name = "response", EmitDefaultValue = false)]
        public DocumentBuilderTaskDto Response { get; set; }

        /// <summary>
        /// Gets or Sets Count
        /// </summary>
        [DataMember(Name = "count", EmitDefaultValue = false)]
        public int Count { get; set; }

        /// <summary>
        /// Gets or Sets Links
        /// </summary>
        [DataMember(Name = "links", EmitDefaultValue = false)]
        public List<ActiveConnectionsWrapperLinksInner> Links { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public int Status { get; set; }

        /// <summary>
        /// Gets or Sets StatusCode
        /// </summary>
        [DataMember(Name = "statusCode", EmitDefaultValue = false)]
        public int StatusCode { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DocumentBuilderTaskWrapper {\n");
            sb.Append("  Response: ").Append(Response).Append("\n");
            sb.Append("  Count: ").Append(Count).Append("\n");
            sb.Append("  Links: ").Append(Links).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  StatusCode: ").Append(StatusCode).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
