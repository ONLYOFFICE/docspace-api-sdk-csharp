/*
 * ASC.Web.Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Docspace.Client.FileParameter;
using OpenAPIDateConverter = Docspace.Client.OpenAPIDateConverter;

namespace Docspace.Model
{
    /// <summary>
    /// Team template parameters
    /// </summary>
    [DataContract(Name = "SchemaRequestsDto")]
    public partial class SchemaRequestsDto : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SchemaRequestsDto" /> class.
        /// </summary>
        /// <param name="id">Team template ID.</param>
        /// <param name="name">Team template name.</param>
        /// <param name="userCaption">User caption.</param>
        /// <param name="usersCaption">Users caption.</param>
        /// <param name="groupCaption">Group caption.</param>
        /// <param name="groupsCaption">Groups caption.</param>
        /// <param name="userPostCaption">User status caption.</param>
        /// <param name="regDateCaption">Registration date caption.</param>
        /// <param name="groupHeadCaption">Group lead caption.</param>
        /// <param name="guestCaption">Guest caption.</param>
        /// <param name="guestsCaption">Guests caption.</param>
        public SchemaRequestsDto(string id = default(string), string name = default(string), string userCaption = default(string), string usersCaption = default(string), string groupCaption = default(string), string groupsCaption = default(string), string userPostCaption = default(string), string regDateCaption = default(string), string groupHeadCaption = default(string), string guestCaption = default(string), string guestsCaption = default(string))
        {
            this.Id = id;
            this.Name = name;
            this.UserCaption = userCaption;
            this.UsersCaption = usersCaption;
            this.GroupCaption = groupCaption;
            this.GroupsCaption = groupsCaption;
            this.UserPostCaption = userPostCaption;
            this.RegDateCaption = regDateCaption;
            this.GroupHeadCaption = groupHeadCaption;
            this.GuestCaption = guestCaption;
            this.GuestsCaption = guestsCaption;
        }

        /// <summary>
        /// Team template ID
        /// </summary>
        /// <value>Team template ID</value>
        /*
        <example>9846</example>
        */
        [DataMember(Name = "id", EmitDefaultValue = true)]
        public string Id { get; set; }

        /// <summary>
        /// Team template name
        /// </summary>
        /// <value>Team template name</value>
        /*
        <example>Winfield Upton</example>
        */
        [DataMember(Name = "name", EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// User caption
        /// </summary>
        /// <value>User caption</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "userCaption", EmitDefaultValue = true)]
        public string UserCaption { get; set; }

        /// <summary>
        /// Users caption
        /// </summary>
        /// <value>Users caption</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "usersCaption", EmitDefaultValue = true)]
        public string UsersCaption { get; set; }

        /// <summary>
        /// Group caption
        /// </summary>
        /// <value>Group caption</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "groupCaption", EmitDefaultValue = true)]
        public string GroupCaption { get; set; }

        /// <summary>
        /// Groups caption
        /// </summary>
        /// <value>Groups caption</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "groupsCaption", EmitDefaultValue = true)]
        public string GroupsCaption { get; set; }

        /// <summary>
        /// User status caption
        /// </summary>
        /// <value>User status caption</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "userPostCaption", EmitDefaultValue = true)]
        public string UserPostCaption { get; set; }

        /// <summary>
        /// Registration date caption
        /// </summary>
        /// <value>Registration date caption</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "regDateCaption", EmitDefaultValue = true)]
        public string RegDateCaption { get; set; }

        /// <summary>
        /// Group lead caption
        /// </summary>
        /// <value>Group lead caption</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "groupHeadCaption", EmitDefaultValue = true)]
        public string GroupHeadCaption { get; set; }

        /// <summary>
        /// Guest caption
        /// </summary>
        /// <value>Guest caption</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "guestCaption", EmitDefaultValue = true)]
        public string GuestCaption { get; set; }

        /// <summary>
        /// Guests caption
        /// </summary>
        /// <value>Guests caption</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "guestsCaption", EmitDefaultValue = true)]
        public string GuestsCaption { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SchemaRequestsDto {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  UserCaption: ").Append(UserCaption).Append("\n");
            sb.Append("  UsersCaption: ").Append(UsersCaption).Append("\n");
            sb.Append("  GroupCaption: ").Append(GroupCaption).Append("\n");
            sb.Append("  GroupsCaption: ").Append(GroupsCaption).Append("\n");
            sb.Append("  UserPostCaption: ").Append(UserPostCaption).Append("\n");
            sb.Append("  RegDateCaption: ").Append(RegDateCaption).Append("\n");
            sb.Append("  GroupHeadCaption: ").Append(GroupHeadCaption).Append("\n");
            sb.Append("  GuestCaption: ").Append(GuestCaption).Append("\n");
            sb.Append("  GuestsCaption: ").Append(GuestsCaption).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
