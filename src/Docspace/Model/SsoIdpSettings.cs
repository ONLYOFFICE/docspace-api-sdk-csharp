/*
 * ASC.Web.Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Docspace.Client.FileParameter;
using OpenAPIDateConverter = Docspace.Client.OpenAPIDateConverter;

namespace Docspace.Model
{
    /// <summary>
    /// SsoIdpSettings
    /// </summary>
    [DataContract(Name = "SsoIdpSettings")]
    public partial class SsoIdpSettings : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SsoIdpSettings" /> class.
        /// </summary>
        /// <param name="entityId">Entity ID.</param>
        /// <param name="ssoUrl">SSO URL.</param>
        /// <param name="ssoBinding">SSO binding.</param>
        /// <param name="sloUrl">SLO URL.</param>
        /// <param name="sloBinding">SLO binding.</param>
        /// <param name="nameIdFormat">Name ID format.</param>
        public SsoIdpSettings(string entityId = default(string), string ssoUrl = default(string), string ssoBinding = default(string), string sloUrl = default(string), string sloBinding = default(string), string nameIdFormat = default(string))
        {
            this.EntityId = entityId;
            this.SsoUrl = ssoUrl;
            this.SsoBinding = ssoBinding;
            this.SloUrl = sloUrl;
            this.SloBinding = sloBinding;
            this.NameIdFormat = nameIdFormat;
        }

        /// <summary>
        /// Entity ID
        /// </summary>
        /// <value>Entity ID</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "entityId", EmitDefaultValue = true)]
        public string EntityId { get; set; }

        /// <summary>
        /// SSO URL
        /// </summary>
        /// <value>SSO URL</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "ssoUrl", EmitDefaultValue = true)]
        public string SsoUrl { get; set; }

        /// <summary>
        /// SSO binding
        /// </summary>
        /// <value>SSO binding</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "ssoBinding", EmitDefaultValue = true)]
        public string SsoBinding { get; set; }

        /// <summary>
        /// SLO URL
        /// </summary>
        /// <value>SLO URL</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "sloUrl", EmitDefaultValue = true)]
        public string SloUrl { get; set; }

        /// <summary>
        /// SLO binding
        /// </summary>
        /// <value>SLO binding</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "sloBinding", EmitDefaultValue = true)]
        public string SloBinding { get; set; }

        /// <summary>
        /// Name ID format
        /// </summary>
        /// <value>Name ID format</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "nameIdFormat", EmitDefaultValue = true)]
        public string NameIdFormat { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SsoIdpSettings {\n");
            sb.Append("  EntityId: ").Append(EntityId).Append("\n");
            sb.Append("  SsoUrl: ").Append(SsoUrl).Append("\n");
            sb.Append("  SsoBinding: ").Append(SsoBinding).Append("\n");
            sb.Append("  SloUrl: ").Append(SloUrl).Append("\n");
            sb.Append("  SloBinding: ").Append(SloBinding).Append("\n");
            sb.Append("  NameIdFormat: ").Append(NameIdFormat).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
