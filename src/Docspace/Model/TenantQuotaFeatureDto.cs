/*
 * Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Docspace.Client.FileParameter;
using OpenAPIDateConverter = Docspace.Client.OpenAPIDateConverter;

namespace Docspace.Model
{
    /// <summary>
    /// The tenant quota feature parameters.
    /// </summary>
    [DataContract(Name = "TenantQuotaFeatureDto")]
    public partial class TenantQuotaFeatureDto : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TenantQuotaFeatureDto" /> class.
        /// </summary>
        /// <param name="id">The ID of the tenant quota feature..</param>
        /// <param name="title">The title of the tenant quota feature..</param>
        /// <param name="image">The image URL of the tenant quota feature..</param>
        /// <param name="value">The value of the tenant quota feature..</param>
        /// <param name="type">The type of the tenant quota feature..</param>
        /// <param name="used">used.</param>
        /// <param name="priceTitle">The price title of the tenant quota feature..</param>
        public TenantQuotaFeatureDto(string id = default(string), string title = default(string), string image = default(string), Object value = default(Object), string type = default(string), FeatureUsedDto used = default(FeatureUsedDto), string priceTitle = default(string))
        {
            this.Id = id;
            this.Title = title;
            this.Image = image;
            this.Value = value;
            this.Type = type;
            this.Used = used;
            this.PriceTitle = priceTitle;
        }

        /// <summary>
        /// The ID of the tenant quota feature.
        /// </summary>
        /// <value>The ID of the tenant quota feature.</value>
        /*
        <example>9846</example>
        */
        [DataMember(Name = "id", EmitDefaultValue = true)]
        public string Id { get; set; }

        /// <summary>
        /// The title of the tenant quota feature.
        /// </summary>
        /// <value>The title of the tenant quota feature.</value>
        /*
        <example>legacy_1080p_small_wooden_mouse</example>
        */
        [DataMember(Name = "title", EmitDefaultValue = true)]
        public string Title { get; set; }

        /// <summary>
        /// The image URL of the tenant quota feature.
        /// </summary>
        /// <value>The image URL of the tenant quota feature.</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "image", EmitDefaultValue = true)]
        public string Image { get; set; }

        /// <summary>
        /// The value of the tenant quota feature.
        /// </summary>
        /// <value>The value of the tenant quota feature.</value>
        /*
        <example>{&quot;int&quot;:1234,&quot;string&quot;:&quot;some text&quot;,&quot;boolean&quot;:true}</example>
        */
        [DataMember(Name = "value", EmitDefaultValue = true)]
        public Object Value { get; set; }

        /// <summary>
        /// The type of the tenant quota feature.
        /// </summary>
        /// <value>The type of the tenant quota feature.</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "type", EmitDefaultValue = true)]
        public string Type { get; set; }

        /// <summary>
        /// Gets or Sets Used
        /// </summary>
        [DataMember(Name = "used", EmitDefaultValue = false)]
        public FeatureUsedDto Used { get; set; }

        /// <summary>
        /// The price title of the tenant quota feature.
        /// </summary>
        /// <value>The price title of the tenant quota feature.</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "priceTitle", EmitDefaultValue = true)]
        public string PriceTitle { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TenantQuotaFeatureDto {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  Image: ").Append(Image).Append("\n");
            sb.Append("  Value: ").Append(Value).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  Used: ").Append(Used).Append("\n");
            sb.Append("  PriceTitle: ").Append(PriceTitle).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
