/*
 * ASC.Web.Api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Docspace.Client.FileParameter;
using OpenAPIDateConverter = Docspace.Client.OpenAPIDateConverter;

namespace Docspace.Model
{
    /// <summary>
    /// AuditEventDto
    /// </summary>
    [DataContract(Name = "AuditEventDto")]
    public partial class AuditEventDto : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets ActionId
        /// </summary>
        [DataMember(Name = "actionId", EmitDefaultValue = false)]
        public MessageAction? ActionId { get; set; }

        /// <summary>
        /// Gets or Sets ActionType
        /// </summary>
        [DataMember(Name = "actionType", EmitDefaultValue = false)]
        public ActionType? ActionType { get; set; }

        /// <summary>
        /// Gets or Sets Product
        /// </summary>
        [DataMember(Name = "product", EmitDefaultValue = false)]
        public ProductType? Product { get; set; }

        /// <summary>
        /// Gets or Sets Module
        /// </summary>
        [DataMember(Name = "module", EmitDefaultValue = false)]
        public ModuleType? Module { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="AuditEventDto" /> class.
        /// </summary>
        /// <param name="id">ID.</param>
        /// <param name="date">date.</param>
        /// <param name="user">User.</param>
        /// <param name="userId">User ID.</param>
        /// <param name="action">Action.</param>
        /// <param name="actionId">actionId.</param>
        /// <param name="ip">IP.</param>
        /// <param name="country">Country.</param>
        /// <param name="city">City.</param>
        /// <param name="browser">Browser.</param>
        /// <param name="platform">Platform.</param>
        /// <param name="page">Page.</param>
        /// <param name="actionType">actionType.</param>
        /// <param name="product">product.</param>
        /// <param name="module">module.</param>
        /// <param name="target">List of targets.</param>
        /// <param name="entries">List of entry types.</param>
        /// <param name="context">Context.</param>
        public AuditEventDto(int id = default(int), ApiDateTime date = default(ApiDateTime), string user = default(string), Guid userId = default(Guid), string action = default(string), MessageAction? actionId = default(MessageAction?), string ip = default(string), string country = default(string), string city = default(string), string browser = default(string), string platform = default(string), string page = default(string), ActionType? actionType = default(ActionType?), ProductType? product = default(ProductType?), ModuleType? module = default(ModuleType?), List<string> target = default(List<string>), List<EntryType> entries = default(List<EntryType>), string context = default(string))
        {
            this.Id = id;
            this.Date = date;
            this.User = user;
            this.UserId = userId;
            this.Action = action;
            this.ActionId = actionId;
            this.Ip = ip;
            this.Country = country;
            this.City = city;
            this.Browser = browser;
            this.Platform = platform;
            this.Page = page;
            this.ActionType = actionType;
            this.Product = product;
            this.Module = module;
            this.Target = target;
            this.Entries = entries;
            this.Context = context;
        }

        /// <summary>
        /// ID
        /// </summary>
        /// <value>ID</value>
        /*
        <example>9846</example>
        */
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// Gets or Sets Date
        /// </summary>
        [DataMember(Name = "date", EmitDefaultValue = false)]
        public ApiDateTime Date { get; set; }

        /// <summary>
        /// User
        /// </summary>
        /// <value>User</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "user", EmitDefaultValue = true)]
        public string User { get; set; }

        /// <summary>
        /// User ID
        /// </summary>
        /// <value>User ID</value>
        /*
        <example>aae1e103-bca5-9fa1-ba8c-42058b4abf28</example>
        */
        [DataMember(Name = "userId", EmitDefaultValue = false)]
        public Guid UserId { get; set; }

        /// <summary>
        /// Action
        /// </summary>
        /// <value>Action</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "action", EmitDefaultValue = true)]
        public string Action { get; set; }

        /// <summary>
        /// IP
        /// </summary>
        /// <value>IP</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "ip", EmitDefaultValue = true)]
        public string Ip { get; set; }

        /// <summary>
        /// Country
        /// </summary>
        /// <value>Country</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "country", EmitDefaultValue = true)]
        public string Country { get; set; }

        /// <summary>
        /// City
        /// </summary>
        /// <value>City</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "city", EmitDefaultValue = true)]
        public string City { get; set; }

        /// <summary>
        /// Browser
        /// </summary>
        /// <value>Browser</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "browser", EmitDefaultValue = true)]
        public string Browser { get; set; }

        /// <summary>
        /// Platform
        /// </summary>
        /// <value>Platform</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "platform", EmitDefaultValue = true)]
        public string Platform { get; set; }

        /// <summary>
        /// Page
        /// </summary>
        /// <value>Page</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "page", EmitDefaultValue = true)]
        public string Page { get; set; }

        /// <summary>
        /// List of targets
        /// </summary>
        /// <value>List of targets</value>
        /*
        <example>[&quot;some text&quot;]</example>
        */
        [DataMember(Name = "target", EmitDefaultValue = true)]
        public List<string> Target { get; set; }

        /// <summary>
        /// List of entry types
        /// </summary>
        /// <value>List of entry types</value>
        [DataMember(Name = "entries", EmitDefaultValue = true)]
        public List<EntryType> Entries { get; set; }

        /// <summary>
        /// Context
        /// </summary>
        /// <value>Context</value>
        /*
        <example>some text</example>
        */
        [DataMember(Name = "context", EmitDefaultValue = true)]
        public string Context { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AuditEventDto {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Date: ").Append(Date).Append("\n");
            sb.Append("  User: ").Append(User).Append("\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("  Action: ").Append(Action).Append("\n");
            sb.Append("  ActionId: ").Append(ActionId).Append("\n");
            sb.Append("  Ip: ").Append(Ip).Append("\n");
            sb.Append("  Country: ").Append(Country).Append("\n");
            sb.Append("  City: ").Append(City).Append("\n");
            sb.Append("  Browser: ").Append(Browser).Append("\n");
            sb.Append("  Platform: ").Append(Platform).Append("\n");
            sb.Append("  Page: ").Append(Page).Append("\n");
            sb.Append("  ActionType: ").Append(ActionType).Append("\n");
            sb.Append("  Product: ").Append(Product).Append("\n");
            sb.Append("  Module: ").Append(Module).Append("\n");
            sb.Append("  Target: ").Append(Target).Append("\n");
            sb.Append("  Entries: ").Append(Entries).Append("\n");
            sb.Append("  Context: ").Append(Context).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
